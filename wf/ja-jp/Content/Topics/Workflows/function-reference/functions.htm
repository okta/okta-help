<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="ja-jp" xml:lang="ja-jp" class="_Skins_okta_html5_topnav_nav_poc" data-mc-search-type="NGram" data-mc-help-system-file-name="okta_help.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-searchable="True" data-mc-toc-path="" data-mc-conditions="MultiProdPubish.LEA+Workflows" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="typeofcontent" content="documentation" />
        <meta name="audience" content="admin workflows" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Workflowsの関数</title>
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, height=device-height" />
        <link rel="shortcut icon" href="../../../Resources/Images/favicon.ico" type="image/x-icon" />
        <!-- Google Tag Manager -->
        <!-- End Google Tag Manager -->
        <!-- Google Tag Manager -->
        <!-- End Google Tag Manager -->
        <!-- Pendo Script (Per Chris Bank) -->
        <!-- End Pendo Script -->
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/okta-main-new-nav.css" rel="stylesheet" type="text/css" />
        <link rel="stylesheet" href="https://static.cloud.coveo.com/searchui/v2.5395/css/CoveoFullSearchNewDesign.css" />
        <style>/*&lt;meta /&gt;*/

.button.select-language-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.previous-topic-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <style>/*&lt;meta /&gt;*/

.button.select-language-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.button.previous-topic-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/TableStyles/standard.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/functions.htm" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script>
			/* <![CDATA[ */
			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0], 
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-NMZZV4P');
			/* ]]> */
		</script>
        <script>
			/* <![CDATA[ */
			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0], 
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-KXMLV58');
			/* ]]> */
		</script>
        <script>
		/* <![CDATA[ */
		(function(apiKey){
			(function(p,e,n,d,o){var v,w,x,y,z;o=p[d]=p[d]||{};o._q=o._q||[];
			v=['initialize','identify','updateOptions','pageLoad','track'];for(w=0,x=v.length;w<x;++w)(function(m){
			o[m]=o[m]||function(){o._q[m===v[0]?'unshift':'push']([m].concat([].slice.call(arguments,0)));};})(v[w]);
			y=e.createElement(n);y.async=!0;y.src='https://cdn.pendo.io/agent/static/'+apiKey+'/pendo.js';
			z=e.getElementsByTagName(n)[0];z.parentNode.insertBefore(y,z);})(window,document,'script','pendo');

        pendo.initialize({
            visitor: {
                id:              'VISITOR-UNIQUE-ID'
            },	
            account: {
                id:           'ACCOUNT-UNIQUE-ID'
            }
        });
		})('a9bd3885-93ae-46ab-700b-dd29e613c19d');
		/* ]]> */
		</script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="戻る" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1024px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">メイン コンテンツにスキップ</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">アカウント</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">設定</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">ログアウト</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="ナビゲーション パネルの表示" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="https://support.okta.com/help/s/" alt="ロゴ"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="2" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">アカウント</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">設定</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">ログアウト</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="検索フィールド" placeholder="検索" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">フィルタ:</span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="検索フィルタ" title="すべてのファイル" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">すべてのファイル</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="検索" role="button" tabindex="0"><span class="invisible-label">検索を送信</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NMZZV4P" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KXMLV58" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <!-- Coveo config parameters -->
                                    <div id="coveo_org_id" style="Display:None"><span class="mc-variable okta-coveo-config.OrgId variable">oktaproduction9ounvcxa</span>
                                    </div>
                                    <div id="coveo_rest_uri" style="Display:None"><span class="mc-variable okta-coveo-config.PlatformRestUri variable">https://platform.cloud.coveo.com/rest/search</span>
                                    </div>
                                    <div id="coveo_search_url" style="Display:None"><span class="mc-variable okta-coveo-config.SearchPageUrl variable">https://support.okta.com/help/s/global-search/%40uri</span>
                                    </div>
                                    <div id="coveo_token_url" style="Display:None"><span class="mc-variable okta-coveo-config.SearchTokenServiceUrl variable">https://support.okta.com/help/services/apexrest/PublicSearchToken?site=help</span>
                                    </div>
                                    <!-- End Coveo config parameters -->
                                    <!-- ************************* Coveo Search bar ************************************* -->
                                    <!-- set margin and size in /Content/Resources/Scripts/coveo-resources/css/Coveo.Okta.StandaloneSearchbox.min.css to make room for replacing Flare-generated top-nav with HTML code (see below)-->
                                    <div id="OLC_Coveo_Headline" class="coveo-headline-wrapper" data-mc-conditions="MultiProdPubish.SearchBar">
                                        <div class="slds-p-vertical_small">
                                            <!--Search Bar-->
                                            <div class="slds-grid slds-grid_align-center">
                                                <div id="customSelect" class="CoveoCustomSelect slds-float_right">
                                                </div>
                                                <div id="standaloneSearchbox">
                                                    <div class="CoveoAnalytics" data-search-hub="OktaCommunityFullSearch">
                                                    </div>
                                                    <div class="CoveoTab" data-id="Help" data-caption="Help" style="display:none">
                                                    </div>
                                                    <div class="CoveoSearchbox" data-enable-omnibox="true" data-enable-query-suggest-addon="true">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="replace_top_nav">
                                        <!--<div class="title-bar-layout outer-row">-->
                                        <!--<div class="navigation-wrapper nocontent">
			<ul class="navigation clearfix" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="2" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True" data-mc-chunk="Data/Toc.xml">                               
			<li class="has-children" data-mc-id="0"><a href="javascript:void(0);">Documentation</a></li>
			<li data-mc-id="1"><a href="https://support.okta.com/help/s/documentation">Knowledge base</a></li>
			<li class="has-children" data-mc-id="2"><a href="javascript:void(0);">Community</a></li>
			<li class="has-children" data-mc-id="3"><a href="javascript:void(0);">Product</a></li>
			<li data-mc-id="4"><a href="https://www.okta.com/services/education-services/">Training</a></li>
			</ul>
			</div>-->
                                        <div class="navbar">
                                            <div class="dropdown" data-mc-conditions="MultiProdPubish.DocMenu">
                                                <button class="dropbtn">ドキュメント <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content">
                                                    <div><a href="https://help.okta.com/ja-jp/Content/Topics/ReleaseNotes/okta-relnotes.htm">リリース・ノート</a>
                                                    </div>
                                                    <div><a href="https://help.okta.com/ja-jp/Content/index.htm">製品ドキュメント</a>
                                                    </div>
                                                    <div><a href="https://developer.okta.com/documentation" target="_blank">開発者用ドキュメント<img src="../../../Resources/Images/okta-assets/external-link-icon.svg" style="margin-left: 8px;" /></a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown"><a href="https://support.okta.com/help/s/knowledge">ナレッジ・ベース</a>
                                            </div>
                                            <div class="dropdown">
                                                <button class="dropbtn">コミュニティー <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content">
                                                    <div><a href="https://support.okta.com/help/s/questions?language=en_US">質問</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/group/CollaborationGroup/Recent?language=en_US">ディスカッション</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/events?language=en_US">ウェビナー</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown">
                                                <button class="dropbtn">製品 <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content">
                                                    <div><a href="https://support.okta.com/help/s/ideas" target="_blank">アイデア<img src="../../../Resources/Images/okta-assets/external-link-icon.svg" style="margin-left: 8px;" /></a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/productroadmap?language=en_US">ロードマップ</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/product-hub?language=en_US">製品ハブ</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown"><a href="https://www.okta.com/services/education-services/" target="_blank">トレーニング<span><img src="../../../Resources/Images/okta-assets/external-link-icon.svg" style="margin-left: 8px;" /></span></a>
                                            </div>
                                        </div>
                                        <div class="logo_container"><a class="logo" href="https://support.okta.com/help/s/"><img src="../../../Resources/Images/okta-assets/Logo.png" alt="Okta Support" title="Okta Support" /></a>
                                        </div>
                                    </div>
                                    <!-- **********************  Main content row  ********************** -->
                                    <div class="okta-topics">
                                        <!-- *** Col1: Left Nav Col *** ****commented out, with new left accordion implementation***-->
                                        <!--<div class="is-not-in-mobile">
                <MadCap:menuProxy data-mc-skin="/Project/Skins/okta-left-menu.flskn" mc-linked-toc="/Project/TOCs/left-nav-TOC.fltoc" style="mc-toc-depth: 2;mc-context-sensitive: False;mc-include-parent: True;mc-include-siblings: True;mc-include-children: True;" />
            </div>-->
                                        <!-- *** Col1: Body Col *** -->
                                        <div>
                                            <div class="is-not-in-mobile">
                                                <!-- Breadcrumbs -->
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="パンくず" data-mc-breadcrumbs-divider="  &gt;  " data-mc-breadcrumbs-count="3" data-mc-toc="True">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="toolbar-main">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_okta_toolbar_no_expand mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <button class="button needs-pie select-language-button" title="言語の変更">
                                                            <div>
                                                                <div role="img" class="button-icon-wrapper" aria-label="言語の変更">
                                                                    <div class="button-icon"> </div>
                                                                </div>
                                                            </div>
                                                        </button>
                                                        <button class="button needs-pie previous-topic-button" title="前へ移動" disabled="true">
                                                            <div>
                                                                <div role="img" class="button-icon-wrapper" aria-label="前へ移動">
                                                                    <div class="button-icon"> </div>
                                                                </div>
                                                            </div>
                                                        </button>
                                                        <button class="button needs-pie next-topic-button" title="次へ移動" disabled="true">
                                                            <div>
                                                                <div role="img" class="button-icon-wrapper" aria-label="次へ移動">
                                                                    <div class="button-icon"> </div>
                                                                </div>
                                                            </div>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="body-main">
                                                <!-- Main content body -->
                                                <div role="main" id="mc-main-content">
                                                    <div data-mc-conditions="MultiProdPubish.PYPContent">
                                                        <div data-content-id="hoc-main-content">
                                                            <h1><a name="top"> </a>
                                                                <MadCap:conditionalText data-mc-conditions="MultiProdPubish.Workflows">Workflows</MadCap:conditionalText>の関数</h1>
                                                            <div>
                                                                <p><span style="font-family: 'Proxima Nova';">関数を使用してWorkflowsのデータを操作、変更、コントロールできます。</span> </p>
                                                                <ul>
                                                                    <li><a href="#http">APIコネクタ</a>
                                                                    </li>
                                                                    <li><a href="#branching" class="MCXref xref">分岐</a>
                                                                    </li>
                                                                    <li><a href="#datetime" class="MCXref xref">日付と時刻</a>
                                                                    </li>
                                                                    <li><a href="#encryption" class="MCXref xref">暗号化</a>
                                                                    </li>
                                                                    <li><a href="#errorhandling" class="MCXref xref">エラー処理</a>
                                                                    </li>
                                                                    <li><a href="#filefunctions" class="MCXref xref">ファイル</a>
                                                                    </li>
                                                                    <li><a href="#flocontrol" class="MCXref xref">フロー制御</a>
                                                                    </li>
                                                                    <li><a href="#Flows">フロー</a>
                                                                    </li>
                                                                    <li><a href="#Folders">フォルダー</a>
                                                                    </li>
                                                                    <li><a href="#json" class="MCXref xref">JSON</a>
                                                                    </li>
                                                                    <li><a href="#jwt">JWT</a>
                                                                    </li>
                                                                    <li><a href="#list" class="MCXref xref">リスト</a>
                                                                    </li>
                                                                    <li><a href="#number" class="MCXref xref">数値</a>
                                                                    </li>
                                                                    <li><a href="#object" class="MCXref xref">オブジェクト</a>
                                                                    </li>
                                                                    <li><a href="#stash" class="MCXref xref">テーブル</a>
                                                                    </li>
                                                                    <li><a href="#text" class="MCXref xref">テキスト</a>
                                                                    </li>
                                                                    <li><a href="#truefalse" class="MCXref xref">True/False</a>
                                                                    </li>
                                                                    <li><a href="#url" class="MCXref xref">URL</a>
                                                                    </li>
                                                                    <li><a href="#xml" class="MCXref xref">XML</a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                            <div>
                                                                <div>
                                                                    <div>
                                                                        <h2><a name="http"> </a> <span style="font-family: 'Proxima Nova';color: #000000;">APIコネクタ</span></h2>
                                                                        <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                                            <col class="TableStyle-standard-Column-Column1" style="width: 20%;" /> <col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="HTTP/http_authorization.htm" class="MCXref xref">APIコネクターカードを使った認証</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">                                         APIコネクター（HTTP）関数カードを使用して、サードパーティーサービス用に認証済みの基本、OAuth 2、またはカスタム接続を作成します。 </td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="HTTP/http_errors.htm" class="MCXref xref">HTTPエラー</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">HTTP関数で発生したエラーは通常、呼び出したAPIから返される標準HTTPエラーコードと対応しています。    たとえば、APIからステータスコード400が返された場合は「Bad Request」エラーです。ステータスコードが401なら、エラーは「Unauthorized」です。 ステータスコード、エラー名、一般的な説明の完全なリストについては<a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes">Wikipedia</a>を参照してください。 </td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="HTTP/http_accept.htm" class="MCXref xref">API Endpoint</a></td><td class="TableStyle-standard-BodyD-Column1-Body1"> URLを指定してフローを呼び出します。 </td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="HTTP/http_close.htm" class="MCXref xref">Close</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">                                         API Endpointフローでのみ使用します。<a href="HTTP/http_accept.htm" class="MCXref xref">API Endpoint</a>を参照してください。 <p>この関数は、<a href="Flow-Control/flocontrol_return.htm" class="MCXref xref">Return</a>や<a href="Flow-Control/flocontrol_returnraw.htm" class="MCXref xref">Return Raw</a>と同様に呼び出し元に応答を返してHTTP接続を閉じますが、その後もフローの実行を続けられます。この関数は、接続のタイムアウト前に完了しない可能性があり、その後で呼び出し元が同じ入力でエンドポイントを再度呼び出す可能性があるフローで便利です（これにより、意図しない実行の重複を避けられます）。</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="HTTP/http_delete.htm" class="MCXref xref">Delete</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">HTTP DELETE要求を実行し、その要求の結果と応答ヘッダーを返します。入力には、必要なURL入力と、オプションのヘッダー、本文、クエリー入力を指定します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="HTTP/http_get.htm" class="MCXref xref">Get</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">HTTP GET要求を実行し、その要求の結果と応答ヘッダーを返します。入力には、必要なURL入力と、オプションのauth、ヘッダー、クエリー入力を指定します。それぞれのオプション入力は、単一のオブジェクト型入力、または適切なグループ属性を持つ複数のキーによりモデル化できます。出力には、headersとoutputの2つのキーを持つオブジェクトが返されます。outputキーには応答の本文、headersキーには応答ヘッダーが含まれています。複数のキーと適切なグループ化を使用すると、これらについてより詳細な情報にアクセスできます。注：</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="HTTP/http_post.htm" class="MCXref xref">Post</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">HTTP POST要求を実行し、その要求の結果と応答ヘッダーを返します。入力には、必須のURL入力と、オプションのauth、ヘッダー、本文、クエリー入力を指定します。それぞれのオプション入力は、単一のオブジェクト型入力、または適切なグループ属性を持つ複数のキーによりモデル化できます。出力には、headersとoutputの2つのキーを持つオブジェクトが返されます。outputキーには応答の本文、headersキーには応答ヘッダーが含まれています。複数のキーと適切なグループ化を使用すると、これらについてより詳細な情報にアクセスできます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="HTTP/http_put.htm" class="MCXref xref">Put</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">HTTP PUT要求を実行し、その要求の結果と応答ヘッダーを返します。入力には、必須のURL入力と、オプションのauth、ヘッダー、本文、クエリー入力を指定します。それぞれのオプション入力は、単一のオブジェクト型入力、または適切なグループ属性を持つ複数のキーによりモデル化できます。出力には、headersとoutputの2つのキーを持つオブジェクトが返されます。outputキーには応答の本文、headersキーには応答ヘッダーが含まれています。複数のキーと適切なグループ化を使用すると、これらについてより詳細な情報にアクセスできます。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><a href="HTTP/http_raw.htm" class="MCXref xref">Raw Request</a></td><td class="TableStyle-standard-BodyA-Column1-Body1">高度な関数。このメソッドは、未加工のHTTPリクエストを実行し、フロー構築者がHTTPリクエストのすべての要素をコントロール可能にします。 これにより、たとえばフローからXMLサービスやHTMLサービスを呼び出せるほか、他の多くの高度な使用法が可能になります。 他のHTTP関数は、一般的なJSONベースのサービスで使いやすいように最適化されています。Raw Request関数はより柔軟ですが、使い方が多少難しくなります。Raw Requestのユースケースのいくつかを示します。</td></tr></tbody></table>
                                                                    </div>
                                                                    <h2><a name="branching"> </a> <span style="font-family: 'Proxima Nova';color: #000000;">分岐</span></h2>
                                                                    <table style="mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                                        <col class="TableStyle-standard-Column-Column1" style="width: 20%;" /> <col class="TableStyle-standard-Column-Column1" style="width: 80%;" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Branching/branching_assignif.htm" class="MCXref xref">Assign If</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">条件ステートメントの結果がtrueかfalseかに基づいて値を割り当てます。outputの可能な値が2つより多い場合は、<a href="Branching/branching_lookup.htm" class="MCXref xref">Lookup</a>を参照してください。</td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions="MultiProdPubish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Branching/branching_continueif.htm" class="MCXref xref">Continue If</a></td><td class="TableStyle-standard-BodyD-Column1-Body2"> 条件テストの結果がtrueかfalseかに基づいて、フローを続行または停止します。   条件がtrueのときにエラーのあるフローを停止するには、代わりに<a href="Error-Handling/errorhandling_throwif.htm" class="MCXref xref">Return Error If</a>を使用します。 </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Branching/branching_if.htm" class="MCXref xref">If/Else</a></td><td class="TableStyle-standard-BodyD-Column1-Body1"> If/Else条件ステートメントは、フローで従うべきステップを決定するために使用します。 </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Branching/branching_branch.htm" class="MCXref xref">If/ElseIf</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">複数の<cite>if</cite>および<cite>else if</cite>条件に基づいて、異なるアクションの実行を指定します（一部のプログラミング言語での<cite>Switch</cite>や<cite>Case</cite>と同様です）。単一の条件に基づいて異なるアクションを指定するには、<a href="Branching/branching_if.htm" class="MCXref xref">If/Else</a>を使用します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><a href="Branching/branching_lookup.htm" class="MCXref xref">Lookup</a></td><td class="TableStyle-standard-BodyA-Column1-Body1">ルックアップテーブルを使用して値を別の値に変換します。たとえば、1つのWebサービスコードを別のWebサービスコードに、部門名を連絡先メールに変換できます。</td></tr></tbody></table>
                                                                </div>
                                                                <div>
                                                                    <h2><a name="datetime"> </a> <span style="font-family: 'Proxima Nova';color: #000000;">日付と時刻</span></h2>
                                                                    <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                                        <col class="TableStyle-standard-Column-Column1" style="width: 20%;" /> <col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Date&amp;Time/datetime_add.htm" class="MCXref xref">Add</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">開始の日付と時刻に時間単位（例：秒）の倍数を加算し、結果の日付を返します。 </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Date&amp;Time/datetime_fromiso.htm" class="MCXref xref">Convert</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">日付と時刻を各種の形式に変換します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Date&amp;Time/datetime_format.htm" class="MCXref xref">Date to Text</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">日時を指定のタイムゾーンで、与えられた形式に変換します。  </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Date&amp;Time/datetime_diff.htm" class="MCXref xref">Difference</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">2つの日付の時間の差を返します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Date&amp;Time/datetime_epoch.htm" class="MCXref xref">Epoch</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">指定された日時を、1970年1月1日（UTC/GMTの真夜中）から経過した秒数に変換します。うるう秒は数えません。これは、一部のシステムの標準日付形式です。  </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Date&amp;Time/datetime_iso.htm" class="MCXref xref">ISO</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">指定された日付と時刻について、UTC "Z"表記を使用し、対応するiso8601文字列を返します。現地のタイムゾーンへの調整は行われません（例：「2016-09-07T16:55:25.670Z」）。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Date&amp;Time/datetime_now.htm" class="MCXref xref">Now</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">現在の日付と時刻を各種の形式で返します。これらはすべてUTC時刻です（現地のタイムゾーンに調整されません）。 日付をタイムゾーンに調整するには、 <a href="Date&amp;Time/datetime_format.htm" class="MCXref xref">Date to Text</a> 関数を使用します。  </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Date&amp;Time/datetime_subtract.htm" class="MCXref xref">Subtract</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">開始の日付と時刻から時間単位（例：秒）の倍数を減算し、結果の日付を返します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Date&amp;Time/datetime_parse.htm" class="MCXref xref">Text to Date</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">テキストの内容から、指定された書式に従って日付と時刻を作成します。指定された書式により、「start」入力の内容の書式が識別されます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2"><a href="Date&amp;Time/datetime_unix.htm" class="MCXref xref">UNIX</a></td><td class="TableStyle-standard-BodyA-Column1-Body2">指定された日時を、1970年1月1日（UTC/GMTの真夜中）から経過したミリ秒の数に変換します。うるう秒は数えません。これは、一部のシステムの標準日付形式です。  経過時間をミリ秒の代わりに秒で計算する場合は、<a href="Date&amp;Time/datetime_epoch.htm" class="MCXref xref">Epoch</a> を参照してください。</td></tr></tbody></table>
                                                                </div> <div><h2><a name="encryption"></a><span style="font-family: 'Proxima Nova';color: #000000;">暗号化</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Encryption/encryption_aes.htm" class="MCXref xref">AES</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">入力テキストをAES暗号化し、暗号化されたテキストを返します。OpenSSLで指定された任意のaesベースのアルゴリズムを使用できます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><p><a href="Encryption/encryption_decipher.htm" class="MCXref xref">Decrypt</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>キーと、指定されたOpenSSLアルゴリズムを使用し、base64エンコーディングからテキストを復号します。</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Encryption/encryption_cipher.htm" class="MCXref xref">Encrypt</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">キーと、指定されたOpenSSLアルゴリズムを使用し、テキストをbase64エンコーディングに暗号化します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Encryption/encryption_hash.htm" class="MCXref xref">Hash</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">入力テキストをハッシュ暗号化し、出力に返される文字列を16進、2進、またはbase64エンコーディングでダイジェストします。OpenSSLで指定された任意のハッシュアルゴリズムを使用できます。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Encryption/encryption_hmac.htm" class="MCXref xref">HMAC</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">入力テキストをHMAC暗号化し、暗号化されたテキストを返します。OpenSSLで指定された任意のHMACアルゴリズムを使用できます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Encryption/encryption_sha1.htm" class="MCXref xref">SHA1</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">入力テキストをSHA1暗号化し、暗号化されたテキストを返します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Encryption/encryption_sha256.htm" class="MCXref xref">SHA256</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">入力テキストをSHA256暗号化し、暗号化されたテキストを返します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2"><p><a href="Encryption/encryption_sign.htm" class="MCXref xref">Sign</a></p></td><td class="TableStyle-standard-BodyA-Column1-Body2"><p>入力テキストを、入力アルゴリズムとプライベートキーでSign暗号化し、出力に返される文字列を16進、2進、またはbase64エンコーディングでダイジェストします。</p></td></tr></tbody></table></div> <div><h2><a name="errorhandling"></a><span style="font-family: 'Proxima Nova';color: #000000;">エラー処理</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="Error-Handling/errorhandling_trycatch.htm" class="MCXref xref">If Error</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>フローを停止せずエラーを処理するため、別のアクションを指定します。</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Error-Handling/errorhandling_throw.htm" class="MCXref xref">Return Error</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">エラーをスローしてフローを終了します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><a href="Error-Handling/errorhandling_throwif.htm" class="MCXref xref">Return Error If</a></td><td class="TableStyle-standard-BodyA-Column1-Body1">条件テストの結果がtrueなら、エラーをスローしてフローを終了します。  フローを条件付きで停止するとき、それを通常の動作として扱い、エラーにしない場合は、<a href="Branching/branching_continueif.htm" class="MCXref xref">Continue If</a>を使用してください。</td></tr></tbody></table></div> <div><h2><a name="filefunctions"></a><span style="font-family: 'Proxima Nova';color: #000000;">ファイル</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="File/filefunctions_largedownload.htm" class="MCXref xref">Download</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">HTTPまたはHTTPSを使用して、Designerファイルシステムにファイルをダウンロードします。 たとえば、ブラウザーのURLを使用してアクセス可能な画像やドキュメントなどのファイルは、この関数でダウンロードできます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="File/filefunctions_info.htm" class="MCXref xref">Info</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">ファイルの情報を取得します。使用するには、フローでこの関数より前にダウンロードしたファイルのFile Contentsを入力に設定します。 出力には、そのファイルについての情報が含まれます。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="File/filefunctions_largemultipartupload.htm" class="MCXref xref">Multipart Upload</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">ソフトウェアのファイルシステムからWebサービスに、httpまたはhttpsを使用し、マルチパート形式のデータとしてファイルをアップロードします。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2"><a href="File/filefunctions_largeupload.htm" class="MCXref xref">Upload</a></td><td class="TableStyle-standard-BodyA-Column1-Body2">ソフトウェアのファイルシステムからWebサービスに、HTTPまたはHTTPSを使用してファイルをアップロードします。 </td></tr></tbody></table></div> <div><h2><a name="flocontrol"></a><span style="font-family: 'Proxima Nova';color: #000000;">フロー制御</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Flow-Control/flocontrol_let.htm" class="MCXref xref">Assign</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">与えられた入力に基づいて、新しい出力フィールドを作成します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><p><a href="Flow-Control/flocontrol_spawn.htm" class="MCXref xref">Call Flow</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>現在のフローのコンテキスト内で、別のフローを実行します。 その別のフローが完了すると、今のフローが再開されます。他のフローの完了を待つ必要がない場合は、<a href="Flow-Control/flocontrol_run.htm" class="MCXref xref">Call Flow Async</a>を使用できます。</p></td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions="MultiProdPubish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Flow-Control/flocontrol_run.htm" class="MCXref xref">Call Flow Async</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">別のフローを開始してから、そのフローの完了を待たずに次に進みます。複数のCall Flow Asyncカードをつなげると、異なるアクションの組を同時に開始できます（並列実行）。</td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions="MultiProdPubish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body2"><p><a href="Flow-Control/flocontrol_pause.htm" class="MCXref xref">Pause</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Pause関数は現在のところ、プログラムで再開されるフローで使用したときのみ動作します。特定の時間だけ、または特定の時間までフローを一時停止するには、<a href="Flow-Control/flocontrol_wait.htm" class="MCXref xref">Wait For</a>または<a href="Flow-Control/flocontrol_until.htm" class="MCXref xref">Wait Until</a>関数を使用してください。</p></td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions="MultiProdPubish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="Flow-Control/flocontrol_pauseraw.htm" class="MCXref xref">Pause Raw</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>実行中のフローの実行を一時停止し、未加工のhttpデータを呼び出し元に返します。resume APIを呼び出すと再開できます。</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Flow-Control/flocontrol_times.htm" class="MCXref xref">Repeat</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">ヘルパーフローを指定した回数だけ実行します｡ </td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions="MultiProdPubish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="Flow-Control/flocontrol_return.htm" class="MCXref xref">Return</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>フローを終了し、フローの呼び出し元に値を返します。</p></td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions="MultiProdPubish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body2"><p><a href="Flow-Control/flocontrol_returnraw.htm" class="MCXref xref">Return Raw</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>HTTP応答へのフルコントロール付きで、呼び出し元にデータを返します。</p></td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions="MultiProdPubish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="Flow-Control/flocontrol_wait.htm" class="MCXref xref">Wait For</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>フローを一時停止し、指定された時間だけ待ってからフローの実行を再開します。 </p></td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions="MultiProdPubish.Workflows"><td class="TableStyle-standard-BodyC-Column1-Body2"><a href="Flow-Control/flocontrol_until.htm" class="MCXref xref">Wait Until</a></td><td class="TableStyle-standard-BodyA-Column1-Body2">フローを一時停止し、特定の日時まで待ってからフローの実行を継続します。</td></tr></tbody></table></div><h2><a name="Flows"></a>フロー</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" data-mc-conditions="" /><col class="TableStyle-standard-Column-Column1" data-mc-conditions="" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><p><a href="Flows/flows_exportflow.htm" class="MCXref xref">Export Flow</a></p></td><td class="TableStyle-standard-BodyA-Column1-Body1"><p>単一のフローに含まれるすべての要素を、JSONファイルとしてエクスポートします。 </p></td></tr></tbody></table><h2><a name="Folders"></a>フォルダー</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" data-mc-conditions="" /><col class="TableStyle-standard-Column-Column1" data-mc-conditions="" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><p><a href="Folders/folders_exportfolder.htm" class="MCXref xref">Export Folder</a></p></td><td class="TableStyle-standard-BodyA-Column1-Body1"><p>1つ以上のフローを含むフォルダーを、JSONファイルとしてエクスポートします。</p></td></tr></tbody></table> <div><h2><a name="json"></a><span style="font-family: 'Proxima Nova';color: #000000;">JSON</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="JSON/json_parse.htm" class="MCXref xref">Parse</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">この関数は、JSON文字列を解析し、オブジェクトやリストなどの型付きフィールドに変換します。これらは以後の関数で使用できます。 この関数は、<a href="JSON/json_stringify.htm" class="MCXref xref">Stringify</a>関数の逆の動作を行います。 </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2"><a href="JSON/json_stringify.htm" class="MCXref xref">Stringify</a></td><td class="TableStyle-standard-BodyA-Column1-Body2">この関数は、オブジェクトやリストなどの型付きの値を、JSON文字列に変換します。  この関数は、<a href="JSON/json_parse.htm" class="MCXref xref">Parse</a> 関数の逆の動作を行います。 </td></tr></tbody></table></div> <div><h2><a name="jwt"></a><span style="font-family: 'Proxima Nova';color: #000000;">JWT</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="JWT/jwt_decode.htm" class="MCXref xref">Decode</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">署名の検証なしにJWTをデコードします。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="JWT/jwt_sign.htm" class="MCXref xref">Sign</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">JWTをエンコードして署名します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><a href="JWT/jwt_verify.htm" class="MCXref xref">Verify</a></td><td class="TableStyle-standard-BodyA-Column1-Body1">JWTをデコードして検証します。</td></tr></tbody></table></div> <div><h2><a name="list"></a><span style="font-family: 'Proxima Nova';color: #000000;">リスト</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 157px;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="List/list_push.htm" class="MCXref xref">Add to End</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1">リストの末尾にアイテムを追加します (Pushとも呼ばれます)。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><p><a href="List/list_unshift.htm" class="MCXref xref">Add to Front</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body2">リストの先頭にアイテムを追加します (Unishiftとも呼ばれます)。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_at.htm" class="MCXref xref">At</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">リスト内で指定された位置のアイテムを返します。最初のアイテムは位置0です。 </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_collapse.htm" class="MCXref xref">Collapse</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">オブジェクトのリストについて、各オブジェクトをリストの順序に結合し、単一のオブジェクトにまとめます。オブジェクトのキーがオーバーラップしている場合、後に出現する値が前の値より優先されます。</td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="List/list_concat.htm" class="MCXref xref">Combine All（すべて結合）</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>2つ以上のリストの内容を結合します。</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_construct.htm" class="MCXref xref">Construct</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">値の組から新しいリストを構築します。 </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_difference.htm" class="MCXref xref">Difference</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">リスト（list1）から、2番目のリスト（list2）にも存在するアイテムを削除します。 出力は、list2に存在しないアイテムのみを含む、list1のサブセットである新しいリストです。 リストのアイテムは、テキスト、数値、オブジェクトなど、どのような型でもかまいせん。 3つのリストはすべて同じ型に設定する必要があります。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_filterby.htm" class="MCXref xref">Filter</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">リストにフィルタリングを行い、特定の条件を満たすアイテムのみを含めるようにします。複雑な条件に基づいてフィルタリングを行うには、<a href="List/list_filter.htm" class="MCXref xref">Filter Custom</a>を使用してください。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_filter.htm" class="MCXref xref">Filter Custom</a></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Filter Custom関数は、指定されたリストから、テストに合格したアイテムのみを含む新しいリストを作成します。   テストは、アイテムごとに1回ヘルパーフローを呼び出して行われます（<a href="../learn/about-parent-flows.htm" class="MCXref xref">親フローについて</a>を参照）。フローは、そのアイテムを出力リストに含めるべきかどうかをtrueまたはfalseで返します。 簡単な比較テストを使用してフィルタリングを行うには、<a href="List/list_filterby.htm" class="MCXref xref">Filter</a>関数を代わりに使用してください。</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_findby.htm" class="MCXref xref">Find</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">リストから、指定された条件を満たす最初のアイテムを見つけます。 複雑な条件に基づいて検索を行うには、<a href="List/list_find.htm" class="MCXref xref">Find Custom</a>を使用してください。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_find.htm" class="MCXref xref">Find Custom</a></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>リストのアイテムに1つずつヘルパーフローを実行してアイテムを見つけ、見つかった最初のアイテムを返します。フローはtrueを返します。単純な検索には、<a href="List/list_findby.htm" class="MCXref xref">Find</a>関数を代わりに使用してください。 </p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_flatten.htm" class="MCXref xref">Flatten</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">リストを含むリストを受け付けて、単一のリストに変換します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_each.htm" class="MCXref xref">For Each</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">リストを処理し、アイテムごとに ヘルパーフローを呼び出し ます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><p><a href="List/list_asynceach.htm" class="MCXref xref">For Each - Ignore Errors</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body2">リストを処理し、アイテムごとにヘルパーフローを呼び出します。 この関数は<a href="List/list_each.htm" class="MCXref xref">For Each</a>関数とほぼ同じですが、1つ重要な相違点があります。 For Eachは、ヘルパーフローでアイテムのいずれかを処理するときにエラーが発生すると、それ以後のアイテムの処理を中止します。これに対して、この関数はヘルパーフローでエラーが発生しても、すべてのアイテムの処理を続けます。 </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_shift.htm" class="MCXref xref">Get First Item</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">指定されたリストから、最初のアイテムと、そのアイテムを削除したリストの2つの出力を返します (Shiftとも呼ばれます)。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_pop.htm" class="MCXref xref">Get Last Item</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">指定されたリストから、最後のアイテムと、そのアイテムを削除したリストの2つの出力を返します (Popとも呼ばれます)。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="List/list_groupby.htm" class="MCXref xref">Group By</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>リストを取り、指定したパスにある元のリストの値でグループ分けしたリストを出力します。</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_includes.htm" class="MCXref xref">Includes</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">リストに特定のアイテムが含まれているかどうかをチェックします。出力はTrue/Falseの値で、リストにアイテムが含まれていればtrue、含まれていなければfalseを返します。リストのアイテムは、テキスト、数値、オブジェクトなど、どのような型でもかまいせん。 値はその型のアイテムにする必要があります。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_indexby.htm" class="MCXref xref">Index By</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">この関数は、一般的なAPIパターンとして、サービスからフィールド値のリストがオブジェクトのリストとして返され、それぞれのオブジェクトにキーの1つとしてフィールド名、もう1つのキーとしてフィールドの値が含まれている場合のために設計されています。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_intersection.htm" class="MCXref xref">Intersection</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">2つ以上の入力リストを受け付けて、すべての入力リストに含まれているアイテムのみを含む新しいリストを作成します。 リストのアイテムは、テキスト、数値、オブジェクトなど、どのような型でもかまいせんが、すべてのリストのアイテムが同じ型の必要があります。 </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_length.htm" class="MCXref xref">Length</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">リストのアイテム数を調べます。 </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_errors.htm" class="MCXref xref">List - Errors</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">多くのリスト関数は、別のフローを呼び出してリストを処理します（Filter、Find、For Each、Map、Reduce、Sort、Uniqueなど）。これらのカードのいずれかでエラーが発生した場合、関数が呼び出したフローの［Flow History（フロー履歴）］を調べると、エラーの詳細が明らかになることがあります。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_join.htm" class="MCXref xref">List to Text</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">この関数は、オプションのセパレーターを使用し、リストから単一のテキスト出力を生成します。たとえば、製品名のリストがある場合、この関数を使用して製品名のカンマ区切りリストを作成し、メールに含めることができます。</td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_map.htm" class="MCXref xref">Map</a></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Map関数を使用して、リストのアイテムごとにヘルパーフローを実行し、新しいリストに変換できます。<a href="../learn/about-parent-flows.htm" class="MCXref xref">親フローについて</a>を参照してください。</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_merge.htm" class="MCXref xref">Merge</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">2つ以上のリストのオブジェクトを一致オフセットで結合します。 複数のリストで、同じオフセットに同じキーが存在するアイテムについては、後のリストの値により、前のリストの値が上書きされます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_pluck.htm" class="MCXref xref">Pluck</a></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>この関数はオブジェクトのリストを受け付け、サブリストを生成します。入力リストの各オブジェクトから、<strong>key</strong>で指定されたキーを抽出し、それらの値を出力リストに入れます。   <strong>list</strong> 入力はオブジェクトのリストであることが必要です。</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_reduce.htm" class="MCXref xref">Reduce</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">この関数は、リストの各アイテムについてヘルパーフローを実行し、単一の累積値を生成します。    たとえば、リストの最も大きな数値を判定する、テキストのリストに「A」で始まるテキストアイテムがいくつ存在するか数えるなどを行えます。結果は数値だけではなく任意の型を使用できるので、Reduceを使用してテキスト、日付、true/false、オブジェクト、またはこれらのリストを構築することもできます。   </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_uniqueby.htm" class="MCXref xref">Remove Duplicates（重複の削除）</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">リストから重複アイテムを削除します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_reverse.htm" class="MCXref xref">Reverse</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">リストのアイテムの順序を逆転します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_sample.htm" class="MCXref xref">Sample</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">リストからランダムなサンプルを生成します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_slice.htm" class="MCXref xref">Slice</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">開始および終了ポイントを使用して、リストのサブセットを選択します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_sortby.htm" class="MCXref xref">Sort</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">リストを最も小さい値から、最も大きい値への順に並べ替えます。 </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_sort.htm" class="MCXref xref">Sort Custom</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">Sort Customを使用すると、別のフローを呼び出し、各アイテムの並べ替えるに使用される値を生成して、リストのカスタム並べ替えを行えます。単純な並べ替えには、<a href="List/list_sortby.htm" class="MCXref xref">Sort</a>関数を代わりに使用してください。 </td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2"><p><a href="List/list_split.htm" class="MCXref xref">Split</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>特定のインデックス値でリストを分割します。</p></td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="List/list_stats.htm" class="MCXref xref">Statistics</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>数値のリストについての統計を読み取ります。</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_sum.htm" class="MCXref xref">Sum</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">数値のリストの合計値を計算します。この関数は、数値型のリストのみを受け付けます。 数値がテキストとして書式化されているリストの場合、<a href="List/list_map.htm" class="MCXref xref">Map</a>関数を使用して各アイテムをテキストから数値に変換できます。 数値がオブジェクトのリストに格納されている場合、<a href="List/list_pluck.htm" class="MCXref xref">Pluck</a>関数を使用して数値のリストを生成し、Sumに渡すことができます。 </td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="List/list_swap.htm" class="MCXref xref">Swap</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>リストの2つの要素を交換します。</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_truncate.htm" class="MCXref xref">Truncate</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">リストを指定の長さに切り詰めます。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_union.htm" class="MCXref xref">結合（一意の結合）</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">複数のリストを組み合わせて単一のリストにします。このリストには、入力リストのいずれかに含まれている固有の値がすべて含まれます。リストのアイテムは、テキスト、数値、オブジェクトなど、どのような型でもかまいせんが、出力リストも含め、すべてのリストのアイテムが同じ型の必要があります。 </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="List/list_unique.htm" class="MCXref xref">Unique Custom</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">カスタムロジックを使用して、リストから重複するアイテムを削除する方法を決定できます。 </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="List/list_xor.htm" class="MCXref xref">XOR</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">XORは「排他的論理和」で、2つの入力リストを受け付け、入力リストの片方に含まれているが、両方には含まれていないアイテムすべてを含む、新しいリストを生成します。リストのアイテムは、テキスト、数値、オブジェクトなど、どのような型でもかまいせんが、両方の入力リストと出力リストのすべてが同じ型に設定されている必要があります。  </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2"><a href="List/list_zip.htm" class="MCXref xref">Zip</a></td><td class="TableStyle-standard-BodyA-Column1-Body2">長さが同じ2つのリストを受け付けて結合し、対応するペアのリストのリストに変換します。たとえば、<code>[1,2,3]</code>と<code>["a","b","c"]</code>というリストにZipを使用すると、<code>[[1,"a"],[2,"b"],[3,"c"]]</code>という新しいリストが生成されます。入力リストは、どのような型のリストでもかまいません。</td></tr></tbody></table></div><div><h2><a name="number"></a><span style="font-family: 'Proxima Nova';color: #000000;">数値</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Number/number_abs.htm" class="MCXref xref">Absolute Value</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">数値の絶対値を計算します。これは、正負を問わない数値の大きさです。たとえば、-5と5の絶対値はどちらも5です。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Number/number_add.htm" class="MCXref xref">Add</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">入力値の合計値を返します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Number/number_divide.htm" class="MCXref xref">Divide</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">2つの値に除算操作を行い、商を返します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Number/number_exp.htm" class="MCXref xref">Exponent</a></td><td class="TableStyle-standard-BodyD-Column1-Body2"><a href="https://en.wikipedia.org/wiki/E_(mathematical_constant)">オイラー数</a><code>e</code>（約2.718）の指定された数値によるべき乗（指数）を計算します。別の基数を使用して指数を計算するには、<a href="Number/number_power.htm" class="MCXref xref">Power</a>を代わりに使用してください。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Number/number_factorial.htm" class="MCXref xref">Factorial</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">数値の階乗を計算します。数値が0より小さい場合は0が返されます。階乗とは整数について、その整数、およびそれより小さいすべての整数の積です。たとえば、5の階乗は<code>5×4×3×2×1</code>で、120です。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Number/number_expression.htm" class="MCXref xref">Formula</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">ドラッグアンドプロップしたフィールドと、入力した演算子、関数、数値を組み合わせて、数式を構築します。   数値フィールドは、数式の中で数値を置ける場所なら、どこにでも配置できます。実行時にフィールドの値を使用して数式が評価され、単一の出力数値が生成されます。   </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Number/number_log.htm" class="MCXref xref">Log</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">対数を計算します。これは、与えられた数値が基数の何乗であるかを意味します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Number/number_multiply.htm" class="MCXref xref">Multiply</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">指定された値の積を返します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Number/number_power.htm" class="MCXref xref">Power</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">基数を指定した数で累乗した結果（指数）を返します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Number/number_random.htm" class="MCXref xref">Random Integer</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">2つの数値の間でランダムな整数を計算します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Number/number_mod.htm" class="MCXref xref">Remainder</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">2つの整数を除算した余りを計算します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Number/number_round.htm" class="MCXref xref">Round</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">数値を、最も近い整数に丸めます。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Number/number_tofixed.htm" class="MCXref xref">Round Decimal Places</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">数値を、指定された数の小数の桁数に丸めます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Number/number_floor.htm" class="MCXref xref">Round Down</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">その数以下で、最も近い整数への丸めを行います (Floorとも呼ばれます)。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Number/number_ceil.htm" class="MCXref xref">Round Up</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">その数以上で、最も近い整数への丸めを行います (Ceilingとも呼ばれます)。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Number/number_sign.htm" class="MCXref xref">Sign</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">数値の符号を計算します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Number/number_sqrt.htm" class="MCXref xref">Square Root</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">数値の平方根を計算します。たとえば、16の平方根は4です。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2"><a href="Number/number_subtract.htm" class="MCXref xref">Subtract</a></td><td class="TableStyle-standard-BodyA-Column1-Body2">2つの値の差を返します。 </td></tr></tbody></table></div> <div><h2><a name="object"></a><span style="font-family: 'Proxima Nova';color: #000000;">オブジェクト</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Object/object_clearempty.htm" class="MCXref xref">Clear Empty</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">オブジェクトから、値と結び付けられていない（null、""、{}など）キーを削除します。Object - Filter関数と似ていますが、フィルタリングを再帰的に行うかどうかを選択できる機能が追加されています。</td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2"><p><a href="Object/object_collapse.htm" class="MCXref xref">Collapse</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>keyとvalueのプロパティを持つオブジェクトのリストを1つのJSONオブジェクトに結合します。これはSplit関数カードとは逆の働きをします。</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Object/object_construct.htm" class="MCXref xref">Construct</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">ユーザー定義入力の組に基づいて、新しいオブジェクトを作成します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Object/object_filter.htm" class="MCXref xref">Filter</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">Filterカードは、オブジェクトから、値と結び付けられていない (null、""、{}など) キーを削除します。オブジェクトが他のオブジェクトを含むことができる場合、<a href="Object/object_clearempty.htm" class="MCXref xref">Clear Empty</a>カードを代わりに使用してください。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Object/object_each.htm" class="MCXref xref">For Each</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">ヘルパーフローを使用して、オブジェクトにキー単位の実行を繰り返します。 入力オブジェクトの各キーについて、そのキーの <strong>key</strong>名と <strong>value</strong>でヘルパーフローが呼び出されます。これらは、<b>［Choose Flow（フローの選択）］</b>ボタンを使用してヘルパーフローを選択してから、Designerのドロップダウンを使用して選択できます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Object/object_get.htm" class="MCXref xref">Get</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">与えられたパスのオブジェクトに格納されている値を読み取ります。たとえば、オブジェクトが<code>{ "a":"one", "b":"two", "c": 17 }</code>なら、パスに <code>b</code>を指定すると、テキスト <code>two</code>が取得されます。オブジェクトから複数の値を同時に取得するには、<a href="Object/object_pick.htm" class="MCXref xref">Get Multiple</a>を代わりに使用してください。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Object/object_pick.htm" class="MCXref xref">Get Multiple</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">オブジェクトから複数の値を同時に取得します。<a href="Object/object_get.htm" class="MCXref xref">Get</a>と似ていますが、Get Multipleカードではオブジェクトの値へのキーやパスを複数指定し、複数の値にアクセスできます。  </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Object/object_keys.htm" class="MCXref xref">Keys</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">Keysカードは、オブジェクト内のキーのリストを生成します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Object/object_process.htm" class="MCXref xref">Map</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">ヘルパーフローを使用してオブジェクトをキーごとに処理し、出力として新しいオブジェクトを作成します。 入力オブジェクトの各キーについて、そのキーの <strong>key</strong>名と <strong>value</strong>でヘルパーフローが呼び出されます。これらは、<strong>［Choose Flow（フローの選択）］</strong>ボタンを使用してヘルパーフローを選択してから、Designerのドロップダウンを使用して選択できます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Object/object_map.htm" class="MCXref xref">Map to List</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">ヘルパーフローを使用してオブジェクトにキー単位の実行を繰り返し行い、出力としてリストを生成します。オブジェクトのキーごとに、1つのアイテムがリストに含まれます。  入力オブジェクトの各キーについて、そのキーの <strong>key</strong>名と <strong>value</strong>でヘルパーフローが呼び出されます。これらは、<b>［Choose Flow（フローの選択）］</b>ボタンを使用してヘルパーフローを選択してから、ヘルパーフロー入力のドロップダウンを使用して選択できます。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Object/object_merge.htm" class="MCXref xref">Merge</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">複数のオブジェクトを単一のオブジェクトに結合します。出力オブジェクトには、入力オブジェクトのいずれかに存在するキー (と、それに関連付けられた値) がすべて含まれます。同じキーが複数の入力オブジェクトに存在する場合、1つの値のみが取得されます。  デフォルトの入力は2つですが、さらに追加することもできます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Object/object_move.htm" class="MCXref xref">Move</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">値をキーから別のキーに移動します。これは本質的に、値を維持したままキーの名前を変更することになります。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Object/object_set.htm" class="MCXref xref">Set</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">オブジェクトのキーを指定された値に設定します。キーが存在しない場合は新たに作成されます。   </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Object/object_size.htm" class="MCXref xref">Size</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">オブジェクトの要素数を返します。</td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="Object/object_split.htm" class="MCXref xref">Split</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>オブジェクトを、それぞれがkeyとvalueのプロパティを持つオブジェクトのリストに分割します。これはCollapse関数カードとは逆の働きをします。</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Object/object_unset.htm" class="MCXref xref">Unset</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">オブジェクトのキーと値のペアを削除します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Object/object_values.htm" class="MCXref xref">Values</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">Valuesカードは、オブジェクト内の値のリストを生成します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2"><a href="Object/object_zip.htm" class="MCXref xref">Zip</a></td><td class="TableStyle-standard-BodyA-Column1-Body2">2つのリストについて、最初のリストのキーを2番目のリストの値にマップして、オブジェクトを作成します。これは、キー名にドットが含まれるオブジェクトを作成するとき特に便利です。</td></tr></tbody></table></div><div><h2><a name="stash"></a><span style="font-family: 'Proxima Nova';color: #000000;">テーブル</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="Tables/stash_cleartable.htm" class="MCXref xref">Clear Table</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>テーブルのすべての行を削除します。</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Tables/stash_createrow.htm" class="MCXref xref">行の作成</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">テーブルに新しい行を作成します。  </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Tables/stash_deleterow.htm" class="MCXref xref">Delete Row</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">テーブルの行を削除します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Tables/stash_exporttocsv.htm" class="MCXref xref">Export To CSV</a></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>テーブルをCSVファイルにエクスポートし、すべての行、またはフィルタリングされた行のサブセットを含めます。 </p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Tables/stash_importfromcsv.htm" class="MCXref xref">Import From CSV</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">CSVファイルの内容をテーブルにインポートします。 </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Tables/stash_readrow.htm" class="MCXref xref">Read Row</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">テーブルの行の値を読み取ります。 </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Tables/stash_readtable.htm" class="MCXref xref">Read Table</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">テーブルIDで識別されるテーブルの列スキーマを返します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Tables/stash_searchrows2.htm" class="MCXref xref">行の検索</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">テーブルで、指定された条件の組と一致する行を探します。  </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><a href="Tables/stash_updaterow.htm" class="MCXref xref">行の更新</a></td><td class="TableStyle-standard-BodyA-Column1-Body1">テーブルの行を更新します。</td></tr></tbody></table></div><div><h2><a name="text"></a><span style="font-family: 'Proxima Nova';color: #000000;">テキスト</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Text/text_at.htm" class="MCXref xref">At</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">テキスト入力の指定位置にある単一の文字を返します。0が最初の位置を表します。単一の文字ではなくセグメント全体を取得するには、<strong>Text Segment</strong>関数を使用します。単一の文字を探すには、<strong>Find</strong>を使用します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Text/text_base64.htm" class="MCXref xref">Base64</a></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>文字列のbase64エンコーディングを返します。たとえば、「Hello」と入力すると「SGVsbG8=」が返されます。詳細については、<a href="https://en.wikipedia.org/wiki/Base64">base64とは</a>を参照してください。 </p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Text/text_base64decode.htm" class="MCXref xref">Base64 Decode</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">base64デコードされたテキストを返します。たとえば、「SGVsbG8=」と入力すると「Hello」にデコードされます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Text/text_compose.htm" class="MCXref xref">Compose</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">入力したテキストと、ドラッグアンドドロップしたフィールドを組み合わせます。実行時に、すべてのテキストがフィールドの値と組み合わせられ、単一のテキスト出力が生成されます。   </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Text/text_concat.htm" class="MCXref xref">Concatenate</a></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>入力を受け付けてスペースなしで組み合わせ、単一のテキスト出力にします。この動作は<a href="Text/text_compose.htm" class="MCXref xref">Compose</a>を使用しても行えます。 </p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Text/text_email.htm" class="MCXref xref">Find Email</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">テキスト内にある、最初の有効なメールアドレスを探して返します。たとえば、入力が「You can reach me at fred@example.com or support@example.com」なら、出力は「fred@example.com」です。 </td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Text/text_find.htm" class="MCXref xref">Find</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">文字列内で、別の文字列が最初に出現する場所を探します。さらに複雑な検索、たとえばパターンに一致する文字列を探すには、<a href="Text/text_match.htm" class="MCXref xref">Find Pattern</a>関数を代わりに使用してください。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Text/text_lastindexof.htm" class="MCXref xref">Find Last</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">テキスト内で最後に一致するものを探します。位置番号を返すか、見つからなかった場合は-1を返します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Text/text_length.htm" class="MCXref xref">Length</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">テキストの長さを文字数で返します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Text/text_match.htm" class="MCXref xref">Find Pattern</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">テキストで、パターンに一致する最初の場所を探します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Text/text_random.htm" class="MCXref xref">Random</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">指定された長さのランダムテキストを返します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Text/text_replace.htm" class="MCXref xref">Replace</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">テキストを検索して置き換えます。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Text/text_replaceany.htm" class="MCXref xref">Replace Patterns</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">複数のパターンのいずれかを探し、単一の値に置き換えます。単一のテキストまたはパターンを探す検索と置き換えには、<a href="Text/text_replace.htm" class="MCXref xref">Replace</a>を代わりに使用してください。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Text/text_split.htm" class="MCXref xref">Split</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">テキストをカンマ、または他の指定された区切り記号により区切られたテキストセグメントのリストに分割します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Text/text_substr.htm" class="MCXref xref">Text Segment</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">テキストの位置を返します（従来は「Substring」と呼ばれていたもの）。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Text/text_tolowercase.htm" class="MCXref xref">To Lower Case</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">テキストのすべての文字を小文字に変換します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="Text/text_touppercase.htm" class="MCXref xref">To Upper Case</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">テキストのすべての文字を大文字に変換します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="Text/text_trim.htm" class="MCXref xref">Trim</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">テキストから、先頭と末尾の空白を削除します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><a href="Text/text_uuid.htm" class="MCXref xref">Unique ID</a></td><td class="TableStyle-standard-BodyA-Column1-Body1">ランダムな一意識別子（UUID）を返します。これはグローバル一意識別子（GUID）と呼ばれることもあります。32桁の16進数（base 16）で表現され、ハイフンにより区切られた5つのグループとして表示されます。</td></tr></tbody></table></div><div><h2><a name="truefalse"></a><span style="font-family: 'Proxima Nova';color: #000000;">True/False</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="True-False/truefalse_nor.htm" class="MCXref xref">All False?</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">すべての入力がfalseならtrue、それ以外の場合はfalseを返します。(ブーリアン演算子NORとも呼ばれます)。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="True-False/truefalse_and.htm" class="MCXref xref">And</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">すべての入力がtrueならture、それ以外の場合はfalseを返します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="True-False/truefalse_nand.htm" class="MCXref xref">Any False?</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">入力のいずれかがfalseならtrue、それ以外の場合はfalseを返します (NANDとも呼ばれます)。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="True-False/truefalse_compare.htm" class="MCXref xref">Compare</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">単純なtrueまたはfalseのテストを実行します。たとえば、<strong>Type</strong>フィールドが「Customer」と等しいか、または<strong>Price</strong>フィールドが1000より大きいかなどをチェックできます。</td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions="MultiProdPubish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="True-False/truefalse_expression.htm" class="MCXref xref">Expression</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">入力した演算子や値と、ドラッグアンドドロップしたフィールドを組み合わせて、TrueまたはFalseの式を構築します。     フィールドは、式の中で値を置ける場所なら、どこにでも配置できます。実行時にフィールドの値を使用して式が評価され、単一のtrueまたはfalseの出力が生成されます。   True/False以外の入力を使用する場合、数値フィールドでは0はfalse、それ以外はtrueに評価されます。テキストフィールドではnullまたは「false」がfalse、それ以外はfrueに評価されます。日付フィールドではタイムスタンプに変換され、比較で使用できます。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="True-False/truefalse_not.htm" class="MCXref xref">Not</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">trueまたはfalseの入力を受け付け、反対の値を返します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="True-False/truefalse_or.htm" class="MCXref xref">Or</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">いずれかの入力がtrueならtrue、それ以外の場合はfalseを返します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="True-False/truefalse_xor.htm" class="MCXref xref">Or (Exclusive)</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">排他的論理和はtrue/false演算子 (XORとも呼ばれます) で、入力の1つ、そして1つだけがtrueのときtrueを、それ以外の場合はfalseを返します。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><a href="True-False/truefalse_xnor.htm" class="MCXref xref">XNOR</a></td><td class="TableStyle-standard-BodyA-Column1-Body1">True/False演算子で、両方の入力がtrue、または両方の入力がfalseならtrue、それ以外の場合はfalseを返します。これは、排他的論理和 (XOR) の逆の動作です。</td></tr></tbody></table></div> <div><h2><a name="url"></a><span style="font-family: 'Proxima Nova';color: #000000;">URL</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="URL/url_decodecomponent.htm" class="MCXref xref">Decode Component</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">URLエンコードされたコンポーネント、たとえばクエリーパラメーターの値などをデコードします。 この関数は、URLエンコードされたすべての文字をデコードし、デコードされたテキストを出力します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="URL/url_decode.htm" class="MCXref xref">Decode Query</a></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>URLエンコードされたクエリー文字列を、クエリーオブジェクトにデコードします。</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="URL/url_encodecomponent.htm" class="MCXref xref">Encode Component</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">テキストを、URL内で使用するための、URLエンコードされたテキストにエンコードします。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><a href="URL/url_encode.htm" class="MCXref xref">Encode Query</a></td><td class="TableStyle-standard-BodyD-Column1-Body2">クエリーオブジェクトを、URLエンコードされたクエリーオブジェクトにエンコードします。</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="URL/url_format.htm" class="MCXref xref">Format</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">URL文字列をコンポーネントから構築します。 </td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2"><a href="URL/url_parse.htm" class="MCXref xref">Parse</a></td><td class="TableStyle-standard-BodyA-Column1-Body2">URL文字列を解析し、正しいエンコーディングでコンポーネントに分割します。</td></tr></tbody></table></div> <div><h2><a name="xml"></a><span style="font-family: 'Proxima Nova';color: #000000;">XML</span></h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">関数</span></p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p><span style="font-family: 'Proxima Nova';">説明</span></p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><a href="XML/xml_build.htm" class="MCXref xref">Build</a></td><td class="TableStyle-standard-BodyD-Column1-Body1">オブジェクトをXML文字列に変換します。</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2"><a href="XML/xml_parse.htm" class="MCXref xref">Parse</a></td><td class="TableStyle-standard-BodyA-Column1-Body2">この関数は、XML文字列をオブジェクトに変換します。XMLをオブジェクトに変換すると、<a href="#list" class="MCXref xref">リスト</a>や<a href="#object" class="MCXref xref">オブジェクト</a>のカテゴリに含まれる多くの組み込み関数を利用して、XML文字列を処理し、得られた値をフローの後の部分で利用できます。  </td></tr></tbody></table></div></div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <!-- Back to Top button --><a href="#" class="sf-back-to-top"><span class="arrow"></span>Top</a>
                                            </div>
                                        </div>
                                        <!-- *** Col2: Right menu Col ***  ****commented out temporarily until redesign for "on this page" implementation, redundant to new left accordion implementation***-->
                                        <!--<div class="is-not-in-mobile">
                <MadCap:menuProxy data-mc-skin="/Project/Skins/okta-right-menu.flskn" mc-linked-toc="/Project/TOCs/okta-TOC.fltoc" style="mc-context-sensitive: True;mc-include-parent: True;mc-include-siblings: False;mc-include-children: True;" />
            </div>-->
                                    </div>
                                    <div class="toolbar-main">
                                        <div class="buttons popup-container clearfix topicToolbarProxy _Skins_okta_toolbar_no_expand mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                            <div class="button-group-container-left">
                                                <button class="button needs-pie select-language-button" title="言語の変更">
                                                    <div>
                                                        <div role="img" class="button-icon-wrapper" aria-label="言語の変更">
                                                            <div class="button-icon"> </div>
                                                        </div>
                                                    </div>
                                                </button>
                                                <button class="button needs-pie previous-topic-button" title="前へ移動" disabled="true">
                                                    <div>
                                                        <div role="img" class="button-icon-wrapper" aria-label="前へ移動">
                                                            <div class="button-icon"> </div>
                                                        </div>
                                                    </div>
                                                </button>
                                                <button class="button needs-pie next-topic-button" title="次へ移動" disabled="true">
                                                    <div>
                                                        <div role="img" class="button-icon-wrapper" aria-label="次へ移動">
                                                            <div class="button-icon"> </div>
                                                        </div>
                                                    </div>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- ***************************** Footer rows ********************************* -->
                                    <!--         <div class="footer2">
            <div>
                <ul>
                    <li><a href="https://fulluat-okta.cs67.force.com/help/s/article/Okta-Community-FAQs">Community FAQ</a>
                    </li>
                    <li><a href="https://support.okta.com/help/s/article/Okta-Community-Terms-and-Conditions">Terms &amp; Conditions</a>
                    </li>
                    <li>Trust</li>
                    <li><a href="https://www.okta.com/contact/">Contact</a>
                    </li>
                    <li>Feedback</li>
                </ul>
            </div>
            <div>
                <p class="try-okta-button"><a role="button" href="https://www.okta.com/free-trial/">Try Okta For Free</a>
                </p>
            </div>
        </div> -->
                                    <div class="footer2">
                                        <div>
                                            <p class="copyright">© Copyright 2022 Okta, Inc. All Rights Reserved. それぞれの商標は、それぞれの商標所有者に帰属します。
	</p>
                                        </div>
                                        <!--             <div>
                <ul>
                    <li><a href="https://twitter.com/okta"><img src="../Images/okta-assets/twitter.png" /></a>
                    </li>
                    <li><a href="https://www.facebook.com/OktaIdentity"><img src="../Images/okta-assets/facebook.png" /></a>
                    </li>
                    <li><a href="https://www.linkedin.com/company/okta-inc-/"><img src="../Images/okta-assets/linkedin.png" /></a>
                    </li>
                    <li><a href="https://www.youtube.com/user/OktaInc"><img src="../Images/okta-assets/youtube.png" /></a>
                    </li>
                    <li><a href="https://www.okta.com"><img src="../Images/okta-assets/okta.png" /></a>
                    </li>
                </ul>
            </div> -->
                                    </div>
                                    <!-- Qualtrics setup to use with script below, replacing getfeedback -->
                                    <div id="ZN_6fGBJ8J3VcIBymN">
                                        <!--DO NOT REMOVE-CONTENTS PLACED HERE-->
                                    </div>
                                    <!-- ***************************** Scripts ************************************* -->
                                    <!-- Foundation -->
                                    <script src="../../../Resources/Scripts/js/app.js">
                                    </script>
                                    <script src="../../../Resources/Scripts/js/vendor/what-input.js">
                                    </script>
                                    <script src="https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.4-rc1/js/foundation.min.js">
                                    </script>
                                    <!-- Ours -->
                                    <!--         <script type="text/javascript" src="../Scripts/back-to-top.js">
        </script>
 -->
                                    <script type="text/javascript" src="../../../Resources/Scripts/js/vendor/qualtrics.js">
                                    </script>
                                    <!-- Coveo -->
                                    <script src="https://static.cloud.coveo.com/searchui/v2.5395/js/CoveoJsSearch.Lazy.min.js" defer="defer">
                                    </script>
                                    <script src="../../../Resources/Scripts/coveo-resources/js/cultures/en.js" id="coveoCultureScript" defer="defer">
                                    </script>
                                    <script src="../../../Resources/Scripts/coveo-resources/js/Coveo.MadcapFlare.RequireJS.js" id="coveoRequireScript" defer="defer">
                                    </script>
                                    <script src="../../../Resources/Scripts/coveo-resources/js/Coveo.MadcapFlare.Okta.js" id="coveoInitscript" defer="defer">
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>
