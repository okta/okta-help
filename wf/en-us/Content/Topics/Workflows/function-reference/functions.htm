<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_okta_html5_topnav_nav_poc" data-mc-search-type="Stem" data-mc-help-system-file-name="okta_help.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-searchable="True" data-mc-toc-path="" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="typeofcontent" content="documentation" />
        <meta name="audience" content="admin workflows" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Functions in Workflows</title>
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, height=device-height" />
        <link rel="shortcut icon" href="../../../Resources/Images/favicon.ico" type="image/x-icon" />
        <!-- Google Tag Manager -->
        <!-- End Google Tag Manager -->
        <!-- Google Tag Manager -->
        <!-- End Google Tag Manager -->
        <!-- Pendo Script (Per Chris Bank) -->
        <!-- End Pendo Script -->
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/Stylesheets/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/okta-main-new-nav.css" rel="stylesheet" type="text/css" />
        <link rel="stylesheet" href="https://static.cloud.coveo.com/searchui/v2.5395/css/CoveoFullSearchNewDesign.css" />
        <style>/*&lt;meta /&gt;*/

.button.select-language-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../Resources/TableStyles/standard.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/functions.htm" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script>
			/* <![CDATA[ */
			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-NMZZV4P');
			/* ]]> */
		</script>
        <script>
			/* <![CDATA[ */
			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-KXMLV58');
			/* ]]> */
		</script>
        <script>
		/* <![CDATA[ */
		(function(apiKey){
			(function(p,e,n,d,o){var v,w,x,y,z;o=p[d]=p[d]||{};o._q=o._q||[];
			v=['initialize','identify','updateOptions','pageLoad','track'];for(w=0,x=v.length;w<x;++w)(function(m){
			o[m]=o[m]||function(){o._q[m===v[0]?'unshift':'push']([m].concat([].slice.call(arguments,0)));};})(v[w]);
			y=e.createElement(n);y.async=!0;y.src='https://cdn.pendo.io/agent/static/'+apiKey+'/pendo.js';
			z=e.getElementsByTagName(n)[0];z.parentNode.insertBefore(y,z);})(window,document,'script','pendo');

        pendo.initialize({
            visitor: {
                id:              'VISITOR-UNIQUE-ID'
            },
            account: {
                id:           'ACCOUNT-UNIQUE-ID'
            }
        });
		})('a9bd3885-93ae-46ab-700b-dd29e613c19d');
		/* ]]> */
		</script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1024px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="https://support.okta.com/help/s/" alt="Okta"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="2" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NMZZV4P" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KXMLV58" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <!-- Coveo config parameters -->
                                    <div id="coveo_org_id" style="Display:None"><span class="mc-variable okta-coveo-config.OrgId variable">oktaproduction9ounvcxa</span>
                                    </div>
                                    <div id="coveo_rest_uri" style="Display:None"><span class="mc-variable okta-coveo-config.PlatformRestUri variable">https://platform.cloud.coveo.com/rest/search</span>
                                    </div>
                                    <div id="coveo_search_url" style="Display:None"><span class="mc-variable okta-coveo-config.SearchPageUrl variable">https://support.okta.com/help/s/global-search/%40uri</span>
                                    </div>
                                    <div id="coveo_token_url" style="Display:None"><span class="mc-variable okta-coveo-config.SearchTokenServiceUrl variable">https://support.okta.com/help/services/apexrest/PublicSearchToken?site=help</span>
                                    </div>
                                    <div id="coveo_dev_org_id" style="Display:None"><span class="mc-variable okta-coveo-config.DevOrgId variable">oktanonproduction1il1gtac7</span>
                                    </div>
                                    <div id="coveo_dev_token" style="Display:None"><span class="mc-variable okta-coveo-config.DevSearchToken variable">xxb48840fe-d60d-4e40-b1d3-522d5a35c384</span>
                                    </div>
                                    <!-- End Coveo config parameters -->
                                    <!-- ************** Coveo Search bar ************************************* -->
                                    <!-- set margin and size in /Content/Resources/Scripts/coveo-resources/css/Coveo.Okta.StandaloneSearchbox.min.css to make room for replacing Flare-generated top-nav with HTML code (see below)-->
                                    <div id="OLC_Coveo_Headline" class="coveo-headline-wrapper" data-mc-conditions="MultiProdPublish.SearchBar">
                                        <div class="slds-p-vertical_small">
                                            <!--Search Bar-->
                                            <div class="slds-grid slds-grid_align-center">
                                                <div id="customSelect" class="CoveoCustomSelect slds-float_right">
                                                </div>
                                                <div id="standaloneSearchbox">
                                                    <div class="CoveoAnalytics" data-search-hub="OktaCommunityFullSearch">
                                                    </div>
                                                    <div class="CoveoTab" data-id="Help" data-caption="Help" style="display:none">
                                                    </div>
                                                    <div class="CoveoSearchbox" data-enable-omnibox="true" data-enable-query-suggest-addon="true">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="replace_top_nav">
                                        <div class="navbar">
                                            <div class="dropdown" data-test="menuBarCategory" data-mc-conditions="MultiProdPublish.DocMenu">
                                                <button class="dropbtn">Documentation <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content" data-test="menuBarItems">
                                                    <div><a href="https://help.okta.com/en-us/Content/Topics/ReleaseNotes/okta-relnotes.htm" data-test="menuBarLink">Release notes</a>
                                                    </div>
                                                    <div><a href="https://help.okta.com/en-us/Content/index.htm" data-test="menuBarLink">Product documentation</a>
                                                    </div>
                                                    <div><a href="https://developer.okta.com/documentation" target="_blank" data-test="menuBarLink">Developer documentation<img src="../../../Resources/Images/okta-assets/external-link-icon.svg" style="margin-left: 8px;" /></a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory"><a href="https://support.okta.com/help/s/knowledge" data-test="menuBarLink">Knowledge base</a>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory">
                                                <button class="dropbtn">Community <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content" data-test="menuBarItems">
                                                    <div><a href="https://support.okta.com/help/s/questions?language=en_US" data-test="menuBarLink">Questions</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/group/CollaborationGroup/Recent?language=en_US" data-test="menuBarLink">Discussions</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/events?language=en_US" data-test="menuBarLink">Webinars</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory">
                                                <button class="dropbtn">Product <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content" data-test="menuBarItems">
                                                    <div><a href="https://support.okta.com/help/s/ideas" target="_blank" data-test="menuBarLink">Ideas<img src="../../../Resources/Images/okta-assets/external-link-icon.svg" style="margin-left: 8px;" /></a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/productroadmap?language=en_US" data-test="menuBarLink">Roadmap</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/product-hub?language=en_US" data-test="menuBarLink">Product hub</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory"><a href="https://www.okta.com/services/education-services/" target="_blank" data-test="menuBarLink">Training<span><img src="../../../Resources/Images/okta-assets/external-link-icon.svg" style="margin-left: 8px;" /></span></a>
                                            </div>
                                        </div>
                                        <div class="logo_container"><a class="logo" href="https://support.okta.com/help/s/" data-test="OktaBanner"><img src="../../../Resources/Images/okta-assets/Logo.png" alt="Okta Support" title="Okta Support" data-test="OktaBannerImg" /></a>
                                        </div>
                                    </div>
                                    <!-- **********************  Main content row  ********************** -->
                                    <div class="okta-topics" data-test="bodyWrapper">
                                        <!-- *** Col1: Body Col *** -->
                                        <div>
                                            <div class="is-not-in-mobile">
                                                <!-- Breadcrumbs -->
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="Breadcrumbs" data-mc-breadcrumbs-divider="  &gt;  " data-mc-breadcrumbs-count="3" data-mc-toc="True">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="toolbar-main" data-test="toolBar">
                                                <div class="buttons popup-container clearfix topicToolbarProxy _Skins_okta_toolbar_no_expand mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                    <div class="button-group-container-left">
                                                        <button class="button needs-pie select-language-button" title="Change language">
                                                            <div>
                                                                <div role="img" class="button-icon-wrapper" aria-label="Change language">
                                                                    <div class="button-icon"> </div>
                                                                </div>
                                                            </div>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="body-main" data-test="bodyContent">
                                                <!-- Main content body -->
                                                <div role="main" id="mc-main-content">
                                                    <div data-content-id="hoc-main-content">
                                                        <h1 data-mc-conditions="MultiProdPublish.Workflows"><a name="top"></a>Functions in Workflows</h1>
                                                        <div>
                                                            <p>Interact with, change, and control your data in Workflows using functions.</p>
                                                            <table style="mc-table-style: url('../../../Resources/TableStyles/standard.css');border-left-style: solid;border-left-width: 0px;border-left-color: #c0c0c0;border-right-style: solid;border-right-width: 0px;border-right-color: #c0c0c0;border-top-style: solid;border-top-width: 0px;border-top-color: #c0c0c0;border-bottom-style: solid;border-bottom-width: 0px;border-bottom-color: #c0c0c0;margin-left: 0;margin-right: auto;" class="TableStyle-standard" cellspacing="0">
                                                                <col style="width: 30%;" class="TableStyle-standard-Column-Column1" />
                                                                <col style="width: 30%;" class="TableStyle-standard-Column-Column1" />
                                                                <tbody>
                                                                    <tr class="TableStyle-standard-Body-Body1">
                                                                        <td class="TableStyle-standard-BodyC-Column1-Body1" style="text-align: left;border-left-style: solid;border-left-width: 0px;border-top-style: solid;border-top-width: 0px;border-right-style: solid;border-right-width: 0px;border-bottom-style: solid;border-bottom-width: 0px;padding-left: 7px;padding-right: 7px;padding-top: 7px;padding-bottom: 7px;">
                                                                            <ul>
                                                                                <li><a href="#http">API Connector</a>
                                                                                </li>
                                                                                <li><a href="#branching" class="MCXref xref">Branching</a>
                                                                                </li>
                                                                                <li><a href="#Control" class="MCXref xref">Control</a>
                                                                                </li>
                                                                                <li><a href="#datetime" class="MCXref xref">Date &amp; Time</a>
                                                                                </li>
                                                                                <li><a href="#encryption" class="MCXref xref">Encryption</a>
                                                                                </li>
                                                                                <li><a href="#errorhandling" class="MCXref xref">Error Handling</a>
                                                                                </li>
                                                                                <li><a href="#filefunctions" class="MCXref xref">File</a>
                                                                                </li>
                                                                                <li><a href="#flocontrol" class="MCXref xref">Flow Control</a>
                                                                                </li>
                                                                                <li data-mc-conditions="MultiProdPublish.Workflows"><a href="#Flows">Flows</a>
                                                                                </li>
                                                                                <li data-mc-conditions="MultiProdPublish.Workflows"><a href="#Folders">Folders</a>
                                                                                </li>
                                                                                <li><a href="#json" class="MCXref xref">JSON</a>
                                                                                </li>
                                                                            </ul>
                                                                        </td>
                                                                        <td class="TableStyle-standard-BodyA-Column1-Body1" style="text-align: left;border-left-style: solid;border-left-width: 0px;border-top-style: solid;border-top-width: 0px;border-right-style: solid;border-right-width: 0px;border-bottom-style: solid;border-bottom-width: 0px;padding-left: 7px;padding-right: 7px;padding-top: 7px;padding-bottom: 7px;">
                                                                            <ul>
                                                                                <li><a href="#jwt">JWT</a>
                                                                                </li>
                                                                                <li><a href="#list" class="MCXref xref">List</a>
                                                                                </li>
                                                                                <li><a href="#number" class="MCXref xref">Number</a>
                                                                                </li>
                                                                                <li><a href="#object" class="MCXref xref">Object</a>
                                                                                </li>
                                                                                <li><a href="#stash" class="MCXref xref">Tables</a>
                                                                                </li>
                                                                                <li><a href="#text" class="MCXref xref">Text</a>
                                                                                </li>
                                                                                <li><a href="#truefalse" class="MCXref xref">True/False</a>
                                                                                </li>
                                                                                <li><a href="#url" class="MCXref xref">URL</a>
                                                                                </li>
                                                                                <li><a href="#xml" class="MCXref xref">XML</a>
                                                                                </li>
                                                                            </ul>
                                                                        </td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                        <div>
                                                            <div>
                                                                <div>
                                                                    <h2><a name="http"></a>API Connector</h2>
                                                                    <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                                        <col style="width: 20%;" class="TableStyle-standard-Column-Column1" />
                                                                        <col class="TableStyle-standard-Column-Column1" />
                                                                        <thead>
                                                                            <tr class="TableStyle-standard-Head-Header1">
                                                                                <th class="TableStyle-standard-HeadF-Column1-Header1">
                                                                                    <p>Function</p>
                                                                                </th>
                                                                                <th class="TableStyle-standard-HeadD-Column1-Header1">
                                                                                    <p>Description</p>
                                                                                </th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody>
                                                                            <tr class="TableStyle-standard-Body-Body1">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body1">Authenticate with API Connector cards</td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body1">
                                        Use API Connector (HTTP) function cards to make authenticated basic, OAuth 2, or custom connections to third party services.
                                    </td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body2" data-mc-conditions="">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body2">HTTP - Errors</td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body2">An error in an HTTP function typically corresponds to a standard HTTP error code returned by the API you called. For instance, if the api returns the status code 400, you get a "Bad Request" error. If the status code is 401, the error is "Unauthorized." For a full list of possible status codes, see HTTP status codes.</td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body1" data-mc-conditions="">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body1">API Endpoint</td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body1">
Invoke a flow by specifying a URL.
                                        </td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body2" data-mc-conditions="">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body2">Close</td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body2">
                                        For use with API Endpoint flows only. See API Endpoint.
                                        <p>This function sends a response back to the caller and closes the HTTP connection, similar to <a href="Flow-Control/flocontrol_return.htm" class="MCXref xref">Return</a> or Return Raw, but also allows the flow to continue execution afterward. This is useful for flows that might not complete before the connection times out, after which the caller might call the endpoint again with the same inputs (thus causing unintended duplicate executions).</p></td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body1">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body1">Delete</td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body1">Performs an HTTP DELETE request, returning the result of this request and the response headers. On input, takes a required URL input and optional header, body, and query inputs.</td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body2">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body2">Get</td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body2">Performs an HTTP GET request, returning the result of this request and the response headers. On input, takes a required URL input and optional auth, header, and query inputs. Each optional input can either be modeled by a singular object-typed input or by multiple keys with the appropriate group attribute. On output, returns an object with two keys, headers and output. The output key contains the response body, and the headers key contains the response header. More detailed information can be accessed about these by using multiple keys with the appropriate grouping. NOTE:</td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body1" data-mc-conditions="">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body1">
                                                                                    <p>Paginate</p>
                                                                                </td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                                    <p>Use a helper flow to paginate through multiple pages of an HTTP response.</p>
                                                                                </td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body2" data-mc-conditions="">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body2">
                                                                                    <p>Paginate: Set a Max Page Index</p>
                                                                                </td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body2">
                                                                                    <p>Set how many times the Paginate function card will iterate.</p>
                                                                                </td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body1" data-mc-conditions="">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body1">
                                                                                    <p>Paginate: API Endpoint</p>
                                                                                </td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                                    <p>Use the Paginate function card against an API endpoint.</p>
                                                                                </td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body2">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body2">Post</td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body2">Performs an HTTP POST request, returning the result of this request and the response headers. On input, takes a required URL input and optional auth, header, body, and query inputs. Each optional input can either be modeled by a singular object-typed input or by multiple keys with the appropriate group attribute. On output, returns an object with two keys, headers and output. The output key contains the response body, and the headers key contains the response header. More detailed information can be accessed about these by using multiple keys with the appropriate grouping.</td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body1">
                                                                                <td class="TableStyle-standard-BodyF-Column1-Body1">Put</td>
                                                                                <td class="TableStyle-standard-BodyD-Column1-Body1">Performs an HTTP PUT request, returning the result of this request and the response headers. On input, takes a required URL input and optional auth, header, body, and query inputs. Each optional input can either be modeled by a singular object-typed input or by multiple keys with the appropriate group attribute. On output, returns an object with two keys, headers and output. The output key contains the response body, and the headers key contains the response header. More detailed information can be accessed about these by using multiple keys with the appropriate grouping.</td>
                                                                            </tr>
                                                                            <tr class="TableStyle-standard-Body-Body2">
                                                                                <td class="TableStyle-standard-BodyC-Column1-Body2">Raw Request</td>
                                                                                <td class="TableStyle-standard-BodyA-Column1-Body2">Advanced. This method performs a raw HTTP request, allowing the flow builder to control all aspects of the HTTP request. This allows a flow to call an XML service for example, or call an HTML service, or a number of other advanced usages. The other HTTP functions are optimized for ease-of-use with typical JSON-based services; the Raw Request function is more flexible, at the cost of being a bit harder to use. Here are a few of the use cases for Raw Request:</td>
                                                                            </tr>
                                                                        </tbody>
                                                                    </table>
                                                                </div>
                                                                <h2><a name="branching"></a>Branching</h2>
                                                                <table style="mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                                    <col style="width: 20%;" class="TableStyle-standard-Column-Column1" />
                                                                    <col style="width: 80%;" class="TableStyle-standard-Column-Column1" />
                                                                    <thead>
                                                                        <tr class="TableStyle-standard-Head-Header1">
                                                                            <th class="TableStyle-standard-HeadF-Column1-Header1">
                                                                                <p>Function</p>
                                                                            </th>
                                                                            <th class="TableStyle-standard-HeadD-Column1-Header1">
                                                                                <p>Description</p>
                                                                            </th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body1">Assign If</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body1">Assign a value based on the true or false result of a conditional statement. If you have more than two potential output values, see Lookup.</td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body2" data-mc-conditions="MultiProdPublish.Workflows">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body2">Continue If</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body2">
Continue or halt the flow based on the result of a true or false conditional test. Use Return Error If instead if you want to halt the flow with an error when the condition is true.
                                    </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body1">If/Else</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body1">
Use an If/Else conditional statement to determine the steps that should be followed by the flow.
                                    </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body2">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body2">If/ElseIf</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body2">Specify different actions to run based on multiple <cite>if</cite> and <cite>else if</cite> conditions (similar to <cite>Switch</cite> or <cite>Case</cite> in some programming languages). To specify different actions based on a single condition, you can use If/Else instead.</td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyC-Column1-Body1">Lookup</td>
                                                                            <td class="TableStyle-standard-BodyA-Column1-Body1">Convert one value to another using a lookup table, e.g. one web service code to another web service code, a department name to a contact email, etc.</td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            </div>
                                                            <h2><a name="Control"></a>Control</h2>
                                                            <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                                <col style="width: 20%;" class="TableStyle-standard-Column-Column1" data-mc-conditions="" />
                                                                <col style="width: 80%;" class="TableStyle-standard-Column-Column1" data-mc-conditions="" />
                                                                <thead>
                                                                    <tr class="TableStyle-standard-Head-Header1">
                                                                        <th class="TableStyle-standard-HeadF-Column1-Header1">
                                                                            <p>Function</p>
                                                                        </th>
                                                                        <th class="TableStyle-standard-HeadD-Column1-Header1">
                                                                            <p>Description</p>
                                                                        </th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <tr class="TableStyle-standard-Body-Body1">
                                                                        <td class="TableStyle-standard-BodyF-Column1-Body1">To Number</td>
                                                                        <td class="TableStyle-standard-BodyD-Column1-Body1">Convert a string to a numerical value.</td>
                                                                    </tr>
                                                                    <tr class="TableStyle-standard-Body-Body2">
                                                                        <td class="TableStyle-standard-BodyC-Column1-Body2">To String</td>
                                                                        <td class="TableStyle-standard-BodyA-Column1-Body2">
Convert a numerical value to a string.
                                </td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                            <div>
                                                                <h2><a name="datetime"></a>Date &amp; Time</h2>
                                                                <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                                    <col class="TableStyle-standard-Column-Column1" style="width: 20%;" />
                                                                    <col class="TableStyle-standard-Column-Column1" />
                                                                    <thead>
                                                                        <tr class="TableStyle-standard-Head-Header1">
                                                                            <th class="TableStyle-standard-HeadF-Column1-Header1">
                                                                                <p>Function</p>
                                                                            </th>
                                                                            <th class="TableStyle-standard-HeadD-Column1-Header1">
                                                                                <p>Description</p>
                                                                            </th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body1">Add</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                                <p>Add a multiple of a unit of time (for example, seconds) from a starting date and time and return a new date value.</p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body2">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body2">Convert</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body2">
                                                                                <p>Convert a date and time to a variety of formats. </p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body1">Date to Text</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                                <p>Convert a date and time into a provided format in a specified timezone. </p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body2">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body2">Difference</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body2">Calculate the difference in time between two dates.</td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body1">Epoch</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                                <p>Convert a date and time to the number of seconds that have elapsed since January 1, 1970 (midnight UTC/GMT) not counting leap seconds.</p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body2">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body2">ISO</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body2">
                                                                                <p>Calculate the corresponding ISO8601 string using UTC <span class="code">Z</span> notation for a given date and time (not adjusted for local time zone). </p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body1">Now</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                                <p>Calculate the current date and time in a variety of formats, all in UTC time (not adjusted for local timezone).</p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body2">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body2">Subtract</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body2">
                                                                                <p>Subtract a multiple of a unit of time (for example, seconds) from a starting date and time and return a new date value. </p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body1">Text to Date</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                                <p>Create a date and time from the contents of text according to a specified format.</p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body2">
                                                                            <td class="TableStyle-standard-BodyC-Column1-Body2">UNIX</td>
                                                                            <td class="TableStyle-standard-BodyA-Column1-Body2">
                                                                                <p>Convert a date and time to the UNIX standard format.</p>
                                                                            </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            </div>
                                                        </div>
                                                        <h2><a name="encryption"></a>Encryption</h2>
                                                        <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                            <col class="TableStyle-standard-Column-Column1" style="width: 20%;" />
                                                            <col class="TableStyle-standard-Column-Column1" />
                                                            <thead>
                                                                <tr class="TableStyle-standard-Head-Header1">
                                                                    <th class="TableStyle-standard-HeadF-Column1-Header1">
                                                                        <p>Function</p>
                                                                    </th>
                                                                    <th class="TableStyle-standard-HeadD-Column1-Header1">
                                                                        <p>Description</p>
                                                                    </th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr class="TableStyle-standard-Body-Body1">
                                                                    <td class="TableStyle-standard-BodyF-Column1-Body1">AES</td>
                                                                    <td class="TableStyle-standard-BodyD-Column1-Body1">AES encrypts input text and returns the encrypted text. Accepts any aes-based algorithm specified by OpenSSL.</td>
                                                                </tr>
                                                                <tr class="TableStyle-standard-Body-Body2">
                                                                    <td class="TableStyle-standard-BodyF-Column1-Body2">
                                                                        <p>Decrypt</p>
                                                                    </td>
                                                                    <td class="TableStyle-standard-BodyD-Column1-Body2">
                                                                        <p>Decrypt text from a base64 encoding using a key and specified OpenSSL algorithm.</p>
                                                                    </td>
                                                                </tr>
                                                                <tr class="TableStyle-standard-Body-Body1">
                                                                    <td class="TableStyle-standard-BodyF-Column1-Body1">Encrypt</td>
                                                                    <td class="TableStyle-standard-BodyD-Column1-Body1">Encrypt text into a base64 encoding using a key and specified OpenSSL algorithm.</td>
                                                                </tr>
                                                                <tr class="TableStyle-standard-Body-Body2">
                                                                    <td class="TableStyle-standard-BodyF-Column1-Body2">Hash</td>
                                                                    <td class="TableStyle-standard-BodyD-Column1-Body2">Hash encrypts input text and digests the return string on output with hex, binary, or base64 encoding. Accepts any hashing algorithm specified by OpenSSL.</td>
                                                                </tr>
                                                                <tr class="TableStyle-standard-Body-Body1">
                                                                    <td class="TableStyle-standard-BodyF-Column1-Body1">HMAC</td>
                                                                    <td class="TableStyle-standard-BodyD-Column1-Body1">HMAC encrypts input text and returns the resulting encrypted text, accepting any HMAC algorithm specified by OpenSSL</td>
                                                                </tr>
                                                                <tr class="TableStyle-standard-Body-Body2" data-mc-conditions="">
                                                                    <td class="TableStyle-standard-BodyF-Column1-Body2">
                                                                        <p>MD5</p>
                                                                    </td>
                                                                    <td class="TableStyle-standard-BodyD-Column1-Body2">
                                                                        <p>MD5-encrypts input text, returning the resulting encrypted text.</p>
                                                                    </td>
                                                                </tr>
                                                                <tr class="TableStyle-standard-Body-Body1">
                                                                    <td class="TableStyle-standard-BodyF-Column1-Body1">SHA1</td>
                                                                    <td class="TableStyle-standard-BodyD-Column1-Body1">SHA1-encrypts input text, returning the resulting encrypted text.</td>
                                                                </tr>
                                                                <tr class="TableStyle-standard-Body-Body2">
                                                                    <td class="TableStyle-standard-BodyF-Column1-Body2">SHA256</td>
                                                                    <td class="TableStyle-standard-BodyD-Column1-Body2">SHA256-encrypts input text, returning the resulting encrypted text.</td>
                                                                </tr>
                                                                <tr class="TableStyle-standard-Body-Body1">
                                                                    <td class="TableStyle-standard-BodyC-Column1-Body1">
                                                                        <p>Sign</p>
                                                                    </td>
                                                                    <td class="TableStyle-standard-BodyA-Column1-Body1">
                                                                        <p>Sign encrypts input text with an input algorithm and private key, and digests the return string on output with hex, binary, or base64 encoding.</p>
                                                                    </td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                        <h2><a name="errorhandling"></a>Error Handling</h2>
                                                        <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                            <col style="width: 20%;" class="TableStyle-standard-Column-Column1" />
                                                            <col class="TableStyle-standard-Column-Column1" />
                                                            <thead>
                                                                <tr class="TableStyle-standard-Head-Header1">
                                                                    <th class="TableStyle-standard-HeadF-Column1-Header1">
                                                                        <p>Function</p>
                                                                    </th>
                                                                    <th class="TableStyle-standard-HeadD-Column1-Header1">
                                                                        <p>Description</p>
                                                                    </th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr class="TableStyle-standard-Body-Body1">
                                                                    <td class="TableStyle-standard-BodyF-Column1-Body1">
                                                                        <p>If Error</p>
                                                                    </td>
                                                                    <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                        <p>Specify alternate actions to handle an error without stopping your flow.</p>
                                                                    </td>
                                                                </tr>
                                                                <tr class="TableStyle-standard-Body-Body2">
                                                                    <td class="TableStyle-standard-BodyF-Column1-Body2">Return Error</td>
                                                                    <td class="TableStyle-standard-BodyD-Column1-Body2">Throw an error and end the flow.</td>
                                                                </tr>
                                                                <tr class="TableStyle-standard-Body-Body1">
                                                                    <td class="TableStyle-standard-BodyC-Column1-Body1">Return Error If</td>
                                                                    <td class="TableStyle-standard-BodyA-Column1-Body1">Throw an error and halt the flow if a conditional test is true. If you want to conditionally stop a flow but under normal circumstances so it doesn't appear as an error, use Continue If instead.</td>
                                                                </tr>
                                                            </tbody>
                                                        </table>
                                                        <div>
                                                            <div>
                                                                <h2><a name="filefunctions"></a>File</h2>
                                                                <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                                    <col class="TableStyle-standard-Column-Column1" style="width: 20%;" />
                                                                    <col class="TableStyle-standard-Column-Column1" />
                                                                    <thead>
                                                                        <tr class="TableStyle-standard-Head-Header1">
                                                                            <th class="TableStyle-standard-HeadF-Column1-Header1">
                                                                                <p>Function</p>
                                                                            </th>
                                                                            <th class="TableStyle-standard-HeadD-Column1-Header1">
                                                                                <p>Description</p>
                                                                            </th>
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body1">Download</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                                <p>Download a file to the Workflows file system over HTTP or HTTPS. </p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body2">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body2">
                                                                                <p>Use the Download function card in a flow</p>
                                                                            </td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body2">
                                                                                <p>Use the Download function card to download any file, such as an image or document file, that you can access through a URL in your browser.</p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body1">Info</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                                <p>Retrieve information about a file. To use the Info function card, set the input to the File Contents of a file you have downloaded previously in the flow. The output provides basic information about the file.</p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body2">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body2">Multipart Upload</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body2">
                                                                                <p>Upload a file from the Workflows file system to a web service, using HTTP or HTTPS, using multipart form-data. </p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body1">
                                                                            <td class="TableStyle-standard-BodyF-Column1-Body1">Upload</td>
                                                                            <td class="TableStyle-standard-BodyD-Column1-Body1">
                                                                                <p>Upload a file from the Workflows file system to a web service using HTTP or HTTPS.</p>
                                                                            </td>
                                                                        </tr>
                                                                        <tr class="TableStyle-standard-Body-Body2">
                                                                            <td class="TableStyle-standard-BodyC-Column1-Body2">
                                                                                <p>Use the Upload function card in a flow</p>
                                                                            </td>
                                                                            <td class="TableStyle-standard-BodyA-Column1-Body2">
                                                                                <p>Use the Upload function card to upload any file, such as an image or document file, from the Workflows file system.</p>
                                                                            </td>
                                                                        </tr>
                                                                    </tbody>
                                                                </table>
                                                            </div> <div><h2><a name="flocontrol"></a>Flow Control</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Assign</td><td class="TableStyle-standard-BodyD-Column1-Body1">Create new output fields based on the input supplied.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><p>Call Flow</p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Run another flow within the context of your current flow. Your flow will resume when the other flow finishes. If you don't care about waiting for the other flow to finish, you can use Call Flow Async instead.</p></td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions="MultiProdPublish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body1">Call Flow Async</td><td class="TableStyle-standard-BodyD-Column1-Body1">Start another flow then continue without waiting for that flow to finish. String together multiple Call Flow Async cards if you want to kick off different sets of actions to run at the same time (in parallel).</td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions="MultiProdPublish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body2"><p>Pause</p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>The Pause function currently only works when used in flows that are resumed programmatically. If you want to pause a flow for a specific delay or until a specific time, use a Wait For or Wait Until function.</p></td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions="MultiProdPublish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Pause Raw</p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Pause the running flow execution, returning raw http data to the caller. Resume it by calling the resume API.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Repeat</td><td class="TableStyle-standard-BodyD-Column1-Body2">Runs a helper flow a specified number of times.</td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions="MultiProdPublish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body1"><p><a href="Flow-Control/flocontrol_return.htm" class="MCXref xref">Return</a></p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>End a flow and returns values to the caller of the flow.</p></td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions="MultiProdPublish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body2"><p>Return Raw</p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Return data to the caller, with full control over the HTTP Response.</p></td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions="MultiProdPublish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Wait For</p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Pause the flow and wait for a specified amount of time before resuming the flow execution. </p></td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions="MultiProdPublish.Workflows"><td class="TableStyle-standard-BodyC-Column1-Body2">Wait Until</td><td class="TableStyle-standard-BodyA-Column1-Body2">Pause the flow and wait until a specific date and time to continue executing the flow.</td></tr></tbody></table></div><h2 data-mc-conditions="MultiProdPublish.Workflows"><a name="Flows"></a>Flows</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" data-mc-conditions="MultiProdPublish.Workflows" /><col class="TableStyle-standard-Column-Column1" data-mc-conditions="MultiProdPublish.Workflows" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><p>Export Flow</p></td><td class="TableStyle-standard-BodyA-Column1-Body1"><p>Export all the elements of a single flow as a JSON file. </p></td></tr></tbody></table><h2 data-mc-conditions="MultiProdPublish.Workflows"><a name="Folders"></a>Folders</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" data-mc-conditions="MultiProdPublish.Workflows" /><col class="TableStyle-standard-Column-Column1" data-mc-conditions="MultiProdPublish.Workflows" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1"><p>Export Folder</p></td><td class="TableStyle-standard-BodyA-Column1-Body1"><p>Export a folder containing one or more flows as a JSON file.</p></td></tr></tbody></table> <div><h2><a name="json"></a>JSON</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Parse</td><td class="TableStyle-standard-BodyD-Column1-Body1">This function parses a JSON string into a typed field - such as an object or a list - that you can use in subsequent functions. It's the inverse of the Stringify function.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2">Stringify</td><td class="TableStyle-standard-BodyA-Column1-Body2">This function converts a typed value - such as an object or a list - into a JSON string. It's the inverse of the Parse function.</td></tr></tbody></table></div> <div><h2><a name="jwt"></a>JWT</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Decode</td><td class="TableStyle-standard-BodyD-Column1-Body1">Decode a JWT without verifying the signature.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Sign</td><td class="TableStyle-standard-BodyD-Column1-Body2">Encode and sign a JWT.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1">Verify</td><td class="TableStyle-standard-BodyA-Column1-Body1">Decode and verify a JWT.</td></tr></tbody></table></div> <div><h2><a name="list"></a>List</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 157px;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Add to End</p></td><td class="TableStyle-standard-BodyD-Column1-Body1">Add an item to the end of a list (also known as Push).</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><p>Add to Front</p></td><td class="TableStyle-standard-BodyD-Column1-Body2">Add an item to the start of a list (also known as Unshift).</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">At</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Return an item at the specified position in a list, where the first item is in position 0.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Collapse</td><td class="TableStyle-standard-BodyD-Column1-Body2">Collapse a list of objects into a single object by merging each object in the order they appear in the list. If objects have overlapping keys subsequent values will take precedence over preceding values.</td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Combine All</p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Combine the contents of two or more lists.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Construct</td><td class="TableStyle-standard-BodyD-Column1-Body2">Construct a new list from a set of values.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Difference</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Create a new list of items from one list that don't appear in another list.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Filter</td><td class="TableStyle-standard-BodyD-Column1-Body2">Filter a list to include only those items that meet a specified condition. (To filter based on more complex criteria, use Filter Custom.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Filter Custom</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Given a list, the Filter Custom function creates a new list that contains only those items in the list that pass a test. The test is done by calling a helper flow once for each item (see About scheduled and helper flows). The flow returns true or false, as to whether that item should be included in the output list. (To filter using a simple comparison test, use the Filter function instead.)</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Find</td><td class="TableStyle-standard-BodyD-Column1-Body2">Find the first item in a list that meets a specified condition. To find based on more complex criteria, use Find Custom.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Find Custom</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Find an item in a list by running a helper flow  on the items, one at a time, and returning the first item where the flow returns True. For simple searches, use the Find function instead.)</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Flatten</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Take a list that contains multiple lists and convert it into a single list.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">For Each</td><td class="TableStyle-standard-BodyD-Column1-Body1">Process a list by calling a helper flow for each item.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2"><p>For Each - Ignore Errors</p></td><td class="TableStyle-standard-BodyD-Column1-Body2">Process a list by calling a helper flow for each item. This function is almost identical to the  For Each function, with one important difference. For Each will stop processing more items if an error occurs when processing one of the items in the helper flow. On the other hand, this function continues to process all items even if some hit errors in the helper flow.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Get First Item</td><td class="TableStyle-standard-BodyD-Column1-Body1">Given a list, return two outputs: the first item and the list with that item removed (aka Shift).</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Get Last Item</td><td class="TableStyle-standard-BodyD-Column1-Body2">Given a list, return two outputs: the last item and the list with that item removed (aka Pop).</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Group By</p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Read a list and extract a list that's grouped by the values in the original list at the specified path.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Includes</td><td class="TableStyle-standard-BodyD-Column1-Body2">Check whether a list contains a particular item. The output is a True/False value - it returns true if the list contains the item, false if it does not. The list can be a list of any type of item - a list of text, a list of numbers a list of objects, etc. The value must be an item of that type.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Index By</td><td class="TableStyle-standard-BodyD-Column1-Body1">This function is designed for a common API pattern, where a service returns a list of field values as a list of objects which each contain a field name as one key, and a field value as another key.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Intersection</td><td class="TableStyle-standard-BodyD-Column1-Body2">Given two or more input lists, creates a new list that contains only those items that are included in all of the input lists. The lists can be of any type (text, number, object, etc.), as long as all lists are set to the same item type.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Length</td><td class="TableStyle-standard-BodyD-Column1-Body1">Find the number of items in a list.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">List to Text</td><td class="TableStyle-standard-BodyD-Column1-Body2">This function generates a single text output from a list, using an optional separator. For instance if you have a list of product names, you can use this function to create comma-separated list of products to include in an email.</td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1">Map</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>You can use the Map function to convert a list to a new list by running a helper flow for each item in the list. See About scheduled and helper flows.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Merge</td><td class="TableStyle-standard-BodyD-Column1-Body2">Merge objects from two or more lists at matching offsets. If an item with the same key exists in multiple lists for the same offset, the value from the later list will overwrite the value from an earlier list.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Pluck</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>This function takes a list of objects, and produces a sub-list. It does that by plucking the key specified by <span class="uicontrol">key</span> from each object in the input list, and putting those values into an output list. The <span class="uicontrol">list</span> input must be a list of objects.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Reduce</td><td class="TableStyle-standard-BodyD-Column1-Body2">This function produces a single cumulative value by running a helper flow for each item in a list. For example you can determine the largest number in a list of numbers, count how many text items start with "A" in a list of text, etc. The result can be any type -- not just a number -- so you can also use Reduce to build text, date, true/false, object, or a list of any of those.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Remove Duplicates</td><td class="TableStyle-standard-BodyD-Column1-Body1">Remove duplicates from a list.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Reverse</td><td class="TableStyle-standard-BodyD-Column1-Body2">Reverse the order of the items in a list.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Sample</td><td class="TableStyle-standard-BodyD-Column1-Body1">Generate a random sample from a list.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Slice</td><td class="TableStyle-standard-BodyD-Column1-Body2">Choose a subset of a list using start and end points.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Sort</td><td class="TableStyle-standard-BodyD-Column1-Body1">Sort a list from smallest to largest.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Sort Custom</td><td class="TableStyle-standard-BodyD-Column1-Body2">Sort Custom allows you to do a custom sort of a list by calling another flow to generate the value used to sort each item. For simple sorts, use the Sort function instead.</td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Split</p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Split a list at a specific index value.</p></td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2"><p>Stats</p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Read statistics for a list of numbers.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Sum</td><td class="TableStyle-standard-BodyD-Column1-Body1">Calculate the sum of a list of numbers. This function accepts only a list of type number. If your numbers are formatted as a list of text, you can use the Map function to convert each item from text to a number. If your numbers are stored inside a list of objects, you can use the Pluck function to generate the list of numbers you need to pass into Sum.</td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2"><p>Swap</p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Swap two elements in a list.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Truncate</td><td class="TableStyle-standard-BodyD-Column1-Body1">Cut a list down to a specified length.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Union</td><td class="TableStyle-standard-BodyD-Column1-Body2">Combine multiple lists into a single list of all of the unique values contained in any of the input lists. The lists can be of any type (text, number, object, etc.) as long as all lists are set to the same type, including the output list.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Unique Custom</td><td class="TableStyle-standard-BodyD-Column1-Body1">Use custom logic to determine how to remove duplicates from a list.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">XOR</td><td class="TableStyle-standard-BodyD-Column1-Body2">Take two input lists and generate a new list that contains all of the items that are in one or the other input list but not both.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1">Zip</td><td class="TableStyle-standard-BodyA-Column1-Body1">Take two lists of equal length and combine them into a list of lists of each corresponding pair.</td></tr></tbody></table></div><div><h2><a name="number"></a>Number</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Absolute Value</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Calculate the absolute value of a number. The absolute value is the size of the number regardless of its negative or positive state. </p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Add</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Return the sum of two or more input values. This card accepts two input values by default, but you can add more values.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Divide</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Return the quotient from the division of two values.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Exponent</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Calculate Euler's number, <code>e</code> (approximately 2.718), raised to a specified power, or exponent.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Factorial</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Calculate the factorial of a number, returning 0 if that number is less than 0. A factorial is the product of an integer and all the non-zero or non-negative integers less than it.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Formula</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Build a math expression by combining operators, functions and numbers that you enter with fields that you drag and drop into the Formula card. You can place fields of the type <span class="code">Number</span> anywhere in the expression where there can be a number. At runtime, the expression is evaluated using the values of the fields to generate a single output number.</p></td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Increment</p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Increase a numerical value by one.</p></td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2"><p>Larger</p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Return a Boolean value indicating whether a value is larger than another.</p></td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1">Log</td><td class="TableStyle-standard-BodyD-Column1-Body1">Calculate a logarithm, which is the power to which a base number must be raised to produce a given number.</td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2">Multiply</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Calculate the product of two or more values.</p></td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Percentage</p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Read and format the percentage of a value to a specified number of decimal places.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Power</td><td class="TableStyle-standard-BodyD-Column1-Body2">Calculate a base number raised to a specified power, or exponent.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Random Integer</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Generate a random integer between two numbers.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Remainder</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Find the remainder after the division of one number by another.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Round</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Round a number to the nearest integer.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Round Decimal Places</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Round a numerical value to a specified number of decimal places.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Round Down</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Round down to the nearest integer.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Round Up</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Round up to the nearest integer.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Sign</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Return the sign of a number.</p></td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2"><p>Smaller</p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Return a Boolean value indicating whether a value is smaller than another.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Square Root</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Calculate the square root of a number.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2">Subtract</td><td class="TableStyle-standard-BodyA-Column1-Body2"><p>Return the difference between two values.</p></td></tr></tbody></table></div> <div><h2><a name="object"></a>Object</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Clear Empty</td><td class="TableStyle-standard-BodyD-Column1-Body1">Removes keys with no values associated (for example, null, "", {}) from an object. Similar to the Object - Filter function but with the added ability of choosing whether or not the filtering is recursive.</td></tr><tr class="TableStyle-standard-Body-Body2" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body2"><p>Collapse</p></td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Combine a list of objects with key and value properties into a single JSON object. This is the inverse of the Split function card.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Construct</td><td class="TableStyle-standard-BodyD-Column1-Body1">Creates a new object based on a set of user-defined inputs.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Filter</td><td class="TableStyle-standard-BodyD-Column1-Body2">The Filter card will remove keys with no values associated (for example, null, "", {}) from an object. If the object may contain other objects, use the Clear Empty card instead.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">For Each</td><td class="TableStyle-standard-BodyD-Column1-Body1">Iterates through an object key-by-key using a helper flow . For each key in the input object, the helper flow is called with the <span class="uicontrol">key </span>name and <span class="uicontrol">value </span>for that key - you can select those using the dropdown in the designer after selecting a helper flow using the <span class="uicontrol">Choose Flow</span> button.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Get</td><td class="TableStyle-standard-BodyD-Column1-Body2">Reads the value stored in an object at a given path. For example, if the object is: <code>{ "a":"one", "b":"two", "c": 17 }</code> then specifying a path of <code>b</code> will retrieve the text <code>two</code>. To get more than one value at a time from an object, use Get Multiple instead.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Get Multiple</td><td class="TableStyle-standard-BodyD-Column1-Body1">Picks several values from an object at once. Similar to Get, the Get Multiple card allows you to access values within an object by providing multiple keys and/or paths to values in an object.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Keys</td><td class="TableStyle-standard-BodyD-Column1-Body2">The Keys card will generate a list of the keys within your object.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Map</td><td class="TableStyle-standard-BodyD-Column1-Body1">Processes an object key-by-key using a helper flow , creating a new object as output. For each key in the input object, the helper flow is called with the <span class="uicontrol">key</span> name and <span class="uicontrol">value</span> for that key - you can select those using the dropdown in the designer after selecting a helper flow using the <span class="uicontrol">Choose Flow</span> button.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Map to List</td><td class="TableStyle-standard-BodyD-Column1-Body2">Iterates through an object key-by-key using a helper flow , creating a list as output, with one item in the list per key in the object. For each key in the input object, the helper flow is called with the <span class="uicontrol">key </span>name and <span class="uicontrol">value</span> for that key - you can select those using the dropdown in the helper flow inputs after selecting a helper flow using the <span class="uicontrol">Choose Flow</span> button.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Merge</td><td class="TableStyle-standard-BodyD-Column1-Body1">Merges multiple objects into a single object. The output object has all of the keys (with their associated values) that appear in any of the input objects. If the same key appears in more than one of the input objects, only one value is taken. There are two inputs by default, but more can be added.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Move</td><td class="TableStyle-standard-BodyD-Column1-Body2">Moves a value from one key to another key, which essentially renames the key while keeping the value the same.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Set</td><td class="TableStyle-standard-BodyD-Column1-Body1">Sets a key of an object to a specified value, creating a new key if it doesn't exist already.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Size</td><td class="TableStyle-standard-BodyD-Column1-Body2">Returns the number of elements in an object.</td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Split</p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Split an object into a list of objects, each with key and value properties. This is the inverse of the Collapse function card.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Unset</td><td class="TableStyle-standard-BodyD-Column1-Body2">Deletes a key/value pair from an object.</td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Unzip</p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Convert an object to two lists, one with keys and the other with values.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Values</td><td class="TableStyle-standard-BodyD-Column1-Body2">The Values card will generate a list of the values within your object.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1">Zip</td><td class="TableStyle-standard-BodyA-Column1-Body1">Create an object from two lists, by mapping keys from the first lists to values from the second. This is particularly useful when creating an object that has keys with dots in the key names.</td></tr></tbody></table></div><div><h2><a name="stash"></a>Tables</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1" data-mc-conditions=""><td class="TableStyle-standard-BodyF-Column1-Body1"><p>Clear Table</p></td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Delete all rows in a table.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Create Row</td><td class="TableStyle-standard-BodyD-Column1-Body2">Create a new row in a table.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Delete Row</td><td class="TableStyle-standard-BodyD-Column1-Body1">Delete a row in a table.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Export To CSV</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Export a table to a CSV file, including all rows or a filtered subset of rows.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Import From CSV</td><td class="TableStyle-standard-BodyD-Column1-Body1">Import the contents of a CSV file into a Table.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Read Row</td><td class="TableStyle-standard-BodyD-Column1-Body2">Read the values from a row in a table. .</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Read Table</td><td class="TableStyle-standard-BodyD-Column1-Body1">Return the column schema of a table, as identified by the table ID.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Search Rows</td><td class="TableStyle-standard-BodyD-Column1-Body2">Find rows in a table  that match a set of conditions.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1">Update Row</td><td class="TableStyle-standard-BodyA-Column1-Body1">Update a row in a table.</td></tr></tbody></table></div><div><h2><a name="text"></a>Text</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">At</td><td class="TableStyle-standard-BodyD-Column1-Body1">Return the single character at a specified position in a text input, where 0 is the first position. To get a whole segement rather than a single character, use the <span class="uicontrol">Text Segment</span> function. To search for a single character, use <span class="uicontrol">Find</span>.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Base64</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Return the base64 encoding of a string.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Base64 Decode</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Return text that is decoded from base64. </p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Compose</td><td class="TableStyle-standard-BodyD-Column1-Body2">Combine text you type and fields you drag and drop in. At runtime, all of the text is combined with the values of the fields to generate a single text output.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Concatenate</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Take two or more string inputs and combine them without spaces into a single text output.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Find Email</td><td class="TableStyle-standard-BodyD-Column1-Body2">Find and return the first instance of a valid email address in text.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Find</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Find the first instance of a string within another string.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Find Last</td><td class="TableStyle-standard-BodyD-Column1-Body2">Search for the last match inside text, where <span class="code">0</span> is the first position. The function card returns <span class="code">-1</span> if no match is found.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Length</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Calculate the number of characters in a string of text.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Find Pattern</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Search text for the first match to a specified pattern using regular expressions.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Random</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Return random text of a specified length.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Replace</td><td class="TableStyle-standard-BodyD-Column1-Body2">Search and replace text.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Replace Patterns</td><td class="TableStyle-standard-BodyD-Column1-Body1">Find and replace any of multiple patterns with a single value. For any find and replace that looks for a single text or pattern, use Replace.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Split</td><td class="TableStyle-standard-BodyD-Column1-Body2">Split text into a list of text segments separated by commas or another specified delimiter.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Text Segment</td><td class="TableStyle-standard-BodyD-Column1-Body1">Extract text from a string value.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">To Lower Case</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Convert all letters in a string to lowercase.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">To Upper Case</td><td class="TableStyle-standard-BodyD-Column1-Body1"><p>Convert all letters in a string to uppercase.</p></td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Trim</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Remove leading and trailing blank space from text.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1">Unique ID</td><td class="TableStyle-standard-BodyA-Column1-Body1"><p>Generate a random universally unique identifier (UUID), sometimes called a globally unique identified (GUID). The identifier consists of 32 hexadecimal (base 16) digits, displayed in five groups and separated by hyphens.</p></td></tr></tbody></table></div><div><h2><a name="truefalse"></a>True/False</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">All False?</td><td class="TableStyle-standard-BodyD-Column1-Body1">Return true if all inputs are false; otherwise false. (Also known as the Boolean operator NOR.)</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">And</td><td class="TableStyle-standard-BodyD-Column1-Body2">Return true if all inputs are true, otherwise returns false.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Any False?</td><td class="TableStyle-standard-BodyD-Column1-Body1">Return true if any of the inputs are false; otherwise return false (also known as NAND).</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Compare</td><td class="TableStyle-standard-BodyD-Column1-Body2">Run a simple true or false test. For instance, you might check to see if a <span class="uicontrol">Type </span>field is equal to "Customer" or if a <span class="uicontrol">Price </span>field is greater than 1000.</td></tr><tr class="TableStyle-standard-Body-Body1" data-mc-conditions="MultiProdPublish.Workflows"><td class="TableStyle-standard-BodyF-Column1-Body1">Expression</td><td class="TableStyle-standard-BodyD-Column1-Body1">Build a True or False expression by combining operators and values that you type with fields that you drag and drop in. Place fields anywhere in the expression where there can be a value. At runtime, the expression is evaluated using the values of the fields to generate a single output of true or false. When using non-True/False inputs, number fields evaluate to false when 0; otherwise true. Text fields evaluate to false when null or "false"; otherwise true. Date fields convert to a timestamp that will work in comparisons.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Not</td><td class="TableStyle-standard-BodyD-Column1-Body2">Takes a true or false input and returns the opposite value.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Or</td><td class="TableStyle-standard-BodyD-Column1-Body1">Return true if any inputs are true, otherwise false.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Or (Exclusive)</td><td class="TableStyle-standard-BodyD-Column1-Body2">The Exclusive Or true/false operator (also known as XOR) returns true if one, and only one, input is true; otherwise returns false.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyC-Column1-Body1">XNOR</td><td class="TableStyle-standard-BodyA-Column1-Body1">A True/False operator that returns true if both inputs are true or both inputs are false; otherwise returns false. It is the opposite of the Exclusive Or (or XOR) operation.</td></tr></tbody></table></div> <div><h2><a name="url"></a>URL</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Decode Component</td><td class="TableStyle-standard-BodyD-Column1-Body1">Decode a URL-encoded component such as the value of a query parameter. This function card decodes all URL-encoded characters and outputs the decoded text.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Decode Query</td><td class="TableStyle-standard-BodyD-Column1-Body2"><p>Decode a URL-encoded query string into a query object.</p></td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Encode Component</td><td class="TableStyle-standard-BodyD-Column1-Body1">Encode text into a URL-encoded text for use within a URL.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyF-Column1-Body2">Encode Query</td><td class="TableStyle-standard-BodyD-Column1-Body2">Encode a query object into a URL-encoded query object.</td></tr><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Format</td><td class="TableStyle-standard-BodyD-Column1-Body1">Construct a URL string from its components.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2">Parse</td><td class="TableStyle-standard-BodyA-Column1-Body2">Parse a URL string into its components with proper encoding.</td></tr></tbody></table></div> <div><h2><a name="xml"></a>XML</h2><table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0"><col class="TableStyle-standard-Column-Column1" style="width: 20%;" /><col class="TableStyle-standard-Column-Column1" /><thead><tr class="TableStyle-standard-Head-Header1"><th class="TableStyle-standard-HeadF-Column1-Header1"><p>Function</p></th><th class="TableStyle-standard-HeadD-Column1-Header1"><p>Description</p></th></tr></thead><tbody><tr class="TableStyle-standard-Body-Body1"><td class="TableStyle-standard-BodyF-Column1-Body1">Build</td><td class="TableStyle-standard-BodyD-Column1-Body1">Convert an object to an XML string.</td></tr><tr class="TableStyle-standard-Body-Body2"><td class="TableStyle-standard-BodyC-Column1-Body2">Parse</td><td class="TableStyle-standard-BodyA-Column1-Body2">This function converts an XML string to an object. By converting XML to an object, you will be able to leverage many of the built in functions such as those in the <a href="#list" class="MCXref xref">List</a> and <a href="#object" class="MCXref xref">Object</a> categories to process and utilize values from the XML string throughout the rest of your flow.</td></tr></tbody></table></div></div>
                                                    </div>
                                                </div>
                                                <!-- Back to Top button --><a href="#" class="sf-back-to-top"><span class="arrow"></span>Top</a>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- div class="toolbar-main">
            <MadCap:topicToolbarProxy data-mc-skin="/Project/Skins/okta-toolbar-no-expand.flskn" style="mc-topic-toolbar-items: ;" />
                </div -->
                                    <!-- *********************** Footer rows ********************************* -->
                                    <div class="footer2" data-test="footer">
                                        <div>
                                            <p class="copyright" data-test="copyrightNotice">©  <span class="mc-variable okta-variables.Year variable">2023</span> <span class="mc-variable okta-variables.CompanyName variable">Okta, Inc</span>. All Rights Reserved. Various trademarks held by their respective owners.
	</p>
                                        </div>
                                    </div>
                                    <!-- Qualtrics setup to use with script below, replacing getfeedback -->
                                    <div id="ZN_6fGBJ8J3VcIBymN">
                                        <!--DO NOT REMOVE-CONTENTS PLACED HERE-->
                                    </div>
                                    <!-- ********************** Scripts ************************************* -->
                                    <!-- Foundation -->
                                    <script src="../../../Resources/Scripts/js/ignore-dompurify.js">
                                    </script>
                                    <script src="../../../Resources/Scripts/js/app.js">
                                    </script>
                                    <script src="../../../Resources/Scripts/js/vendor/what-input.js">
                                    </script>
                                    <script src="https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.4-rc1/js/foundation.min.js">
                                    </script>
                                    <script type="text/javascript" src="../../../Resources/Scripts/js/vendor/qualtrics.js">
                                    </script>
                                    <!-- Coveo -->
                                    <script src="https://static.cloud.coveo.com/searchui/v2.5395/js/CoveoJsSearch.Lazy.min.js" defer="defer">
                                    </script>
                                    <script src="../../../Resources/Scripts/coveo-resources/js/cultures/en.js" id="coveoCultureScript" defer="defer">
                                    </script>
                                    <script src="../../../Resources/Scripts/coveo-resources/js/Coveo.MadcapFlare.RequireJS.js" id="coveoRequireScript" defer="defer">
                                    </script>
                                    <script src="../../../Resources/Scripts/coveo-resources/js/Coveo.MadcapFlare.Okta.js" id="coveoInitscript" defer="defer">
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>
