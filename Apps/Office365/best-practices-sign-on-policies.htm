<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:onlyLocalStylesheets="False" MadCap:conditions="MultiProdPublish.Classic+OIE" MadCap:searchable="True" MadCap:fileTags="Tags/okta-authors.Mark Cowan">
    <head><title>[%=Heading.Level1%] | Okta</title>
        <link href="" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>Best security practices for Office 365 sign on policies</h1>
        <p>To ensure that your Office 365 app has maximum security, consider the following best practices:</p>
        <h3>Disable legacy protocols</h3>
        <p>Legacy email protocols such as IMAP and POP can't process client access policies or multifactor authentication (MFA). This can present a significant security risk, as potential attackers who acquire user credentials won't be challenged for MFA if they use a legacy protocol. To avoid this, Okta recommends that you disable these legacy protocols in your Office 365 tenant. See the <a href="https://support.microsoft.com/en-us/help/2416434/how-to-enable-or-disable-pop3-imap-mapi-outlook-web-app-or-exchange-ac">Microsoft Documentation</a>.</p>
        <h3>Secure against spoofed User-Agents</h3>
        <MadCap:snippetBlock src="../Office365-Snippets/References/best-practice-user-agent.flsnp" />
        <h3>Allow only MFA-supported protocols</h3>
        <p>Okta recommends that you configure Office 365 sign on policies to only allow protocols that support MFA. Enforcing MFA ensures a robust security framework. </p>
        <h3>Keep apps updated</h3>
        <p>Ensure that your end-users are using the most up-to-date app versions, especially for thick clients such as Microsoft Outlook.</p>
        <h2>Next step</h2>
        <p>
            <MadCap:xref href="References/o365-default-sign-on-rules.htm">Office 365 default sign on rules</MadCap:xref>
        </p>
    </body>
</html>