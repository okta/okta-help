<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"
      MadCap:onlyLocalStylesheets="False"
      MadCap:searchable="True"
      MadCap:conditions="MultiProdPublish.Classic+OIE"
      MadCap:fileTags="Tags/okta-authors.Mark Cowan">
   <head>
      <link href="../../../Resources/TableStyles/standard.css"
            rel="stylesheet"
            MadCap:stylesheetType="table"/>
      <title>Custom Clients in Office 365 Sign On Policy | Okta</title>
      <link href="" rel="stylesheet" type="text/css"/>
      <meta name="description"
            content="Filter specific clients in an Office 365 app sign on rule to allow or deny them access to Office 365. Allow only trusted clients or deny untrusted clients."/>
   </head>
   <body>
      <h1>Allow or deny custom clients in Office 365 sign on policy</h1>
      <h3 MadCap:conditions="MultiProdPublish.OIE">Using the userAgent attribute</h3>
      <MadCap:snippetBlock src="../../../Resources/Snippets/ea-banner.flsnp"
                           MadCap:conditions="Primary.do-not-publish"/>
      <p>You can filter specific clients in an Office 365 app sign on rule to allow or deny them access to Office 365 resources. This filter is especially useful if you want to deny access to certain clients that you do not support or trust. Alternatively, you can use this filter to only allow clients you trust. It gives you a more granular control over the clients that get access to your Office 365 app.</p>
      <div>
         <div class="noteOkta" MadCap:conditions="MultiProdPublish.OIE">
            <img src="../../../Resources/Images/assets/Icons/Notes/Help.png"
                 class="noteImgFloat"
                 title="Note"
                 alt="Note"/>
            <p class="noteContent">Sign-on rules to filter custom clients are not migrated from Okta Classic to Okta OIE. If you are migrating your Office 365 app instance to Okta OIE, you will need to recreate these rules.</p>
         </div>
      </div>
      <h2>Best practices</h2>
      <MadCap:snippetBlock src="../Office365-Snippets/References/best-practice-user-agent.flsnp"/>
      <h2>
         <span>Start this procedure</span>
      </h2>
      <p>In your Office 365 app:</p>
      <ol MadCap:conditions="MultiProdPublish.Classic">
         <li>
            <p>Go to the <span class="uicontrol">Sign On</span> tab <span class="menucascade">
                  <span class="uicontrol">Sign On Policy</span>
                  <span class="uicontrol">Add Rule</span>
               </span>. An <span class="uicontrol">App Sign On Rule</span> window pops up.</p>
         </li>
         <li>In the <span class="uicontrol">Client</span> section of <span class="uicontrol">If the user's client is any of these</span>, select <span class="uicontrol">Custom</span>.</li>
         <li>
            <p>Enter the name of the client for which you want to allow or deny access. See the <MadCap:xref href="#About">About the custom client filter text box</MadCap:xref> section below.</p>
            <p>
               <img src="../../../Resources/Images/Office365/custom-client-filter.png"
                    class="thumbnail"/>
            </p>
         </li>
         <li>Complete other sections as appropriate and click <span class="uicontrol">Save</span>. See <MadCap:xref href="../../Security/O365_Client-Access-Policies.htm">Office 365 Client Access Policies</MadCap:xref>.</li>
         <li>Back in the <span class="uicontrol">Sign On Policy</span> section, place this rule at an appropriate priority level. Okta evaluates each rule by priority and applies the first rule that matches.</li>
         <li>Repeat Steps 1-5 for each custom client for which you want to allow or deny access.</li>
      </ol>
      <div class="noteOkta" MadCap:conditions="MultiProdPublish.Classic">
         <img src="../../../Resources/Images/assets/Icons/Notes/Help.png"
              class="noteImgFloat"
              title="Important Note"
              alt="Important Note"/>
         <p class="noteHeading">Important</p>
         <p class="noteContent">If you select both the <span class="uicontrol">Web Browser</span> and <span class="uicontrol">Custom</span> options for a sign on rule under the <span class="uicontrol">Client</span> section of <span class="uicontrol">If the user's client is any of these</span>, then the rule will apply when either of the options is applicable.
			</p>
      </div>
      <div MadCap:conditions="MultiProdPublish.Classic">
         <h3>
            <a name="About"/>
            <span>About the custom client filter text box</span>
         </h3>
         <ul>
            <li>Maximum 100 (256 for <MadCap:variable name="okta-feature-names.Identity Engine"/>) characters are allowed.</li>
            <li>Special characters are allowed.</li>
            <li>Text is case insensitive. For example, <span class="code">WinWord</span>, <span class="code">winword</span>, and <span class="code">Winword</span> are all treated alike.</li>
            <li>Any white space - leading, trailing, or between words - is used verbatim. For example, <span class="code">               WinWord       </span>(with leading and trailing white space), <span class="code">WinWord</span> (without any white space), and <span class="code">Win Word</span> are different.</li>
            <li>Leaving the text box empty or only entering white space results in an error.</li>
         </ul>
      </div>
      <ol MadCap:conditions="MultiProdPublish.OIE">
         <li>Go to the <span class="uicontrol">Sign On</span> tab. Under <span class="menucascade">
               <span class="uicontrol">User authentication</span>
               <span class="uicontrol">Authentication policy</span>
            </span>, click <span class="uicontrol">View policy details</span>. (Alternatively, you can access this by going to <span class="menucascade">
               <span class="uicontrol">Security</span>
               <span class="uicontrol">Authentication Policies</span>
               <span class="uicontrol">Microsoft Office 365</span>
               <span class="uicontrol">Add Rule</span>
            </span>.)</li>
         <li>An <span class="wintitle">App Rule</span> window pops up.</li>
         <li>Go to the <span class="uicontrol">If</span> section of <span class="uicontrol">And The following custom expression is true</span>. </li>
         <li>
            <p>Enter a custom expression using <a href="https://developer.okta.com/docs/reference/okta-expression-language/">Okta Expression Language</a> to allow or deny a client. See good and bad examples below.</p>
            <p>
               <img src="../../../Resources/Images/Office365/OIE/custom-user-agent.png"
                    class="thumbnail"/>
            </p>
         </li>
         <li>Complete other sections as appropriate and click <span class="uicontrol">Save</span>. See <MadCap:xref href="References/o365-sign-on-rule-options.htm">Office 365 sign-on rules options</MadCap:xref>.</li>
         <li>Back in the <span class="uicontrol">Sign On Policy</span> section, place this rule at an appropriate priority level. Okta evaluates each rule by priority and applies the first rule that matches.</li>
         <li>Repeat Steps 1-5 for each custom client for which you want to allow or deny access.</li>
      </ol>
      <p>This rule now filters the specified clients, applies other conditions and actions defined in the rule, and then allows or denies access to Office 365.</p>
      <div MadCap:conditions="MultiProdPublish.OIE">
         <h3>Examples</h3>
         <p>Here are some examples of good and bad custom expressions:</p>
         <div class="noteOkta">
            <img src="../../../Resources/Images/assets/Icons/Notes/Help.png"
                 class="noteImgFloat"
                 title="Note"
                 alt="Note"/>
            <p class="noteContent">String operations in Okta Expression Language are case sensitive. To write a condition that ignores case, convert the user agent value to upper or lower case before the comparison.</p>
         </div>
         <h4>Good examples</h4>
         <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');"
                class="TableStyle-standard"
                cellspacing="0">
            <col class="TableStyle-standard-Column-Column1"/>
            <col class="TableStyle-standard-Column-Column1"/>
            <thead>
               <tr class="TableStyle-standard-Head-Header1">
                  <th class="TableStyle-standard-HeadF-Column1-Header1">Expression</th>
                  <th class="TableStyle-standard-HeadD-Column1-Header1">What it does</th>
               </tr>
            </thead>
            <tbody>
               <tr class="TableStyle-standard-Body-Body1">
                  <td class="TableStyle-standard-BodyF-Column1-Body1">
                     <span class="code">request.userAgent.contains("WinWord")</span>
                  </td>
                  <td class="TableStyle-standard-BodyD-Column1-Body1">Filters a request for user agent containing <span class="code">WinWord</span>.</td>
               </tr>
               <tr class="TableStyle-standard-Body-Body2">
                  <td class="TableStyle-standard-BodyF-Column1-Body2">
                     <span class="code">request.userAgent.toLowerCase().contains("winword")</span>
                  </td>
                  <td class="TableStyle-standard-BodyD-Column1-Body2">Converts a request to lower case and then filters for user agent containing <span class="code">winword</span>.</td>
               </tr>
               <tr class="TableStyle-standard-Body-Body1">
                  <td class="TableStyle-standard-BodyF-Column1-Body1">
                     <span class="code">request.userAgent.toUpperCase().contains("WINWORD")</span>
                  </td>
                  <td class="TableStyle-standard-BodyD-Column1-Body1">Converts a request to upper case and then filters for user agent containing <span class="code">WINWORD</span>.</td>
               </tr>
               <tr class="TableStyle-standard-Body-Body2">
                  <td class="TableStyle-standard-BodyF-Column1-Body2">
                     <span class="code">request.userAgent.contains("WinWord") OR request.userAgent.contains("Windows-AzureAD-Authentication-Provider")</span>
                  </td>
                  <td class="TableStyle-standard-BodyD-Column1-Body2">Filters a request for user agent containing <span class="code">WinWord</span> or <span class="code">Windows-AzureAD-Authentication-Provider</span>.</td>
               </tr>
               <tr class="TableStyle-standard-Body-Body1">
                  <td class="TableStyle-standard-BodyC-Column1-Body1">
                     <span class="code">request.userAgent.contains("compatible;") AND request.userAgent.contains("MSIE 7")</span>
                  </td>
                  <td class="TableStyle-standard-BodyA-Column1-Body1">Filters a request for user agent containing <span class="code">compatible</span> and <span class="code">MSIE 7</span>.</td>
               </tr>
            </tbody>
         </table>
         <h4>Bad examples</h4>
         <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');"
                class="TableStyle-standard"
                cellspacing="0">
            <col class="TableStyle-standard-Column-Column1"/>
            <col class="TableStyle-standard-Column-Column1"/>
            <thead>
               <tr class="TableStyle-standard-Head-Header1">
                  <th class="TableStyle-standard-HeadF-Column1-Header1">Expression</th>
                  <th class="TableStyle-standard-HeadD-Column1-Header1">What it does</th>
               </tr>
            </thead>
            <tbody>
               <tr class="TableStyle-standard-Body-Body1">
                  <td class="TableStyle-standard-BodyF-Column1-Body1">
                     <span class="code">request.userAgent.contains("")</span>
                  </td>
                  <td class="TableStyle-standard-BodyD-Column1-Body1">Matches all requests.</td>
               </tr>
               <tr class="TableStyle-standard-Body-Body2">
                  <td class="TableStyle-standard-BodyC-Column1-Body2">
                     <span class="code">request.userAgent.contains()</span>
                  </td>
                  <td class="TableStyle-standard-BodyA-Column1-Body2">Invalid expression.</td>
               </tr>
            </tbody>
         </table>
      </div>
      <h2>Related topics</h2>
      <ul>
         <li MadCap:conditions="MultiProdPublish.Classic">
            <p>
               <MadCap:xref href="../../Security/O365_Client-Access-Policies.htm">Get started with Office 365 sign on policies</MadCap:xref>
            </p>
         </li>
         <li MadCap:conditions="MultiProdPublish.OIE">
            <p>
               <MadCap:xref href="o365-sign-on-policies-main.htm">Get started with Office 365 sign on policies</MadCap:xref>
            </p>
         </li>
         <li>
            <p>
               <MadCap:xref href="References/o365-sign-on-rule-options.htm">Office 365 sign-on rules options</MadCap:xref>
            </p>
         </li>
      </ul>
   </body>
</html>
