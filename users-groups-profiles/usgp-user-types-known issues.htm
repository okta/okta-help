<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:onlyLocalStylesheets="False" MadCap:fileTags="Tags/okta-authors.Patrick Calnan" MadCap:searchable="True" style="" MadCap:conditions="MultiProdPublish.Classic+OIE">
    <head><title>[%=Heading.Level1%] | Okta</title>
        <link href="" rel="stylesheet" type="text/css" />
        <meta name="description" content="Identifies Universal Directory custom user type known issues." />
    </head>
    <body>
        <h1>Universal Directory custom user types known issues</h1>
        <p>These are the known issues for custom Universal Directory user types:</p>
        <ul>
            <li>Imported new users  are restricted to the default <MadCap:variable name="okta-variables.ProductName" /> user type.</li>
            <li><span class="uicontrol">User type</span> (variable name <span class="uicontrol">userType</span>) is one of the 31 attributes in the <MadCap:variable name="okta-variables.ProductName" /> Base schema. The <span class="uicontrol">User type</span> attribute is unrelated to  the custom user types feature.</li>
            <li>You cannot have two different user types using the same attribute name but with different data types. The data types must match.</li>
            <li>
                <p>Only the default Okta user type mapping set on application sign in pages is updated during imports and outbound provisioning.</p>
            </li>
            <li MadCap:conditions="MultiProdPublish.OIE">If Self-Service Registration is enabled in an org, all users in the org have their login IDs forcibly mapped to match their email addresses. Forced mapping applies to all User Types in that org.</li>
            <li>Unlike property mappings, SAML assertion mappings are not type aware.  <MadCap:variable name="okta-variables.ProductName" /> uses the default user type in all such cases.<ul><li>Validation to ensure only authorized admins can edit SAML assertions using sensitive attributes does not account for non-default user types (whose sensitive properties may differ from the default type).</li><li>Properties used in an assertion that only exist for non-default-type users will not have this check applied.</li><li>Sensitive attributes —Properties that are sensitive in the default type, but are not sensitive in some non-default types, will always be treated as sensitive.</li><li>When validating the SAML username EL, <MadCap:variable name="okta-variables.ProductName" /> considers only how the properties are defined in the default user type, even though custom types may define the properties differently.</li></ul></li>
            <li>Group Membership rules validate the rule only against the default type.  This is the case whether you use the preset conditions in the UI or the "<MadCap:variable name="okta-variables.ProductName" /> Expression language" option.  In either case, if the expression is not valid for the default type, for example because it references a property that exists only in a custom user type, then the rule can be neither saved nor previewed (even if the user being previewed is of the custom type).  If the rule references a property that exists only for the default type and not the custom type, then when it is evaluated for a custom user (for previewing or for determining group memberships) the expression will treat the property as having a value of null.</li>
            <p>Group Rules are not executed for non-default user types.</p>
            <li>Group App assignments are validated against the default User Type. A Group App assignment involving a attribute that is not consistent across multiple User Types will be validated against the default User Type.</li>
            <li>Users imported from Active Directory which partial match with existing custom type <MadCap:variable name="okta-variables.ProductName" /> users can only use User Principal Name (UPN) as <MadCap:variable name="okta-variables.ProductName" /> username format. When an admin selects a different <MadCap:variable name="okta-variables.ProductName" /> username format such as email, sAMAccountName, or other custom appuser properties, the AD property mapping for "login" field is supposed to be changed, but it currently only updates the mapping for the default <MadCap:variable name="okta-variables.ProductName" /> user type.</li>
            <p>The AD settings page allows you to set the <MadCap:variable name="okta-variables.ProductName" /> login during import flow and AD userName during outbound provisioning flow for the user. In both cases, currently those mappings from this UI would be updated only for the default <MadCap:variable name="okta-variables.ProductName" /> user type.</p>
            <li> The LDAP settings page allows you to set the <MadCap:variable name="okta-variables.ProductName" /> login during import flow and AD userName during outbound provisioning flow for the user. In both cases, currently those mappings from this UI would be updated only for the default <MadCap:variable name="okta-variables.ProductName" /> user type.</li>
            <p>In the LDAP provisioning settings page UI, the section "<MadCap:variable name="okta-variables.ProductName" /> Attribute Mappings" defines only the mapping between LDAP and the default <MadCap:variable name="okta-variables.ProductName" /> user profile.  In other words, if any of the attribute mappings in this section is updated, it's only reflected in the mapping between the app user profile and the default <MadCap:variable name="okta-variables.ProductName" /> user profile. If you need to make changes to the mapping between the app user profile and a custom <MadCap:variable name="okta-variables.ProductName" /> user profile, you need to make such changes in the Profile Editor.  </p>
            <p> Provisioning settings also do validation if RDN is a valid attribute and that check happens only against the default User Type.</p>
            <li><MadCap:variable name="okta-variables.ProductName" /> username format— Similar to Active Directory import, if the admin changes "<MadCap:variable name="okta-variables.ProductName" /> username format" on the LDAP import settings page, the change only applies to the mapping from LDAP to the default <MadCap:variable name="okta-variables.ProductName" /> user type.</li>
            <li>When using the Identity Providers feature, either for IdP Routing Rules or inbound federation, <MadCap:variable name="okta-variables.ProductName" /> user properties will be interpreted (to determine whether they exist, whether they contain sensitive data, and so on) based only on the default user type.  To avoid unintended behavior, be sure that any properties used in IdP policies are configured the same way in all user types.</li>
            <li>For inbound federation:<ul><li>JIT users are created with the default type.</li><li>When setting up a User Match for inbound federation, the configuration only lists or validates properties in the default type, but matching will be attempted using the actual User Type.</li><li>Mappings are set up automatically from the IdP user or App user to the default type but not any custom types, so unless mappings are manually created nothing will be mapped for those users.</li></ul></li>
            <li> If <MadCap:variable name="okta-variables.ProductName" /> detects new app templates for either O365 or Sharepoint, existing instances of the app are updated. These automatic updates are currently performed only for app instances associated with the default User Type. If a non-default User Type is assigned O365 or Sharepoint, changes to the templates for those apps will not be applied to those app instances.</li>
        </ul>
    </body>
</html>