define({"0":{y:0,u:"../content/topics/arch/architecture-center.htm",l:-1,t:"Architecture Center | Okta",i:0.0206572989635093,a:"Architecture Center The Architecture Center is a reference point designed for solution\nengineers, architects, and DevOps staff. From here, you can discover how\nexisting customers integrated Okta Workforce solutions into their\nsystems. You can also access Docker-based tutorials that can help ..."},"1":{y:0,u:"../content/topics/arch/directory-coexistence/directory-coexistence.htm",l:-1,t:"Directory coexistence | Okta",i:0.0699888827704508,a:"Directory coexistence Minimize downtime while migrating user, group, and device profiles to\nOkta Universal Directory by keeping both source and target directories\nactive during the process. Introduction Using  Universal\nDirectory  as your company\u0027s sole Identity Provider enables benefits\nsuch as ..."},"2":{y:0,u:"../content/topics/arch/directory-coexistence/lab.htm",l:-1,t:"Lab overview and prerequisites | Okta",i:0.0847741720753482,a:"Lab overview and\nprerequisites Learn how to migrate users from three different types of user\ndirectories into Universal Directory using a directory coexistence\nstrategy. Then, reconfigure a sample application to authenticate a user\nwith Universal Directory rather than the original user directory. ..."},"3":{y:0,u:"../content/topics/arch/directory-coexistence/lab-azure-ad.htm",l:-1,t:"Migrate users from Azure Active Directory | Okta",i:0.0454280895565838,a:"Migrate users from\nAzure Active Directory Suppose you already handle authentication through cloud-based\nIdentity Provider (IdP) such as Azure Active Directory (AD) but want to\nreplace it with Okta. You can install an on-premises Okta AD Agent to\nmirror those users to Universal Directory and then ..."},"4":{y:0,u:"../content/topics/arch/directory-coexistence/lab-ldap-server.htm",l:-1,t:"Migrate users from an on-premises LDAP directory | Okta",i:0.041341652462374,a:"Migrate users\nfrom an on-premises LDAP directory Suppose you already handle authentication through an on-premises LDAP\ndirectory but want to replace it with Okta. You can install an\non-premises Okta LDAP Agent to mirror those users to Universal Directory\nand then redirect your applications to Okta ..."},"5":{y:0,u:"../content/topics/arch/directory-coexistence/lab-generic-database.htm",l:-1,t:"Migrate users from an on-premises generic database | Okta",i:0.0719021692032511,a:"Migrate\nusers from an on-premises generic database Suppose you store your user profiles and groups in a generic\non-premises database, but want to replace it with Universal Directory.\nIn this case, you have two options: Export your user information into a CSV (or similar) file and then\nimport the ..."},"6":{y:0,u:"../content/topics/arch/multiple-environments/multiple-environments.htm",l:-1,t:"Manage multiple Okta environments | Okta",i:0.0206572989635093,a:"Manage multiple Okta\nenvironments Create solutions for deploying and managing multiple Okta\nenvironments with Terraform. Introduction Use Terraform to make managing complex Okta org configurations\neasier. By incorporating  Terraform  into your continuous\nintegration, continuous delivery, and ..."},"7":{y:0,u:"../content/topics/arch/multiple-environments/lab.htm",l:-1,t:"Lab overview and prerequisites | Okta",i:0.0206572989635093,a:"Lab overview and\nprerequisites Before incorporating Terraform into a company\u0027s continuous deployment\narchitecture, there isn\u0027t a way to create, rebuild, or update an Okta\nenvironment consistently. Nor is it easy to determine if one environment\nhas changed - for example, a group updated, a new ..."},"8":{y:0,u:"../content/topics/arch/multiple-environments/lab-1-configure-terraform-cloud.htm",l:-1,t:"Tutorial 1: Configure your Terraform Cloud account | Okta",i:0.13768061310749,a:"Tutorial 1:\nConfigure your Terraform Cloud account First, connect your Terraform Cloud account to your Github repo and\nyour development Okta org. Then you can configure it to react to changes\nin your Github repo (which implies that you require a change to your\nOkta org). To achieve this: Create an ..."},"9":{y:0,u:"../content/topics/arch/multiple-environments/lab-2-create-resources.htm",l:-1,t:"Tutorial 2: Create resources for your environment | Okta",i:0.13768061310749,a:"Tutorial 2:\nCreate resources for your environment In this tutorial, you use Terraform to create the resources required\nto make your org functional in the preview branch in\nGitHub. The tutorial takes you through creating the resources, applying\nthe plan, and demonstrating the functions of the newly ..."},"10":{y:0,u:"../content/topics/arch/multiple-environments/lab-3-rename-a-group.htm",l:-1,t:"Tutorial 3: Rename a group | Okta",i:0.0206572989635093,a:"Tutorial 3: Rename a group In this tutorial, you use Terraform to update the name of an existing\ngroup in GitHub and see the effect in the Admin Console. This simulates\nchanging a resource with the Okta Terraform Provider and applying the\nchange in a destination org. Display your workspace Overview ..."},"11":{y:0,u:"../content/topics/arch/multiple-environments/lab-4-deploy-changes-to-production.htm",l:-1,t:"Tutorial 4: Deploy changes to production | Okta",i:0.13768061310749,a:"Tutorial 4: Deploy\nchanges to production In tutorials 2 and 3, you made changes in a preview environment that\nisn\u0027t available to most users. This makes it easy for developers,\ntesters, and early adopters to test their changes without impacting\nproduction. Now use Terraform to deploy your changes to ..."},"12":{y:0,u:"../content/topics/arch/multiple-environments/lab-5-detect-drift.htm",l:-1,t:"Tutorial 5: Detect drift between environments and correct it | Okta",i:0.0206572989635093,a:"Tutorial\n5: Detect drift between environments and correct it Drift occurs when an Okta object changes in the destination\n(production) environment and is out of sync with its source\n(development) environment. This situation can occur during an outage\nwhen changes are made quickly to a production ..."},"13":{y:0,u:"../content/topics/arch/multiple-environments/lab-6-synchronize-environments-daily.htm",l:-1,t:"Tutorial 6: Synchronize environments daily | Okta",i:0.13768061310749,a:"Tutorial 6:\nSynchronize environments daily In the previous tutorial, you learned how to detect changes in the\nproduction environment and synchronize those changes back to your\ndevelopment environment. Now add a workflow to trigger a daily plan run\nthrough Terraform. Specifically, create a workflow ..."},"14":{y:0,u:"../content/topics/arch/companyx/company-x.htm",l:-1,t:"Case study: User migration for Company X | Okta",i:0.0325560866844867,a:"Case study: User migration for Company X Learn how Company X planned their user migration strategy to apply\nthe Directory Coexistence reference architecture.  While this content may contain facts and\nexamples, all customer names and data details have been removed. Company overview Company X is a ..."},});