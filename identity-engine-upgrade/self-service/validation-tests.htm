<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:onlyLocalStylesheets="False" MadCap:searchable="True" MadCap:fileTags="Tags/okta-authors.Graham Smith">
    <head><title>[%=Heading.Level1%]</title>
        <link href="" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>Record your Classic Engine experience</h1>
        <p>To verify that your org works the same in <MadCap:variable name="okta-feature-names.Identity Engine" /> as it did in <MadCap:variable name="okta-feature-names.Classic Engine" />,  accurately record all <MadCap:variable name="okta-feature-names.Classic Engine" /> behavior before you upgrade. </p>
        <h2>Document your policies</h2>
        <p>Document your <MadCap:variable name="okta-feature-names.Classic Engine" /> policies first. Create at least one test user  for each policy.&#160;</p>
        <ol>
            <li>
                <p>Record the settings of your Okta sign-on policies.</p>
            </li>
            <li>
                <p>Sign in to your Okta org with a test user account, and validate that the Okta sign-on policy correctly evaluates the sign-in flow.</p>
            </li>
            <li>
                <p>Record the settings of your MFA&#160;enrollment policies.</p>
            </li>
            <li>
                <p>Enroll in an MFA&#160;factor with a test user account, and validate that the policy correctly evaluates your selection.</p>
            </li>
            <li>
                <p>Record the settings of your app sign-on policies.</p>
            </li>
            <li>
                <p>Sign in to your apps with a test user account, and verify that the policies correctly control the access.</p>
            </li>
            <li>
                <p>Record the settings of your self-service password recovery policy.</p>
            </li>
            <li>
                <p>Attempt to recover your password with a test user account, and verify that the policy controls the flow.</p>
            </li>
        </ol>
        <h2>Prepare your devices</h2>
        <p>If you actively use Device Trust already, follow these steps:</p>
        <ol>
            <li>
                <p>Turn off Device Trust for mobile devices in your Classic Engine org.</p>
            </li>
            <li>
                <p>Set up Device Trust for desktop in your Classic&#160;Engine org.</p>
            </li>
            <li>
                <p>Create a runbook of how to reintegrate your MDM&#160;vendor.</p>
            </li>
            <li>
                <p>Create and test app sign-on policies to ensure that test users can sign in with Device Trust for desktop. </p>
            </li>
        </ol>
        <p>If you don't currently use Device Trust for mobile or desktop, you don't need to configure anything in <MadCap:variable name="okta-feature-names.Classic Engine" />.</p>
        <h2><a name="Record"></a>Record your <MadCap:variable name="okta-feature-names.Sign-In Widget" /> customizations</h2>
        <p>Record your <MadCap:variable name="okta-feature-names.Sign-In Widget" /> customizations so that you can recreate them after the upgrade. This is useful if you enabled Self-Service Registration (SSR) in <MadCap:variable name="okta-feature-names.Classic Engine" />.</p>
        <h3>Okta-hosted Sign-In Widget with no custom domain</h3>
        <p>This is the most common sign-in experience model. You don't have any customizations that you need to record. </p>
        <h3>Okta-hosted Sign-In Widget with  custom domain</h3>
        <p>If you use the Okta-hosted <MadCap:variable name="okta-feature-names.Sign-In Widget" /> with a custom domain, your sign-in page may be customized with cascading styles and JavaScript. Review JavaScript for deprecated capabilities or functionality that may be impacted. See <a href="https://developer.okta.com/docs/guides/oie-upgrade-sign-in-widget/main/?_ga=2.66737710.1299471392.1679314439-1413555637.1677697500" target="_blank">Upgrade your Sign-In Widget</a>.</p>
        <ol>
            <li>
                <p>Create an upgrade runbook. Document all styling changes:</p>
                <ul>
                    <li>
                        <p>Reordering or visual changes that extend beyond the core branding options</p>
                    </li>
                    <li>
                        <p>JavaScript wrap/extensions to the Sign-In Widget (App context, view detection)</p>
                    </li>
                    <li>
                        <p>Overriding default flow changes</p>
                    </li>
                </ul>
            </li>
            <li>
                <p>Optional. If you don’t have a Preview environment, use tenant provisioning to create an <MadCap:variable name="okta-feature-names.Identity Engine" /> sandbox (you can also do this through the <span class="wintitle">Developer Sign-Up</span> page). Copy your Okta-hosted <MadCap:variable name="okta-feature-names.Sign-In Widget" /> to the sandbox.</p>
            </li>
        </ol>
        <h3>Embedded <MadCap:variable name="okta-feature-names.Sign-In Widget" /></h3>
        <p>If your org embeds the <MadCap:variable name="okta-feature-names.Sign-In Widget" /> into an application with the registration feature enabled, you can't upgrade to <MadCap:variable name="okta-feature-names.Identity Engine" /> with it. Upgrade to version 5.11.0 of the <MadCap:variable name="okta-feature-names.Sign-In Widget" /> and then enable the interaction code as your grant type.</p>
        <p>If you don't know where you <MadCap:variable name="okta-feature-names.Sign-In Widget" /> is embedded, you can search with the CORS&#160;filter.</p>
        <ol>
            <li>
                <p>
                    <MadCap:snippetText src="../../../Resources/Snippets/task steps/Security_API.flsnp" />
                </p>
            </li>
            <li>
                <p>In the <span class="wintitle">Trusted Origins</span> tab, select the CORS filter.</p>
            </li>
            <li>
                <p>Review the <span class="wintitle">Origin URLs</span> column to determine where your Sign-In Widget is hosted (there can be multiple instances).</p>
            </li>
        </ol>
        <h2>Nest steps</h2>
        <p>
            <MadCap:xref href="self-service-process.htm#Schedule">Schedule your upgrade</MadCap:xref>
        </p>
        <p>
            <MadCap:xref href="test-upgrade.htm">Test the upgrade in Identity Engine</MadCap:xref>
        </p>
    </body>
</html>