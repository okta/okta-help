<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"
      MadCap:fileTags="Tags/okta-authors.Nikita Apraj">
   <head>
      <title>[%=Heading.Level1%] | Okta</title>
      <link href="" rel="stylesheet" type="text/css"/>
      <meta name="description"
            content="Troubleshoot common provisioning issues that lead to unsuccessful SSO in new or existing SSO-enabled applications."/>
   </head>
   <body>
      <h1>Troubleshoot provisioning</h1>
      <p>Learn how to troubleshoot  provisioning issues for new and existing SSO-enabled app integrations. To view errors that occurred during the provisioning process, select <span class="menucascade">
            <span class="uicontrol">Dashboard</span>
            <span class="uicontrol">Tasks</span>
         </span> on the <MadCap:variable name="okta-variables.ProductName"/>
         <MadCap:variable name="okta-feature-names.Administrator dashboard"/>.</p>
      <h3>
         <a name="Issue:"/>Insufficient account permissions on the account used to setup the API configuration</h3>
      <p>
         <span class="uicontrol">Description</span>
      </p>
      <p>Provisioning has failed. From the <span class="menucascade">
            <span class="uicontrol">Dashboard</span>
            <span class="uicontrol">Tasks</span>
         </span> page in <MadCap:variable name="okta-variables.ProductName"/>, you see the following error: "Automatic provisioning of user John Doe to app Salesforce.com failed: The credentials used to connect to the API were invalid; please check your configuration".</p>
      <p>This could be due to the third-party admin account reaching a password expiration, or the password was changed and not updated in <MadCap:variable name="okta-variables.ProductName"/>.  It could even be that the third-party admin accounts username was changed or the account has been disabled.</p>
      <p>
         <span class="uicontrol">Solution</span>
      </p>
      <p>Check that the third-party admin account used to set up the provisioning function within <MadCap:variable name="okta-variables.ProductName"/> is still valid and can be used to sign in to the third-party application directly.  If the account works,  make sure to re-enter the account info into the Integration section of the <span class="uicontrol">Provisioning</span> tab for your app integration in <MadCap:variable name="okta-variables.ProductName"/>.  If you can't sign in using that account,  use another admin account (if applicable) to sign in to the third-party application and check on the original admin account.  Fix any issues found with that account (password reset, username changed, account expired) and then re-enter the updated information in the Provisioning configuration section.</p>
      <h3>
         <a name="Issue:2"/>API configuration was successful, but the option to create, update, and deactivate users was not activated</h3>
      <p>
         <span class="uicontrol">Description</span>
      </p>
      <p>Provisioning has failed. From the "Tasks" page (<span class="menucascade">
            <span class="uicontrol">Dashboard</span>
            <span class="uicontrol">Tasks</span>
         </span>) in <MadCap:variable name="okta-variables.ProductName"/>,you see the following error: “Automatic provisioning of user John Doe to app Salesforce.com failed: Matching user not found.”</p>
      <p>This can happen if you enable the provisioning feature by setting up the app integration and click <span class="uicontrol">Save</span>, but then forget to turn on the create, update, and deactivate users options.  This error message tells you that the <span class="uicontrol">Create user</span> option is not on, as the error message states that it was unable to find a user in the Salesforce application that matches this user, and therefore it could not assign the app integration.  If the <span class="uicontrol">Create user</span> option is turned on,  <MadCap:variable name="okta-variables.ProductName"/> would create a new user in Salesforce after it found no matching user existed, and assignment would succeed.</p>
      <p>
         <span class="uicontrol">Solution</span>
      </p>
      <p>Ensure that in the <span class="uicontrol">Provisioning</span> tab of your app integration, for the <span class="uicontrol">To App</span> setting, you click <span class="uicontrol">Edit</span> and enable <span class="uicontrol">Create Users</span>, <span class="uicontrol">Update User Attributes</span>, and <span class="uicontrol">Deactivate Users</span> options.</p>
      <h3>
         <a name="Issue:3"/>Insufficient licensing</h3>
      <p>
         <span class="uicontrol">Description</span>
      </p>
      <p>Provisioning has failed. From the "Tasks" page (<span class="menucascade">
            <span class="uicontrol">Dashboard</span>
            <span class="uicontrol">Tasks</span>
         </span>) in <MadCap:variable name="okta-variables.ProductName"/>, you see the following error: “Automatic provisioning of user John Doe to app Salesforce.com failed: License Limit Exceeded.”</p>
      <p>This issue occurs when you assign a user to an app integration and attempt to grant the user a role or licensing level  that you do not possess.</p>
      <p>
         <span class="uicontrol">Solution</span>
      </p>
      <p>Ensure that sufficient licensing exists prior to user assignment.  If you do run into this issue, obtain the required licensing and simply click <span class="uicontrol">Retry Selected</span> on the "Tasks" page after the licensing issue has been fixed.</p>
   </body>
</html>
