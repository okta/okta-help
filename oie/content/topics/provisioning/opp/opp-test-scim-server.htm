<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_okta_html5_topnav_nav_poc" data-mc-search-type="Stem" data-mc-help-system-file-name="okta_help.xml" data-mc-path-to-help-system="../../../../" data-mc-has-content-body="True" data-mc-searchable="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="typeofcontent" content="documentation" />
        <meta name="audience" content="OIE Admins" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="description" content="Validate the response from your SCIM connector or SCIM server." /><title>Test SCIM&#160;connectors for on-premises provisioning | Okta</title>
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, height=device-height" />
        <link rel="shortcut icon" href="../../../Resources/Images/favicon.ico" type="image/x-icon" />
        <!-- Google Tag Manager -->
        <!-- End Google Tag Manager -->
        <!-- Google Tag Manager -->
        <!-- End Google Tag Manager -->
        <!-- Pendo Script (Per Chris Bank) -->
        <!-- End Pendo Script -->
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link rel="stylesheet" href="https://static.cloud.coveo.com/searchui/v2.5395/css/CoveoFullSearchNewDesign.css" />
        <style>/*&lt;meta /&gt;*/

.button.select-language-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../../resources/stylesheets/okta-main-new-nav.css" rel="stylesheet" type="text/css" />
        <link href="../../../resources/tablestyles/standard.css" rel="stylesheet" data-mc-stylesheet-type="table" />
        <script src="../../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script>
			/* <![CDATA[ */
			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-NMZZV4P');
			/* ]]> */
		</script>
        <script>
			/* <![CDATA[ */
			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-KXMLV58');
			/* ]]> */
		</script>
        <script>
		/* <![CDATA[ */
		(function(apiKey){
			(function(p,e,n,d,o){var v,w,x,y,z;o=p[d]=p[d]||{};o._q=o._q||[];
			v=['initialize','identify','updateOptions','pageLoad','track'];for(w=0,x=v.length;w<x;++w)(function(m){
			o[m]=o[m]||function(){o._q[m===v[0]?'unshift':'push']([m].concat([].slice.call(arguments,0)));};})(v[w]);
			y=e.createElement(n);y.async=!0;y.src='https://cdn.pendo.io/agent/static/'+apiKey+'/pendo.js';
			z=e.getElementsByTagName(n)[0];z.parentNode.insertBefore(y,z);})(window,document,'script','pendo');

        pendo.initialize({
            visitor: {
                id:              'VISITOR-UNIQUE-ID'
            },
            account: {
                id:           'ACCOUNT-UNIQUE-ID'
            }
        });
		})('a9bd3885-93ae-46ab-700b-dd29e613c19d');
		/* ]]> */
		</script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1024px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">Skip To Main Content</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="Show Navigation Panel" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="https://support.okta.com/help/s/" alt="Okta"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="2" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>placeholder</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">Account</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">Settings</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">Logout</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="Search Field" placeholder="Search" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">Filter: </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="Search Filter" title="All Files" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">All Files</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="Search" role="button" tabindex="0"><span class="invisible-label">Submit Search</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NMZZV4P" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KXMLV58" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <!-- Coveo config parameters -->
                                    <div id="coveo_org_id" style="Display:None"><span class="mc-variable okta-coveo-config.OrgId variable">oktaproduction9ounvcxa</span>
                                    </div>
                                    <div id="coveo_rest_uri" style="Display:None"><span class="mc-variable okta-coveo-config.PlatformRestUri variable">https://platform.cloud.coveo.com/rest/search</span>
                                    </div>
                                    <div id="coveo_search_url" style="Display:None"><span class="mc-variable okta-coveo-config.SearchPageUrl variable">https://support.okta.com/help/s/global-search/%40uri</span>
                                    </div>
                                    <div id="coveo_token_url" style="Display:None"><span class="mc-variable okta-coveo-config.SearchTokenServiceUrl variable">https://support.okta.com/help/services/apexrest/PublicSearchToken?site=help</span>
                                    </div>
                                    <div id="coveo_dev_org_id" style="Display:None"><span class="mc-variable okta-coveo-config.DevOrgId variable">oktanonproduction1il1gtac7</span>
                                    </div>
                                    <div id="coveo_dev_token" style="Display:None"><span class="mc-variable okta-coveo-config.DevSearchToken variable">xxb48840fe-d60d-4e40-b1d3-522d5a35c384</span>
                                    </div>
                                    <!-- End Coveo config parameters -->
                                    <!-- ************** Coveo Search bar ************************************* -->
                                    <!-- set margin and size in /Content/Resources/Scripts/coveo-resources/css/Coveo.Okta.StandaloneSearchbox.min.css to make room for replacing Flare-generated top-nav with HTML code (see below)-->
                                    <div id="OLC_Coveo_Headline" class="coveo-headline-wrapper" data-mc-conditions="MultiProdPublish.SearchBar">
                                        <div class="slds-p-vertical_small">
                                            <!--Search Bar-->
                                            <div class="slds-grid slds-grid_align-center">
                                                <div id="customSelect" class="CoveoCustomSelect slds-float_right">
                                                </div>
                                                <div id="standaloneSearchbox">
                                                    <div class="CoveoAnalytics" data-search-hub="OktaCommunityFullSearch">
                                                    </div>
                                                    <div class="CoveoTab" data-id="Help" data-caption="Help" style="display:none">
                                                    </div>
                                                    <div class="CoveoSearchbox" data-enable-omnibox="true" data-enable-query-suggest-addon="true">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="replace_top_nav">
                                        <div class="navbar" data-mc-conditions="Primary.live-site-only">
                                            <div class="dropdown" data-test="menuBarCategory" id="documentationMenu" data-mc-conditions="MultiProdPublish.DocMenu">
                                                <button class="dropbtn">Documentation <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content" data-test="menuBarItems">
                                                    <div><a href="https://help.okta.com/en-us/Content/index.htm" data-test="menuBarLink">Product documentation</a>
                                                    </div>
                                                    <div><a href="https://developer.okta.com" target="_blank" data-test="menuBarLink">Developer documentation</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory" id="knowledgebaseMenu"><a href="https://support.okta.com/help/s/knowledge?language=en_US" data-test="menuBarLink">Knowledge base</a>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory" id="communityMenu">
                                                <button class="dropbtn">Community <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content" data-test="menuBarItems">
                                                    <div><a href="https://support.okta.com/help/s/community?language=en_US" data-test="menuBarLink">Home</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/group/CollaborationGroup/Recent?language=en_US" data-test="menuBarLink">Discussions</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/questions?language=en_US" data-test="menuBarLink">Questions</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/ideas?language=en_US" target="_blank" data-test="menuBarLink">Ideas</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/events?language=en_US" data-test="menuBarLink">Webinars</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/blogs?language=en_US" data-test="menuBarLink">Blogs</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory" id="productMenu">
                                                <button class="dropbtn">Product <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content" data-test="menuBarItems">
                                                    <div><a href="https://support.okta.com/help/s/productroadmap?language=en_US" data-test="menuBarLink">Roadmap</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/product-hub?language=en_US" data-test="menuBarLink">Product hub</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/mysuccesshub/get-started?language=en_US" data-test="menuBarLink">Customer success hub</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory" id="trainingMenu"><a href="https://www.okta.com/services/education-services/" target="_blank" data-test="menuBarLink">Training</a>
                                            </div>
                                        </div>
                                        <div class="logo_container" id="OktaBanner" data-mc-conditions="Primary.live-site-only"><a class="logo" href="https://help.okta.com" data-test="OktaBanner"><img src="../../../resources/images/okta-assets/logo.png" alt="Okta Support" title="Okta Support" data-test="OktaBannerImg" /></a>
                                        </div>
                                        <div class="toolbar-main" data-test="toolBar" data-mc-conditions="Primary.live-site-only">
                                            <div class="buttons popup-container clearfix topicToolbarProxy _Skins_okta_toolbar_no_expand mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                <div class="button-group-container-left">
                                                    <button class="button needs-pie select-language-button" title="Change language">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper" aria-label="Change language">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- **********************  Main content row  ********************** -->
                                    <div class="okta-topics" data-test="bodyWrapper">
                                        <!-- *** Col1: Body Col *** -->
                                        <div>
                                            <div class="is-not-in-mobile">
                                                <!-- Breadcrumbs -->
                                            </div>
                                            <div class="oie-label" data-mc-conditions="MultiProdPublish.OIE">
                                                <img class="oie-label" title="Label: Okta Identity Engine content" src="../../../resources/images/okta-assets/identity_engine.svg" />
                                            </div>
                                            <div class="body-main" data-test="bodyContent">
                                                <!-- Main content body -->
                                                <div role="main" id="mc-main-content">
                                                    <h1>Test SCIM&#160;connectors for on-premises provisioning</h1>
                                                    <p><span class="mc-variable okta-variables.ProductName variable">Okta</span> provides a utility to test  SCIM connectors built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Provisioning Connector SDK or any custom SCIM connector or SCIM server. You do not have to connect to <span class="mc-variable okta-variables.ProductName variable">Okta</span> and the <span class="mc-variable okta-feature-names.Okta_Provisioning_Agent variable">Okta Provisioning Agent</span> to test your connector. </p>
                                                    <p>The testing utility is part of the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Provisioning Connector SDK package, available on the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Downloads page. To obtain the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Provisioning Connector SDK package, sign in to the <span class="mc-variable okta-feature-names.Administrator_dashboard variable">Admin Console</span> and select <span class="uicontrol">Settings &gt; Downloads</span>. Then click <span class="uicontrol">Download</span> for the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Provisioning Connector SDK.</p>
                                                    <p>The testing utility is contained in the <span class="code">scim-sdk-test.jar</span> in the tester folder of the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Provisioning Connector SDK. Full documentation for the testing utility is located in the <span class="code">tester/README.TXT</span> file. The primary focus of the tests is to validate the response from your SCIM connector or SCIM server.</p>
                                                    <h2>Test data</h2>
                                                    <p>Test data is located in the <span class="code">.json</span> files in the <span class="code">tester/data</span> directory. You can use or modify these files to test your connector. All the tests assume that the input data is valid. Edit or create the sample data files carefully.</p>
                                                    <h2>Running tests</h2>
                                                    <p>Run the tests by using the <span class="code">scim-sdk-tests.jar</span> file. To see all possible arguments, run the jar without any arguments.</p>
                                                    <p><span class="code">java -jar scim-sdk-tests.jar</span>
                                                    </p>
                                                    <p>Complete testing information including calls, responses, all options, and sample results are shown in the <span class="code">tester/README.TXT</span> file. The following code shows a very typical test call. The minimum number of parameters are passed.</p>
                                                    <ul>
                                                        <li><span class="code">url:</span>&#160;the base URL&#160;of the SCIM&#160;server</li>
                                                        <li><span class="code">method:</span>&#160;the OKTA&#160;provisioning method to test</li>
                                                        <li><span class="code">file:</span>&#160;the input data file</li>
                                                    </ul>
                                                    <h3>Sample test call</h3>
                                                    <p>The following is a sample test call:</p>
                                                    <p><span class="codeblock">java -jar scim-sdk-tests.jar -url http://localhost:8080 -method createNewUser -file data/createNewUser.json</span>
                                                    </p>
                                                    <h3>Tester usage</h3>
                                                    <p>To see all possible arguments, run the jar without any arguments.</p>
                                                    <p><span class="code">java -jar scim-sdk-tests.jar</span>
                                                    </p>
                                                    <p>usage: scim-sdk-tests</p>
                                                    <p>The following table details the arguments you can pass.</p>
                                                    <table style="width: 100%;mc-table-style: url('../../../resources/tablestyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                                                        <col class="TableStyle-standard-Column-Column1" />
                                                        <col class="TableStyle-standard-Column-Column1" />
                                                        <tbody>
                                                            <tr class="TableStyle-standard-Body-Body1">
                                                                <td style="font-weight: bold;background-color: #d3d3d3;" class="TableStyle-standard-BodyF-Column1-Body1">Argument</td>
                                                                <td style="font-weight: bold;background-color: #d3d3d3;" class="TableStyle-standard-BodyD-Column1-Body1">Description</td>
                                                            </tr>
                                                            <tr class="TableStyle-standard-Body-Body2">
                                                                <td class="TableStyle-standard-BodyF-Column1-Body2"><span class="code">-arg &lt;propertyName=propertyValue&gt;</span>
                                                                </td>
                                                                <td class="TableStyle-standard-BodyD-Column1-Body2">Pass any property name and value pair for your method to use.</td>
                                                            </tr>
                                                            <tr class="TableStyle-standard-Body-Body1">
                                                                <td class="TableStyle-standard-BodyF-Column1-Body1"><span class="code">-expectResults &lt;true|false&gt;</span>
                                                                </td>
                                                                <td class="TableStyle-standard-BodyD-Column1-Body1">Set test expectations on if results should come back from the connector for the current method. This can be used with the following methods: checkUserExists, downloadUsers, downloadGroups, and importUserProfile.</td>
                                                            </tr>
                                                            <tr class="TableStyle-standard-Body-Body2">
                                                                <td class="TableStyle-standard-BodyF-Column1-Body2"><span class="code">-file &lt;fileName&gt;</span>
                                                                </td>
                                                                <td class="TableStyle-standard-BodyD-Column1-Body2">The data file to use as input for the current method. Sample files are provided in data directory of testing utility package.</td>
                                                            </tr>
                                                            <tr class="TableStyle-standard-Body-Body1">
                                                                <td class="TableStyle-standard-BodyF-Column1-Body1"><span class="code">-header &lt;headerName=headerValue&gt;</span>
                                                                </td>
                                                                <td class="TableStyle-standard-BodyD-Column1-Body1">Any additional HTTP header you want sent to the SCIM server. For example, X-Internal-AuthHeader=secret</td>
                                                            </tr>
                                                            <tr class="TableStyle-standard-Body-Body2">
                                                                <td class="TableStyle-standard-BodyF-Column1-Body2"><span class="code">-method &lt;methodName&gt;</span>
                                                                </td>
                                                                <td class="TableStyle-standard-BodyD-Column1-Body2">
                                                                    <p><span class="code">createNewUser</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:

</p>
                                                                    <p>GET /Users?filter=userName=myemail@domain.com&amp;startIndex=1&amp;count=100

</p>
                                                                    <p>POST /Users
</p>
                                                                    <p>
If testing connector built using <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester passes a User object to create a new user using your connector. Tests the connector method SCIMService.createUser</p>
                                                                    <p><span class="code">createPendingUser</span>
                                                                    </p>
                                                                    <p>Http requests sent:</p>
                                                                    <p>POST /Users</p>
                                                                    <p>If you are testing a connector built using the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester passes a User object to create a pending user using your connector. It tests the connector method SCIMService.createUser.</p>
                                                                    <p><span class="code">downloadUsers</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>GET /Users?startIndex=1&amp;count=100</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector to return the full list of users. It tests the connector method SCIMService.getUsers (without a filter).</p>
                                                                    <p><span class="code">checkUserExists</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>/Users?filter=userName=myemai@domain.com&amp;startIndex=1&amp;count=100</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector if a specific user already exists. It requires the following additional properties: userIdFieldName and userIdFieldValue. It tests the connector method SCIMService.getUsers (with a filter).</p>
                                                                    <p><span class="code">importUserProfile</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>GET /Users/&lt;Id&gt;</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector to return a single user, passing it the user's ID. It requires the additional property, id. It tests the connector method SCIMService.getUser</p>
                                                                    <p><span class="code">activateUser</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>PUT /Users/&lt;id&gt;</p>
                                                                    <p>If you are testing connector built with <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector to activate an existing user. It tests the connector method SCIMService.updateUser.</p>
                                                                    <p><span class="code">deactivateUser</span>
                                                                    </p>
                                                                    <p>HTTP requests sent</p>
                                                                    <p>PUT /Users/&lt;id&gt;:</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector to deactivate an existing user. It tests the connector method SCIMService.updateUser.</p>
                                                                    <p><span class="code">reactivateUser</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>PUT /Users/&lt;id&gt;</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector to reactivate an existing user. It tests the connector method SCIMService.updateUser.</p>
                                                                    <p><span class="code">pushPasswordUpdate</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>PUT /Users/&lt;id&gt;</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector to update the password of an existing user. It tests the connector method SCIMService.updateUser pushProfileUpdate – <span class="mc-variable okta-variables.ProductName variable">Okta</span> asks your connector to update the properties of an existing user. It tests the connector method SCIMService.updateUser.</p>
                                                                    <p><span class="code">deleteGroup</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>DELETE /Groups/&lt;id&gt;</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector to delete a group. It tests the connector method SCIMService.deleteGroup.</p>
                                                                    <p><span class="code">updateGroup</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>PUT /Groups/&lt;id&gt;</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector to update a group. It tests the connector method SCIMService.updateGroup.</p>
                                                                    <p><span class="code">createGroup</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>POST /Groups</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector to create a group. It tests the connector method SCIMService.createGroup.</p>
                                                                    <p><span class="code">getGroupById</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester queries your connector to return a group based on the ID. It tests the connector method SCIMService.getGroup.</p>
                                                                    <p><span class="code">downloadGroups</span>
                                                                    </p>
                                                                    <p>HTTP requests sent:</p>
                                                                    <p>GET  /Groups?startIndex=1&amp;count=100</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester asks your connector to return the full list of groups. It tests the connector method SCIMService.getGroups.</p>
                                                                    <p><span class="code">getImplementedUserManagementCapabilities</span>
                                                                    </p>
                                                                    <p>HTTP request sent:</p>
                                                                    <p>GET /ServiceProviderConfigs</p>
                                                                    <p>If you are testing a connector built with the <span class="mc-variable okta-variables.ProductName variable">Okta</span> Connector SDK, the tester asks your connector to return the list of UserManagementCapabilities your connector has implemented. Tests the connector method SCIMService.getImplementedUserManagementCapabilities</p>
                                                                </td>
                                                            </tr>
                                                            <tr class="TableStyle-standard-Body-Body1">
                                                                <td class="TableStyle-standard-BodyC-Column1-Body1"><span class="code">-url &lt;url&gt;</span>
                                                                </td>
                                                                <td class="TableStyle-standard-BodyA-Column1-Body1">The URL of the SCIM server to use. Example:http://acme.com:8080</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                    <h2>Examples</h2>
                                                    <p>The default implementation provided by <span class="mc-variable okta-variables.ProductName variable">Okta</span> assumes that the appname is onprem_app and that the examples below and the input data files in the data folder use the custom schema name (urn:okta:onprem_app:1.0:user) for the App User custom schemas. When you implement the connector you need to use the correct appname.</p>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />createNewUser</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>createNewUser passes a SCIM User object in an attempt to create a new user using your connector. It tests the SCIMService.createUser connector SDK method. There are two supplied example data files to test with.</p>
                                                            <p>The test below sends the SCIM user defined in the createNewUser.json file to your SCIM connector. Some basic validation is performed on the user returned from your connector.</p>
                                                            <p><span class="codeblock" xml:space="preserve">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method createNewUser -file data/createNewUser.json</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 04-10-2013 13:23:01.258 ] [ INFO] - making POST request to http://localhost:8080/Users</p>
                                                            <p>[ 04-10-2013 13:23:01.449 ] [ INFO] - <span class="mc-variable okta-variables.ProductName variable">Okta</span> will use the ID 103 to identify this User in the future.</p>
                                                            <p>[ 04-10-2013 13:23:01.450 ] [ INFO] - User returned from connector:</p>
                                                            <p>schemas: "urn:scim:schemas:core:1.0", "urn:scim:schemas:extension:enterprise:1.0"</p>
                                                            <p>phoneNumbers:</p>
                                                            <p>value: "123-444-5555"</p>
                                                            <p>type: "mobile"</p>
                                                            <p>userName: "myemail@domain.com"</p>
                                                            <p>name:</p>
                                                            <p>familyName: "LastName"</p>
                                                            <p>givenName: "FirstName"</p>
                                                            <p>active: true</p>
                                                            <p>emails:</p>
                                                            <p>primary: true</p>
                                                            <p>value: "myemail@domain.com"</p>
                                                            <p>type: "primary"</p>
                                                            <p>primary: false</p>
                                                            <p>value: "mypersonalemail@domain.com"</p>
                                                            <p>type: "secondary"</p>
                                                            <p>password: "verySecure"</p>
                                                            <p>id: "103"</p>
                                                            <p>[ 04-10-2013 13:23:01.450 ] [ INFO] - OK!</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />createPendingUser</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>createPendingUser passes a SCIM User object int an attempt to create a pending user using your connector. It tests the SCIMService.createUser connector SDK method. There are two supplied example data files to test with.</p>
                                                            <p>createPendingUser is almost identical to createNewUser except that the active field for all users will be false.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method createPendingUser -file data/createPendingUser-withCustomExtension.json</span>
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />downloadUsers</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>downloadUsers asks your connector to return the full list of users. It tests the SCIMService.getUsers connector method without passing it a filter.</p>
                                                            <p>The test below makes a request to your SCIM connector asking for all users and the returned users will be logged to disk. The test could make multiple requests to your connector if multiple pages of users exist.</p>
                                                            <p><span class="code">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method downloadUsers</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 04-10-2013 14:14:18.888 ] [ INFO] - making GET request to http://localhost:8080/Users?startIndex=1&amp;count=100</p>
                                                            <p>[ 04-10-2013 14:14:19.003 ] [ INFO] - downloadUsers: 3 Users returned.</p>
                                                            <p>[ 04-10-2013 14:14:19.007 ] [ INFO] - downloadUsers: Users returned from connector logged to downloadUsers-20131004-141419.txt</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />checkUserExists</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>checkUserExists asks your connector if a specific user already exists. It tests the SCIMService.getUsers connector method by passing it a filter. Requires the additional properties: userIdFieldName and userIdFieldValue.</p>
                                                            <p>The test below uses the supplied properties to make a request to your SCIM connector. The test assumes that your SCIM connector will not find a user with the userName myemail@domain.com.</p>
                                                            <p>The output should look similar to this:</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080/ -method checkUserExists -arg userIdFieldName=userName -arg userIdFieldValue=myemail@domain.com -expectResults false</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 03-10-2013 14:54:16.741 ] [ INFO] - making GET request to http://localhost:8080/Users?filter=userName%20eq%20%22myemail%40dom...</p>
                                                            <p>[ 03-10-2013 14:54:16.846 ] [ INFO] - checkUserExists: No users returned from server. This should be expected.</p>
                                                            <p>[ 03-10-2013 14:54:16.846 ] [ INFO] - OK!</p>
                                                            <h3>Usage</h3>
                                                            <p>Running the code below (leaving off the -expectResults argument) should cause the tests to fail:</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080/ -method checkUserExists -arg userIdFieldName=userName -arg userIdFieldValue=myemail@domain.com</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 03-10-2013 14:57:41.218 ] [ INFO] - making GET request to http://localhost:8080/Users?filter=userName%20eq%20%22myemail%40dom...</p>
                                                            <p>[ 03-10-2013 14:57:41.319 ] [ ERROR] - Expected results from checkUserExists but did not get anything.</p>
                                                            <p>When your connector has found a user the user data will be printed out, in addition to some additional <span class="mc-variable okta-variables.ProductName variable">Okta</span> debugging information:</p>
                                                            <p>$ java -jar scim-sdk-tests.jar -url http://localhost:8080/ -method checkUserExists -arg userIdFieldName=id -arg userIdFieldValue=102</p>
                                                            <p>Response:</p>
                                                            <p>[ 03-10-2013 15:01:14.095 ] [ INFO] - making GET request to http://localhost:8080/Users?filter=id%20eq%20%22102%22&amp;startInd...</p>
                                                            <p>[ 03-10-2013 15:01:14.217 ] [ INFO] - checkUserExists: 1 users returned.</p>
                                                            <p>[ 03-10-2013 15:01:14.217 ] [ INFO] - checkUserExists: User returned from Connector:</p>
                                                            <p>schemas: "urn:scim:schemas:core:1.0", "urn:scim:schemas:extension:enterprise:1.0", "urn:okta:onprem_app:1.0:user"</p>
                                                            <p>id: "102"</p>
                                                            <p>userName: "admin"</p>
                                                            <p>name:</p>
                                                            <p>formatted: "SCIM firstname2 SCIM lastname2"</p>
                                                            <p>givenName: "SCIM first2"</p>
                                                            <p>familyName: "SCIM last2"</p>
                                                            <p>middleName: "SCIM middle2"</p>
                                                            <p>emails:</p>
                                                            <p>value: "SCIM_admin@okta.com"</p>
                                                            <p>primary: true</p>
                                                            <p>type: "work"</p>
                                                            <p>active: false</p>
                                                            <p>password: "god"</p>
                                                            <p>groups:</p>
                                                            <p>value: "1002"</p>
                                                            <p>display: "secondGroup"</p>
                                                            <p>urn:okta:onprem_app:1.0:user:</p>
                                                            <p>isAdmin: true</p>
                                                            <p>isOkta: false</p>
                                                            <p>departmentName: "Administration"</p>
                                                            <p>[ 03-10-2013 15:01:14.217 ] [ INFO] - checkUserExists: The ID 102 will be used as the id for this user in <span class="mc-variable okta-variables.ProductName variable">Okta</span></p>
                                                            <p>[ 03-10-2013 15:01:14.217 ] [ INFO] - checkUserExists: The user will be returned as INACTIVE</p>
                                                            <p style="font-weight: bold;">[ 03-10-2013 15:01:14.218 ] [ INFO] - OK!</p>
                                                            <p style="font-weight: bold;">Use Cases</p>
                                                            <p>How to search for a user by first name</p>
                                                            <p><span class="codeblock">java -jar scim-sdk-tests.jar -url http://localhost:8080/ -method checkUserExists -arg userIdFieldName=name.givenName -arg userIdFieldValue="SCIM first"</span>
                                                            </p>
                                                            <p>How to search for a user by a custom schema extension property</p>
                                                            <p><span class="codeblock">java -jar scim-sdk-tests.jar -url http://localhost:8080/ -method checkUserExists -arg userIdFieldName=urn:okta:onprem_app:1.0:user:departmentName -arg userIdFieldValue="Cloud Service"</span>
                                                            </p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />importUserProfile</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>importUserProfile asks your connector to return a single user by passing it the user's ID. It tests the SCIMService.getUser connector method. Requires the additional property: id.</p>
                                                            <p>The test below makes a request to your SCIM connector asking for a user with the id of 101.</p>
                                                            <p>$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method importUserProfile -arg id=101</p>
                                                            <p>Response:</p>
                                                            <p>[ 04-10-2013 13:57:54.092 ] [ INFO] - making GET request to http://localhost:8080/Users/101</p>
                                                            <p>[ 04-10-2013 13:57:54.203 ] [ INFO] - importUserProfile: User returned from Connector:</p>
                                                            <p>schemas: "urn:scim:schemas:core:1.0", "urn:scim:schemas:extension:enterprise:1.0", "urn:okta:onprem_app:1.0:user"</p>
                                                            <p>id: "101"</p>
                                                            <p>userName: "okta"</p>
                                                            <p>name:</p>
                                                            <p>formatted: "SCIM firstname SCIM lastname"</p>
                                                            <p>givenName: "SCIM first"</p>
                                                            <p>familyName: "SCIM last"</p>
                                                            <p>middleName: "SCIM middle"</p>
                                                            <p>emails:</p>
                                                            <p>value: "SCIM_okta@okta.com"</p>
                                                            <p>primary: true</p>
                                                            <p>type: "work"</p>
                                                            <p>active: true</p>
                                                            <p>password: "inSecure"</p>
                                                            <p>groups:</p>
                                                            <p>value: "1001"</p>
                                                            <p>display: "firstGroup"</p>
                                                            <p>value: "1002"</p>
                                                            <p>display: "secondGroup"</p>
                                                            <p>urn:okta:onprem_app:1.0:user:</p>
                                                            <p>isAdmin: false</p>
                                                            <p>isOkta: true</p>
                                                            <p>departmentName: "Cloud Service"</p>
                                                            <p>[ 04-10-2013 13:57:54.204 ] [ INFO] - importUserProfile: The ID 101 will be used as the id for this user in <span class="mc-variable okta-variables.ProductName variable">Okta</span></p>
                                                            <p>[ 04-10-2013 13:57:54.204 ] [ INFO] - OK!</p>
                                                            <p>Use Cases</p>
                                                            <p>The following shows how to search for a user that you expect not to exist:</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method importUserProfile -arg id=invalidExternalId -expectResults false</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 04-10-2013 14:00:01.081 ] [ INFO] - making GET request to http://localhost:8080/Users/invalidExternalId</p>
                                                            <p>[ 04-10-2013 14:00:01.245 ] [ WARN] - error status of 404 received from http://localhost:8080/Users/invalidExternalId</p>
                                                            <p>[ 04-10-2013 14:00:01.245 ] [ INFO] - importUserProfile: No users returned from server. This should be expected.</p>
                                                            <p>[ 04-10-2013 14:00:01.246 ] [ INFO] - OK!</p>
                                                            <p>The following shows how to search for a user that you expect but nothing is actually returned:</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method importUserProfile -arg id=103</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 04-10-2013 14:00:52.096 ] [ INFO] - making GET request to http://localhost:8080/Users/103</p>
                                                            <p>[ 04-10-2013 14:00:52.191 ] [ WARN] - error status of 404 received from http://localhost:8080/Users/103</p>
                                                            <p>[ 04-10-2013 14:00:52.191 ] [ ERROR] - Expected results from importUserProfile but did not get anything.</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />activateUser</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>activateUser asks your connector to activate an existing user. It tests the SCIMService.updateUser connector method.</p>
                                                            <p>The test below makes a request to your SCIM connector asking you to update the User. Since this is a test to activate the user, the active field will always be true.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080/ -method activateUser -file data/activateUser.json</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 10-10-2013 14:29:00.211 ] [ INFO] - making PUT request to http://localhost:8080/Users/101</p>
                                                            <p>[ 10-10-2013 14:29:00.598 ] [ INFO] - activateUser: will return to <span class="mc-variable okta-variables.ProductName variable">Okta</span> that the user's active state is: true</p>
                                                            <p>[ 10-10-2013 14:29:00.598 ] [ INFO] - OK!</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />deactivateUser</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>deactivateUser asks your connector to deactivate an existing user. It tests the SCIMService.updateUser connector method.</p>
                                                            <p>The test below makes a request to your SCIM connector asking you to update the User. Since this is a test to deactivate the user, the active field will always be false.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080/ -method deactivateUser -file data/deactivateUser.json</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 10-10-2013 14:32:51.211 ] [ INFO] - making PUT request to http://localhost:8080/Users/101</p>
                                                            <p>[ 10-10-2013 14:32:52.171 ] [ INFO] - NOTE: deactivateUser does not send the user returned from the connector back to <span class="mc-variable okta-variables.ProductName variable">Okta</span>. <span class="mc-variable okta-variables.ProductName variable">Okta</span> assumes that a non-error response from your connector means the deactivateUser methods was successful.</p>
                                                            <p>[ 10-10-2013 14:32:52.598 ] [ INFO] - OK!</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />reactivateUser</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>reactivateUser asks your connector to activate a previously deactivated user. It tests the SCIMService.updateUser connector method.</p>
                                                            <p>The test below makes a request to your SCIM connector asking you to update the User. Since this is a test to reactivate the user, the active field will always be true.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080/ -method reactivateUser -file data/reactivateUser.json</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 10-10-2013 14:35:04.704 ] [ INFO] - making PUT request to http://localhost:8080/Users/101</p>
                                                            <p>[ 10-10-2013 14:35:04.828 ] [ INFO] - NOTE: reactivateUser does not send the user returned from the connector back to <span class="mc-variable okta-variables.ProductName variable">Okta</span>. <span class="mc-variable okta-variables.ProductName variable">Okta</span> assumes that a non-error response from your connector means the reactivateUser methods was successful.</p>
                                                            <p>[ 10-10-2013 14:35:04.828 ] [ INFO] - OK!</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />pushPasswordUpdate</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>pushPasswordUpdate asks your connector to update the password of an existing user. It tests the SCIMService.updateUser connector method.</p>
                                                            <p>The test below makes a request to your SCIM connector asking you to update the User. Even though on the password has changed, the entire user object will be supplied to you.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080/ -method pushPasswordUpdate -file data/pushPasswordUpdate.json</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 10-10-2013 14:36:52.029 ] [ INFO] - making PUT request to http://localhost:8080/Users/101</p>
                                                            <p>[ 10-10-2013 14:36:52.124 ] [ INFO] - NOTE: pushPasswordUpdate does not send the user returned from the connector back to <span class="mc-variable okta-variables.ProductName variable">Okta</span>. <span class="mc-variable okta-variables.ProductName variable">Okta</span> assumes that a non-error response from your connector means the pushPasswordUpdate methods was successful.</p>
                                                            <p>[ 10-10-2013 14:36:52.124 ] [ INFO] - OK!</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />pushProfileUpdate</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>pushProfileUpdate asks your connector to update the properties of an existing user. It tests the SCIMService.updateUser connector method.</p>
                                                            <p>The test below makes a request to your SCIM connector asking you to update the User. The entire user object will be supplied to you, not an object containing only the changed fields.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080/ -method pushProfileUpdate -file data/pushProfileUpdate.json</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 10-10-2013 14:39:44.693 ] [ INFO] - making PUT request to http://localhost:8080/Users/101</p>
                                                            <p>[ 10-10-2013 14:39:44.785 ] [ INFO] - NOTE: pushProfileUpdate does not send the user returned from the connector back to <span class="mc-variable okta-variables.ProductName variable">Okta</span>. <span class="mc-variable okta-variables.ProductName variable">Okta</span> assumes that a non-error response from your connector means the pushProfileUpdate methods was successful.</p>
                                                            <p>[ 10-10-2013 14:39:44.786 ] [ INFO] - OK!</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />downloadGroups</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>downloadGroups asks your connector to return the full list of groups. It tests the SCIMService.getGroups connector method.</p>
                                                            <p>The test below makes a request to your SCIM connector asking for all groups and the returned groups will be logged to disk. The test could make multiple requests to your connector if multiple pages of groups exist.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method downloadGroups</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 10-10-2013 14:40:55.598 ] [ INFO] - making GET request to http://localhost:8080/Groups?startIndex=1&amp;count=100</p>
                                                            <p>[ 10-10-2013 14:40:55.816 ] [ INFO] - downloadGroups: 2 Groups returned.</p>
                                                            <p>[ 10-10-2013 14:40:55.819 ] [ INFO] - downloadGroups: Groups returned from connector logged to downloadGroups-20131010-144055.txt</p>
                                                            <p>[ 10-10-2013 14:40:55.820 ] [ INFO] - OK!</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />getGroupById</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>getGroupById asks your connector to return a group based on the supplied ID. This tests the SCIMService.getGroup connector method. Requires the additional property: id.</p>
                                                            <p>The test below makes a request to your SCIM connector asking you to return the Group. All the properties of the group will be printed.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method getGroupById -arg id=1002</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 17-10-2013 18:03:17.270 ] [ INFO] - making GET request to http://localhost:8080/Groups/1002</p>
                                                            <p>[ 17-10-2013 18:03:17.381 ] [ INFO] - getGroupById : Group returned from connector:</p>
                                                            <p>schemas: "urn:scim:schemas:core:1.0", "urn:okta:custom:group:1.0"</p>
                                                            <p>id: "1002"</p>
                                                            <p>members:</p>
                                                            <p>value: "User-001"</p>
                                                            <p>display: "First User"</p>
                                                            <p>value: "User-002"</p>
                                                            <p>display: "Second User"</p>
                                                            <p>displayName: "AppGroup-Changed"</p>
                                                            <p>urn:okta:custom:group:1.0:</p>
                                                            <p>description: "This is the changed first group"</p>
                                                            <p>[ 17-10-2013 18:03:17.381 ] [ INFO] - OK!</p>
                                                            <p>If a group is not found for the id, then you would see the output like below :</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method getGroupById -arg id=3455</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 18-10-2013 10:22:40.733 ] [ INFO] - making GET request to http://localhost:8080/Groups/3455</p>
                                                            <p>[ 18-10-2013 10:22:40.833 ] [ WARN] - error status of 404 received from http://localhost:8080/Groups/3455</p>
                                                            <p>[ 18-10-2013 10:22:40.833 ] [ ERROR] - Expected results from getGroupById but did not get anything.</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />createGroup</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>createGroup sends a group to the connector so that it can be created. This tests the SCIMService.createGroup connector method.</p>
                                                            <p>If the same group exists on your system, you should throw a DuplicateGroupException.</p>
                                                            <p>The test below makes a request to your SCIM connector asking you to create the group and return it. All the properties of the group will be printed.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method createGroup -file data/createGroup.json</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 17-10-2013 18:09:02.457 ] [ INFO] - making POST request to http://localhost:8080/Groups</p>
                                                            <p>[ 17-10-2013 18:09:02.564 ] [ INFO] - <span class="mc-variable okta-variables.ProductName variable">Okta</span> will use the ID 1004 to identify this Group in the future.</p>
                                                            <p>[ 17-10-2013 18:09:02.564 ] [ INFO] - Group returned from connector:</p>
                                                            <p>schemas: "urn:scim:schemas:core:1.0", "urn:okta:custom:group:1.0"</p>
                                                            <p>id: "1004"</p>
                                                            <p>members:</p>
                                                            <p>value: "User-003"</p>
                                                            <p>display: "Third User"</p>
                                                            <p>value: "User-004"</p>
                                                            <p>display: "Fourth User"</p>
                                                            <p>value: "User-005"</p>
                                                            <p>display: "Fifth User"</p>
                                                            <p>displayName: "AppGroup-02"</p>
                                                            <p>urn:okta:custom:group:1.0:</p>
                                                            <p>description: "This is the second group"</p>
                                                            <p>[ 17-10-2013 18:09:02.565 ] [ INFO] - OK!</p>
                                                            <p>If the connector throws a DuplicateGroupException when asked to create a group, you would see the following output:</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method createGroup -file data/createGroup.json</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 18-10-2013 10:29:49.473 ] [ INFO] - making POST request to http://localhost:8080/Groups</p>
                                                            <p>[ 18-10-2013 10:29:49.576 ] [ WARN] - error status of 409 received from http://localhost:8080/Groups</p>
                                                            <p>[ 18-10-2013 10:29:49.577 ] [ ERROR] - Cannot create the group [{</p>
                                                            <p>"schemas": ["urn:scim:schemas:core:1.0", "urn:okta:custom:group:1.0"],</p>
                                                            <p>"displayName": "AppGroup-02",</p>
                                                            <p>"id": "1004",</p>
                                                            <p>"members" : [{"value": "User-003", "display": "Third User"},{"value": "User-004", "display": "Fourth User"},{"value": "User-005", "display": "Fifth User"}],</p>
                                                            <p>"urn:okta:custom:group:1.0":{</p>
                                                            <p>"description":"This is the second group"</p>
                                                            <p>}</p>
                                                            <p>}]. It already exists</p>
                                                            <p>[ 18-10-2013 10:29:49.577 ] [ ERROR] - Duplicate group found. Cannot create the group</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />updateGroup</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>updateGroup sends a group to the connector so that it can be updated. This tests the SCIMService.updateGroup connector method.</p>
                                                            <p>The test below will make a request to your SCIM connector asking you to update the group and return it.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method updateGroup -file data/updateGroup.json</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 17-10-2013 18:11:11.842 ] [ INFO] - making PUT request to http://localhost:8080/Groups/1002</p>
                                                            <p>[ 17-10-2013 18:11:11.939 ] [ INFO] - NOTE: updateGroup does not send the group returned from the connector back to <span class="mc-variable okta-variables.ProductName variable">Okta</span>. <span class="mc-variable okta-variables.ProductName variable">Okta</span> assumes that a non-error response from your connector means the updateGroup methods was successful.</p>
                                                            <p>[ 17-10-2013 18:11:11.939 ] [ INFO] - OK!</p>
                                                        </div>
                                                    </div>
                                                    <div class="MCDropDown MCDropDown_Closed dropDown"><span class="MCDropDownHead dropDownHead"><a href="#" class="MCDropDownHotSpot dropDownHotspot MCDropDownHotSpot_ MCHotSpotImage" aria-expanded="false"><img class="MCDropDown_Image_Icon" src="../../../../Skins/Default/Stylesheets/Images/transparent.gif" height="11" width="16" alt="Closed" data-mc-alt2="Open" />deleteGroup</a></span>
                                                        <div class="MCDropDownBody dropDownBody">
                                                            <p>deleteGroup sends an ID to the connector so that the group with that ID can be deleted. This tests the SCIMService.deleteGroup connector method. Requires the additional property: id.</p>
                                                            <p>An EntityNotFoundException should be thrown if a group with that id does not exist.</p>
                                                            <p>The test below makes a request to your SCIM connector asking you to delete the group.</p>
                                                            <p><span class="codeblock">$ java -jar scim-sdk-tests.jar -url http://localhost:8080 -method deleteGroup -arg id=1003</span>
                                                            </p>
                                                            <p>Response:</p>
                                                            <p>[ 17-10-2013 18:16:27.553 ] [ INFO] - making DELETE request to http://localhost:8080/Groups/1003</p>
                                                            <p>[ 17-10-2013 18:16:27.646 ] [ INFO] - NOTE: deleteGroup does not send any data back to <span class="mc-variable okta-variables.ProductName variable">Okta</span>. <span class="mc-variable okta-variables.ProductName variable">Okta</span> assumes that a non-error response from your connector means the deleteGroup was successful and the group with the Id 1003 was deleted</p>
                                                            <p>[ 17-10-2013 18:16:27.646 ] [ INFO] - OK!</p>
                                                        </div>
                                                    </div>
                                                    <h2>Next steps</h2>
                                                    <p><a href="opp-connect-scim-connector.htm" class="MCXref xref">Connect to a SCIM&#160;connector</a>
                                                    </p>
                                                    <h2>Related topics</h2>
                                                    <p><a href="opp-build-scim-using-sdk.htm" class="MCXref xref">Create SCIM&#160;connectors for on-premises provisioning using SDK</a>
                                                    </p>
                                                    <p><a href="opp-create-scim-connectors.htm" class="MCXref xref">Create SCIM connectors for on-premises provisioning</a>
                                                    </p>
                                                    <p style="text-decoration: none;"><a href="opp-provision-scim-messages.htm" class="MCXref xref">SCIM messages for on-premises provisioning</a>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- div class="toolbar-main">
            <MadCap:topicToolbarProxy data-mc-skin="/Project/Skins/okta-toolbar-no-expand.flskn" style="mc-topic-toolbar-items: ;" />
                </div -->
                                    <!-- *********************** Footer rows ********************************* -->
                                    <div class="footer2" data-test="footer">
                                        <div>
                                            <p class="copyright" data-mc-conditions="MultiProdPublish.OIE">Okta Identity Engine is currently available to a selected audience.
	</p>
                                            <p class="copyright" data-test="copyrightNotice">©  <span class="mc-variable okta-variables.Year variable">2023</span> <span class="mc-variable okta-variables.CompanyName variable">Okta, Inc</span>. All Rights Reserved. Various trademarks held by their respective owners.
	</p>
                                        </div>
                                    </div>
                                    <!-- Qualtrics setup to use with script below, replacing getfeedback -->
                                    <div id="ZN_6fGBJ8J3VcIBymN">
                                        <!--DO NOT REMOVE-CONTENTS PLACED HERE-->
                                    </div>
                                    <!-- ********************** Scripts ************************************* -->
                                    <!-- Foundation -->
                                    <script src="../../../resources/scripts/js/ignore-dompurify.js">
                                    </script>
                                    <script src="../../../resources/scripts/js/app.js">
                                    </script>
                                    <script src="../../../resources/scripts/js/vendor/what-input.js">
                                    </script>
                                    <script src="https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.4-rc1/js/foundation.min.js">
                                    </script>
                                    <script type="text/javascript" src="../../../resources/scripts/js/vendor/qualtrics.js">
                                    </script>
                                    <!-- Coveo -->
                                    <script src="https://static.cloud.coveo.com/searchui/v2.5395/js/CoveoJsSearch.Lazy.min.js" defer="defer">
                                    </script>
                                    <script src="../../../resources/scripts/coveo-resources/js/cultures/en.js" id="coveoCultureScript" defer="defer">
                                    </script>
                                    <script src="../../../resources/scripts/coveo-resources/js/coveo.madcapflare.requirejs.js" id="coveoRequireScript" defer="defer">
                                    </script>
                                    <script src="../../../resources/scripts/coveo-resources/js/coveo.madcapflare.okta.js" id="coveoInitscript" defer="defer">
                                    </script>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>