<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="ja-jp" xml:lang="ja-jp" class="_Skins_okta_html5_topnav_nav_poc" data-mc-search-type="Stem" data-mc-help-system-file-name="okta_help.xml" data-mc-path-to-help-system="../../../" data-mc-has-content-body="True" data-mc-toc-path="Authentication|[%=System.LinkedHeader%]|MFA integrations|[%=System.LinkedHeader%]" data-mc-conditions="MultiProdPublish.Classic+OIE" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="typeofcontent" content="documentation" />
        <meta name="audience" content="OIE Admins" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="description" content="Windowsサーバー、RDP、Credential Provider for WindowsのMFAに関するトラブルシューティングを行います。" /><title>Windows Credential ProviderのMFAに関するトラブルシューティング | Okta</title>
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, height=device-height" />
        <link rel="shortcut icon" href="../../Resources/Images/favicon.ico" type="image/x-icon" />
        <!-- Google Tag Manager -->
        <!-- End Google Tag Manager -->
        <!-- Google Tag Manager -->
        <!-- End Google Tag Manager -->
        <!-- Pendo Script (Per Chris Bank) -->
        <!-- End Pendo Script -->
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link href="../../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" type="text/css" data-mc-generated="True" />
        <link rel="stylesheet" href="https://static.cloud.coveo.com/searchui/v2.5395/css/CoveoFullSearchNewDesign.css" />
        <style>/*<meta />*/

.button.select-language-button
{
	-pie-background: linear-gradient(#ffffff, #ffffff);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="../../resources/stylesheets/okta-main-new-nav.css" rel="stylesheet" type="text/css" />
        <script src="../../../Resources/Scripts/jquery.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/purify.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/require.min.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/require.config.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/foundation.6.2.3_custom.js" type="text/javascript">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js" type="text/javascript" defer="defer">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js" type="text/javascript" defer="defer">
        </script>
        <script>
			/* <![CDATA[ */
			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-NMZZV4P');
			/* ]]> */
		</script>
        <script>
			/* <![CDATA[ */
			(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
			new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
			j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
			'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
			})(window,document,'script','dataLayer','GTM-KXMLV58');
			/* ]]> */
		</script>
        <script>
		/* <![CDATA[ */
		(function(apiKey){
			(function(p,e,n,d,o){var v,w,x,y,z;o=p[d]=p[d]||{};o._q=o._q||[];
			v=['initialize','identify','updateOptions','pageLoad','track'];for(w=0,x=v.length;w<x;++w)(function(m){
			o[m]=o[m]||function(){o._q[m===v[0]?'unshift':'push']([m].concat([].slice.call(arguments,0)));};})(v[w]);
			y=e.createElement(n);y.async=!0;y.src='https://cdn.pendo.io/agent/static/'+apiKey+'/pendo.js';
			z=e.getElementsByTagName(n)[0];z.parentNode.insertBefore(y,z);})(window,document,'script','pendo');

        pendo.initialize({
            visitor: {
                id:              'VISITOR-UNIQUE-ID'
            },
            account: {
                id:           'ACCOUNT-UNIQUE-ID'
            }
        });
		})('a9bd3885-93ae-46ab-700b-dd29e613c19d');
		/* ]]> */
        function openSurvey() {
            window.open('https://surveys.okta.com/jfe/form/SV_e4L0iW8a3tz8Yol?source=' + encodeURIComponent(document.location.href), '_blank');
        }
		</script>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <aside class="off-canvas position-right" role="navigation" id="offCanvas" data-off-canvas="" data-position="right" data-mc-ignore="true">
                    <ul class="off-canvas-drilldown vertical menu off-canvas-list" data-drilldown="" data-mc-back-link="Back" data-mc-css-tree-node-expanded="is-drilldown-submenu-parent" data-mc-css-tree-node-collapsed="is-drilldown-submenu-parent" data-mc-css-sub-menu="vertical menu slide-in-right is-drilldown-submenu" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="True" data-mc-include-back="True" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.drilldown" data-mc-toc="True">
                    </ul>
                </aside>
                <div class="off-canvas-content inner-wrap" data-off-canvas-content="">
                    <div data-sticky-container="" class="title-bar-container">
                        <nav class="title-bar tab-bar sticky" role="banner" data-sticky="" data-options="marginTop:0" style="width:100%" data-sticky-on="only screen and (max-width: 1024px)" data-mc-ignore="true"><a class="skip-to-content fluid-skip showOnFocus" href="#">メインコンテンツにスキップ</a>
                            <div class="middle title-bar-section outer-row clearfix">
                                <div class="menu-icon-container relative clearfix">
                                    <div class="central-account-wrapper">
                                        <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">アカウント</span></a>
                                            <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">設定</a>
                                                <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">ログアウト</a>
                                            </div>
                                        </div>
                                    </div>
                                    <button class="menu-icon" aria-label="ナビゲーションパネルを表示" data-toggle="offCanvas"><span></span>
                                    </button>
                                </div>
                            </div>
                            <div class="title-bar-layout outer-row">
                                <div class="logo-wrapper"><a class="logo" href="https://help.okta.com/okta_help.htm?id=csh-index" alt="Okta"></a>
                                </div>
                                <div class="navigation-wrapper nocontent">
                                    <ul class="navigation clearfix" role="navigation" data-mc-css-tree-node-has-children="has-children" data-mc-css-sub-menu="sub-menu" data-mc-expand-event="mouseenter" data-mc-top-nav-menu="True" data-mc-max-depth="2" data-mc-include-icon="False" data-mc-include-indicator="False" data-mc-include-children="True" data-mc-include-siblings="True" data-mc-include-parent="True" data-mc-toc="True">
                                        <li class="placeholder" style="visibility:hidden"><a>プレースホルダー</a>
                                        </li>
                                    </ul>
                                </div>
                                <div class="central-account-wrapper">
                                    <div class="central-dropdown"><a class="central-account-drop"><span class="central-account-image"></span><span class="central-account-text">アカウント</span></a>
                                        <div class="central-dropdown-content"><a class="MCCentralLink central-dropdown-content-settings">設定</a>
                                            <hr class="central-separator" /><a class="MCCentralLink central-dropdown-content-logout">ログアウト</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="nav-search-wrapper">
                                    <div class="nav-search row">
                                        <form class="search" action="#">
                                            <div class="search-bar search-bar-container needs-pie">
                                                <input class="search-field needs-pie" type="search" aria-label="検索フィールド" placeholder="検索" />
                                                <div class="search-filter-wrapper"><span class="invisible-label" id="search-filters-label">フィルター： </span>
                                                    <div class="search-filter" aria-haspopup="true" aria-controls="sf-content" aria-expanded="false" aria-label="検索フィルター" title="すべてのファイル" role="button" tabindex="0">
                                                    </div>
                                                    <div class="search-filter-content" id="sf-content">
                                                        <ul>
                                                            <li>
                                                                <button class="mc-dropdown-item" aria-labelledby="search-filters-label filterSelectorLabel-00001"><span id="filterSelectorLabel-00001">すべてのファイル</span>
                                                                </button>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="search-submit-wrapper" dir="ltr">
                                                    <div class="search-submit" title="検索" role="button" tabindex="0"><span class="invisible-label">検索を送信</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </nav>
                    </div>
                    <div class="main-section">
                        <div class="row outer-row sidenav-layout">
                            <nav class="sidenav-wrapper">
                                <div class="sidenav-container">
                                    <ul class="off-canvas-accordion vertical menu sidenav" data-accordion-menu="" data-mc-css-tree-node-expanded="is-accordion-submenu-parent" data-mc-css-tree-node-collapsed="is-accordion-submenu-parent" data-mc-css-sub-menu="vertical menu accordion-menu is-accordion-submenu nested" data-mc-include-indicator="False" data-mc-include-icon="False" data-mc-include-parent-link="False" data-mc-include-back="False" data-mc-defer-expand-event="True" data-mc-expand-event="click.zf.accordionMenu" data-mc-toc="True" data-mc-side-nav-menu="True">
                                    </ul>
                                </div>
                            </nav>
                            <div class="body-container">
                                <div data-mc-content-body="True">
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NMZZV4P" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <!-- Google Tag Manager (noscript) -->
                                    <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KXMLV58" height="0" width="0" style="display:none;visibility:hidden"></iframe>
                                    </noscript>
                                    <!-- End Google Tag Manager (noscript) -->
                                    <!-- Coveo config parameters -->
                                    <div id="coveo_org_id" style="Display:None"><span class="mc-variable okta-coveo-config.OrgId variable">oktaproduction9ounvcxa</span>
                                    </div>
                                    <div id="coveo_rest_uri" style="Display:None"><span class="mc-variable okta-coveo-config.PlatformRestUri variable">https://platform.cloud.coveo.com/rest/search</span>
                                    </div>
                                    <div id="coveo_search_url" style="Display:None"><span class="mc-variable okta-coveo-config.SearchPageUrl variable">https://support.okta.com/help/s/global-search/%40uri</span>
                                    </div>
                                    <div id="coveo_token_url" style="Display:None"><span class="mc-variable okta-coveo-config.SearchTokenServiceUrl variable">https://support.okta.com/help/services/apexrest/PublicSearchToken?site=help</span>
                                    </div>
                                    <div id="coveo_dev_org_id" style="Display:None"><span class="mc-variable okta-coveo-config.DevOrgId variable">oktanonproduction1il1gtac7</span>
                                    </div>
                                    <div id="coveo_dev_token" style="Display:None"><span class="mc-variable okta-coveo-config.DevSearchToken variable">xxb48840fe-d60d-4e40-b1d3-522d5a35c384</span>
                                    </div>
                                    <!-- End Coveo config parameters -->
                                    <!-- ************** Coveo Search bar ************************************* -->
                                    <!-- set margin and size in /Content/Resources/Scripts/coveo-resources/css/Coveo.Okta.StandaloneSearchbox.min.css to make room for replacing Flare-generated top-nav with HTML code (see below)-->
                                    <div id="OLC_Coveo_Headline" class="coveo-headline-wrapper" data-mc-conditions="MultiProdPublish.SearchBar">
                                        <div class="slds-p-vertical_small">
                                            <!--Search Bar-->
                                            <div class="slds-grid slds-grid_align-center">
                                                <div id="customSelect" class="CoveoCustomSelect slds-float_right">
                                                </div>
                                                <div id="standaloneSearchbox">
                                                    <div class="CoveoAnalytics" data-search-hub="OktaCommunityFullSearch">
                                                    </div>
                                                    <div class="CoveoTab" data-id="Help" data-caption="Help" style="display:none">
                                                    </div>
                                                    <div class="CoveoSearchbox" data-enable-omnibox="true" data-enable-query-suggest-addon="true">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="replace_top_nav">
                                        <div class="navbar" data-mc-conditions="Primary.live-site-only">
                                            <div class="dropdown" data-test="menuBarCategory" id="documentationMenu" data-mc-conditions="MultiProdPublish.DocMenu">
                                                <button class="dropbtn">ドキュメント <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content" data-test="menuBarItems">
                                                    <div><a href="https://help.okta.com/ja-jp/Content/index.htm" data-test="menuBarLink">製品ドキュメント</a>
                                                    </div>
                                                    <div><a href="https://developer.okta.com" target="_blank" data-test="menuBarLink">開発者用ドキュメント</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory" id="knowledgebaseMenu"><a href="https://support.okta.com/help/s/knowledge?language=ja" data-test="menuBarLink">ナレッジベース</a>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory" id="communityMenu">
                                                <button class="dropbtn">コミュニティ <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content" data-test="menuBarItems">
                                                    <div><a href="https://support.okta.com/help/s/community?language=ja" data-test="menuBarLink">ホーム</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/group/CollaborationGroup/Recent?language=ja" data-test="menuBarLink">ディスカッション</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/questions?language=ja" data-test="menuBarLink">質問</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/ideas?language=ja" target="_blank" data-test="menuBarLink">アイデア</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/events?language=ja" data-test="menuBarLink">ウェビナー</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/blogs?language=ja" data-test="menuBarLink">ブログ</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory" id="productMenu">
                                                <button class="dropbtn">製品 <i class="fa fa-caret-down"></i></button>
                                                <div class="dropdown-content" data-test="menuBarItems">
                                                    <div><a href="https://support.okta.com/help/s/productroadmap?language=ja" data-test="menuBarLink">ロードマップ</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/product-hub?language=ja" data-test="menuBarLink">製品ハブ</a>
                                                    </div>
                                                    <div><a href="https://support.okta.com/help/s/mysuccesshub/get-started?language=ja" data-test="menuBarLink">お客様成功ハブ</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="dropdown" data-test="menuBarCategory" id="trainingMenu"><a href="https://www.okta.com/services/education-services/" target="_blank" data-test="menuBarLink">トレーニング</a>
                                            </div>
                                        </div>
                                        <div class="logo_container" id="OktaBanner" data-mc-conditions="Primary.live-site-only"><a class="logo" href="https://help.okta.com/okta_help.htm?id=csh-index" data-test="OktaBanner"><img src="../../resources/images/okta-assets/logo.png" alt="Okta製品ドキュメント" title="Okta製品ドキュメント" data-test="OktaBannerImg" /></a>
                                        </div>
                                        <div class="toolbar-main" data-test="toolBar" data-mc-conditions="Primary.live-site-only">
                                            <div class="buttons popup-container clearfix topicToolbarProxy _Skins_okta_toolbar_no_expand mc-component nocontent" style="mc-topic-toolbar-items: ;">
                                                <div class="button-group-container-left">
                                                    <button class="button needs-pie select-language-button" title="言語を変更">
                                                        <div>
                                                            <div role="img" class="button-icon-wrapper" aria-label="言語を変更">
                                                                <div class="button-icon"> </div>
                                                            </div>
                                                        </div>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- **********************  Main content row  ********************** -->
                                    <div class="okta-topics" data-test="bodyWrapper">
                                        <!-- *** Col1: Body Col *** -->
                                        <div>
                                            <div class="is-not-in-mobile">
                                                <!-- Breadcrumbs -->
                                                <div class="nocontent">
                                                    <div class="MCBreadcrumbsBox_0 breadcrumbs" role="navigation" aria-label="ブレッドクラム" data-mc-breadcrumbs-divider="  &gt;  " data-mc-breadcrumbs-count="3" data-mc-toc="True">
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="oie-label" data-mc-conditions="MultiProdPublish.OIE">
                                                <img class="oie-label" title="ラベル：Okta Identity Engineコンテンツ" src="../../resources/images/okta-assets/identity_engine.svg" />
                                            </div>
                                            <div class="body-main" data-test="bodyContent">
                                                <!-- Main content body -->
                                                <div role="main" id="mc-main-content">
                                                    <h1>Windows Credential ProviderのMFAに関するトラブルシューティング</h1>
                                                    <p>トラブルシューティングのシナリオと解決策</p>
                                                    <h3>サインイン中に［MFA Bypass（MFAバイパス）］ダイアログが表示される</h3>
                                                    <p>症状： </p>
                                                    <p>サインイン時に<span class="wintitle">［MFA Bypass（MFAバイパス）］</span>ダイアログが表示されます。</p>
                                                    <p>解決策： </p>
                                                    <p>ユーザーがMFAポリシーに含まれていることをOktaで確認します。
</p>
                                                    <div class="noteOkta">
                                                        <p class="noteContent">App-SignOnポリシーは、Microsoft RDPアプリに関連する唯一のポリシーです。</p>
                                                    </div>
                                                    <h3>サインイン中に<span class="wintitle">［Display Failed（表示に失敗しました）］</span>ダイアログが表示される </h3>
                                                    <p>症状：</p>
                                                    <p>サインイン時に<span class="wintitle">［Display Failed（表示に失敗しました）］</span>ダイアログが表示されます。</p>
                                                    <p>以下を検証します。</p>
                                                    <ul>
                                                        <li>クライアントID、クライアントシークレット、Okta URLが正しく構成されている。</li>
                                                        <li>Windowsサインインに入力したユーザー名がOktaのユーザー名と一致する。</li>
                                                    </ul>
                                                    <h3>サーバーにRDPを接続できない</h3>
                                                    <p>症状： </p>
                                                    <p>エンドユーザーがRDPクライアントを使用してOkta Credential Provider for Windows対応のワークステーションまたはサーバーに接続できません。          </p>
                                                    <p>解決策： </p>
                                                    <p><span class="wintitle">［System Properties（システムのプロパティー）］</span>ダイアログに表示されるように、<span class="uicontrol">［Allow remote connections to this computer（このコンピューターへのリモート接続を許可する）］</span>と<span class="uicontrol">［Allow connections only from computers running Remote Desktop with Network Level Authentication（ネットワークレベル認証でリモートデスクトップを実行しているコンピューターからのみ接続を許可する）］</span>が有効になっていることを確認します。</p>
                                                    <h3>System.Net.WebExceptionが表示される					
						</h3>
                                                    <p>
            症状： </p>
                                                    <p>以下のような例外が表示されます。TLSのバージョンが古い可能性があります。OktaではTLS 1.2以降が必要です。</p><span class="codeblock">System.Net.WebException: The underlying connection was closed: An unexpected error occurred on a send.
. . . System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host. 
. . . System.Net.Sockets.SocketException: An existing connection was forcibly closed by the remote host.</span>
                                                    <p>
            解決策： 				    </p>
                                                    <p>管理者としてPowerShellターミナルを開き、次のスクリプトを実行します。
</p>
                                                    <div>
                                                        <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">コピー</a>
                                                            <div style="mc-code-lang: PowerShell;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="True"><pre><span class="codeSnippetLineNumbers" style="border-right: #AAA 2px solid;" aria-hidden="true">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
</span><code><span style="font-weight: bold; ">$is64bit</span> = [IntPtr]::Size * <span style="color: #333333; ">8</span> <span style="color: #795da3; ">-eq</span> <span style="color: #333333; ">64</span><br /><span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;Is 64-bit script: $is64bit&quot;</span><br /><span style="color: #969896; ">#helper function to check for if 0x800 bit is set</span><br /><span style="color: #a71d5d; font-weight: bold; ">function</span> checkTls12Bit([Int] <span style="font-weight: bold; ">$regValue</span>) {<br />    <span style="color: #a71d5d; ">return</span> (<span style="font-weight: bold; ">$regValue</span> <span style="color: #795da3; ">-band</span> <span style="color: #333333; ">0x800</span>) <span style="color: #795da3; ">-ne</span> <span style="color: #333333; ">0x800</span><br />}<br /><br /><span style="color: #a71d5d; font-weight: bold; ">function</span> setRegKeyToBitValue([string] <span style="font-weight: bold; ">$regBranch</span>, [string] <span style="font-weight: bold; ">$regKey</span>) {<br />    <span style="font-weight: bold; ">$current</span> = <span style="color: #a71d5d; font-weight: bold; ">Get-ItemProperty</span> -Path <span style="font-weight: bold; ">$regBranch</span> -ErrorAction SilentlyContinue<br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$current</span> <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$null</span>) {<br />        <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;$regBranch\$regKey does not exist. No change.&quot;</span> <br />        <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$false</span><br />    }<br />    <span style="font-weight: bold; ">$regValue</span> = <span style="font-weight: bold; ">$current</span>.<span style="font-weight: bold; ">$regKey</span><br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$regValue</span> <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$null</span> <span style="color: #795da3; ">-or</span> (checkTls12Bit <span style="font-weight: bold; ">$regValue</span>) ) {<br />        <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$regValue</span> <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$null</span>) {<br />            <span style="font-weight: bold; ">$regValue</span> = <span style="color: #333333; ">0x800</span><br />         } <span style="color: #a71d5d; font-weight: bold; ">else</span>    {<br />             <span style="font-weight: bold; ">$regValue</span> = <span style="font-weight: bold; ">$regValue</span> <span style="color: #795da3; ">-bor</span> <span style="color: #333333; ">0x800</span><br />          }<br /><br />         <span style="font-weight: bold; ">$p</span> = <span style="color: #a71d5d; font-weight: bold; ">New-ItemProperty</span> <span style="font-weight: bold; ">$regBranch</span> -Name <span style="font-weight: bold; ">$regKey</span> -PropertyType DWord -Value <span style="font-weight: bold; ">$regValue</span> -ErrorAction Stop -Force<br />         <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;Updated $regBranch\$regKey value to $regValue&quot;</span> <br />         <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$true</span><br />     }<br />    <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;$regBranch\$regKey value is $regValue. No change.&quot;</span><br />    <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$false</span><br />}<br /><br /><span style="color: #a71d5d; font-weight: bold; ">function</span> setRegKeyToValueOfOne([string] <span style="font-weight: bold; ">$regBranch</span>, [string] <span style="font-weight: bold; ">$regKey</span>) {<br />    <span style="font-weight: bold; ">$current</span> = <span style="color: #a71d5d; font-weight: bold; ">Get-ItemProperty</span> -Path <span style="font-weight: bold; ">$regBranch</span> -ErrorAction SilentlyContinue<br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$current</span> <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$null</span>) {<br />        <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;$regBranch\$regKey does not exist. No change.&quot;</span> <br />        <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$false</span><br />    }<br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$current</span>.<span style="font-weight: bold; ">$regKey</span> <span style="color: #795da3; ">-ne</span> <span style="color: #333333; ">1</span>) {<br />        <span style="font-weight: bold; ">$p</span> = <span style="color: #a71d5d; font-weight: bold; ">New-ItemProperty</span> <span style="font-weight: bold; ">$regBranch</span> -Name <span style="font-weight: bold; ">$regKey</span> -PropertyType DWord -Value <span style="color: #333333; ">1</span> -ErrorAction Stop -Force<br />        <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;Updated $regBranch\$regKey value to 1&quot;</span><br />        <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$true</span><br />     }<br />    <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;$regBranch\$regKey value is 1. No change.&quot;</span><br />    <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$false</span><br />}<br /><br /><span style="color: #969896; ">#setup .net tls settings</span><br /><span style="color: #a71d5d; font-weight: bold; ">function</span> setupTls4NET([boolean]<span style="font-weight: bold; ">$is64bit</span>, [string]<span style="font-weight: bold; ">$regBranch</span>, [string]<span style="font-weight: bold; ">$reg32bitBranch</span>) {<br /><span style="color: #969896; "># https://docs.microsoft.com/ja-jp/dotnet/framework/network-programming/tls</span><br />    <span style="font-weight: bold; ">$updated</span> = setRegKeyToValueOfOne <span style="font-weight: bold; ">$regBranch</span> <span style="color: #df5000; ">&quot;SchUseStrongCrypto&quot;</span><br />    <span style="font-weight: bold; ">$updated</span> = (setRegKeyToValueOfOne <span style="font-weight: bold; ">$regBranch</span> <span style="color: #df5000; ">&quot;SystemDefaultTlsVersions&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br /><br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$is64bit</span>) {<br />        <span style="font-weight: bold; ">$updated</span> = (setRegKeyToValueOfOne <span style="font-weight: bold; ">$reg32bitBranch</span> <span style="color: #df5000; ">&quot;SchUseStrongCrypto&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br />        <span style="font-weight: bold; ">$updated</span> = (setRegKeyToValueOfOne <span style="font-weight: bold; ">$reg32bitBranch</span> <span style="color: #df5000; ">&quot;SystemDefaultTlsVersions&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br />    }<br /><br />    <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$updated</span><br />}                            <br /><span style="color: #969896; "># https://docs.microsoft.com/ja-jp/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed</span><br /><br /><span style="font-weight: bold; ">$version</span> = <span style="color: #a71d5d; font-weight: bold; ">Get-ItemProperty</span> -Path <span style="color: #df5000; ">&quot;HKLM:\Software\Microsoft\NET Framework Setup\NDP\v4\Full&quot;</span> -Name Release<br /><span style="color: #969896; "># 394254 - .NET Framework 4.6.1, which is the current target of the installer</span><br /><span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$version</span>.Release <span style="color: #795da3; ">-ge</span> <span style="color: #333333; ">394254</span>)  {<br />    <span style="font-weight: bold; ">$ev</span> = [environment]::Version<br />    <span style="font-weight: bold; ">$v</span> = <span style="color: #df5000; ">&quot;v&quot;</span> + <span style="font-weight: bold; ">$ev</span>.Major + <span style="color: #df5000; ">&quot;.&quot;</span> + <span style="font-weight: bold; ">$ev</span>.Minor + <span style="color: #df5000; ">&quot;.&quot;</span> + <span style="font-weight: bold; ">$ev</span>.Build<br />    <span style="font-weight: bold; ">$updated</span> = setupTls4NET <span style="font-weight: bold; ">$is64bit</span> <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Microsoft\.NETFramework\$v&quot;</span> <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\$v&quot;</span><br /><span style="color: #969896; "># https://support.microsoft.com/en-ca/help/3140245/update-to-enable-tls-1-1-and-tls-1-2-as-a-default-secure-protocols-in</span><br /><br />    <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\WinHttp&quot;</span> <span style="color: #df5000; ">&quot;DefaultSecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br />    <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span> <span style="color: #df5000; ">&quot;SecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br /><br />    <span style="color: #969896; "># updated the 32-bit branches if we are on 64-bit machine</span><br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$is64bit</span>) {<br />        <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Internet Settings\WinHttp&quot;</span> <span style="color: #df5000; ">&quot;DefaultSecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br />        <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span> <span style="color: #df5000; ">&quot;SecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br />    }<br /><br />    <span style="color: #969896; "># current user settings</span><br />    <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span> <span style="color: #df5000; ">&quot;SecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br /><br />    <span style="color: #969896; "># local system account</span><br />    <span style="font-weight: bold; ">$userSid</span> = <span style="color: #df5000; ">&quot;.DEFAULT&quot;</span><br />    <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;Registry::HKEY_USERS\$userSid\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span> <span style="color: #df5000; ">&quot;SecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br /><br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$updated</span>) {<br />        <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;Done. Updated required settings.&quot;</span><br />    }<br />    <span style="color: #a71d5d; font-weight: bold; ">else</span><br />    {<br />        <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;Done. No updates are required.&quot;</span><br />    }<br />}<br /><span style="color: #a71d5d; font-weight: bold; ">else</span> <br />{<br />    <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;No changes were made. Your version of .NET Framework is earlier version than 4.6.1, please upgrade.&quot;</span><br />}        </code></pre>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <h3>ユーザーがロックアウトされ、レジストリエディターを使用している資格情報プロバイダーが無効になる</h3>
                                                    <p>症状： </p>
                                                    <p>エンドユーザーが<a href="proc-mfa-win-creds-rdp.htm">Windows Credential ProviderのMFA</a>とリモートデスクトッププロトコルを使ってWindowsホストにアクセスできなくなりました。エンドユーザーは事実上ロックアウトされます。 </p>
                                                    <p>解決策： </p>
                                                    <p><span class="wintitle">Windowsレジストリエディター</span>を使ってリモートサーバーのレジストリを参照し、Windows資格情報プロバイダーのMFAを無効にします。</p>
                                                    <div class="noteOkta">
                                                        <p class="noteContent">このソリューションは、すべてのユーザーのWindows資格情報プロバイダーのMFAを無効にします。管理者は、ロックされたサーバーのレジストリにリモートでアクセスできる必要があります。Windowsレジストリの編集には、細心の注意を払ってください。</p>
                                                    </div>
                                                    <ol>
                                                        <li value="1">
                                                            <p>管理者としてホストサーバーにアクセスできる別のコンピューターにログオンします。</p>
                                                        </li>
                                                        <li value="2">
                                                            <p><span class="uicontrol">レジストリエディター</span>を開きます。</p>
                                                        </li>
                                                        <li value="3">
                                                            <p><span class="uicontrol">［Connect Network Registry（ネットワークレジストリに接続）］</span>を選択します。 </p>
                                                        </li>
                                                        <li value="4">
                                                            <p>Windows Credential ProviderのMFAがインストールされているリモートサーバーのホスト名を入力します。 </p>
                                                        </li>
                                                        <li value="5">
                                                            <p><span class="uicontrol">［Check Names（名前の確認）］</span>をクリックします。しばらくすると、ホスト名が検証されます。</p>
                                                        </li>
                                                        <li value="6">
                                                            <p><span class="uicontrol">［OK］</span>をクリックします。リモートレジストリが開きます。</p>
                                                        </li>
                                                        <li value="7">
                                                            <p><span class="code">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\Credential Provider Filters</span>に移動します。</p>
                                                        </li>
                                                        <li value="8">
                                                            <p>Okta Credential ProviderのCLSID（またはフォルダー名）に注意してください。</p>
                                                        </li>
                                                        <li value="9">
                                                            <p><span class="code">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\Credential Providers</span>で、前の手順で使用したCLSIDを特定します。</p>
                                                        </li>
                                                        <li value="10">
                                                            <p>右クリックして、名前が<span class="userinput">Disabled</span>、値が<span class="userinput">1</span>の新しいDWORDを作成します。</p>
                                                        </li>
                                                        <li value="11">
                                                            <p>サーバーを再起動します。再起動すると、資格情報プロバイダーは非アクティブになります。 </p>
                                                        </li>
                                                    </ol>
                                                    <h3>ユーザーがロックアウトされ、PSExecを使用している資格情報プロバイダーが無効になる</h3>
                                                    <p>症状： </p>
                                                    <p>エンドユーザーが<a href="proc-mfa-win-creds-rdp.htm">Windows Credential ProviderのMFA</a>とリモートデスクトッププロトコルを使ってWindowsホストにアクセスできなくなりました。エンドユーザーは事実上ロックアウトされます。 </p>
                                                    <p>さらに、Windowsレジストリエディターをリモートで使用するなどの他のソリューションも使用できません。</p>
                                                    <p>解決策：</p>
                                                    <p> psexecを使用して、<a href="proc-mfa-win-creds-rdp.htm">Windows Credential ProviderのMFA</a>を実行しているサーバーのレジストリをクエリして変更し、プロバイダーを無効にします。</p>
                                                    <div class="noteOkta">
                                                        <p class="noteContent">このソリューションでは、System Internals PsExecアプリケーションを使用する必要があります。<a href="https://docs.microsoft.com/ja-jp/sysinternals/downloads/psexec">https://docs.microsoft.com/ja-jp/sysinternals/downloads/psexec</a>からダウンロードできます。</p>
                                                    </div>
                                                    <div class="noteOkta">
                                                        <p class="noteContent">Enter-PSSessionは、psexecの代わりに使用できます。<a href="https://docs.microsoft.com/ja-jp/powershell/module/microsoft.powershell.core/enter-pssession">「Enter-PSSession」</a>を参照してください。 </p>
                                                    </div>
                                                    <ol>
                                                        <li value="1">管理者としてコマンドプロンプトを開きます。psexecとWindows regクエリコマンドを使用して、<span class="code">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication\Credential Provider Filters</span>で検出された値を一覧表示します。例：<div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">コピー</a><div class="codeSnippetCaption"><p>リモートレジストリのクエリ</p></div><div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>psexec \\ipaddress -u username -p password reg query &quot;hklm\software\microsoft\windows\currentversion\authentication\Credential Provider Filters&quot;</code></pre></div></div>ここで、<span class="code">\\ipaddress</span>はWindows資格情報プロバイダーのMFAを実行しているサーバーのIPアドレスを参照します。例：\\192.168.1.199<span class="code">-u username</span>は、\\ipaddressで表されるリモートサーバー上の有効なユーザーを参照します。例：-u validuser<span class="code">- p password</span>は、<span class="code">-u</span>パラメーターで指定されたユーザーのパスワードを参照します。例：-p pwdforValiduserは次のような結果を返します。
					
<span class="codeblock">HKEY_LOCAL_MACHINE\software\microsoft\windows\currentversion\authentication\Credential Provider Filters\{6D269AEA-...-02AA9C14F310}
HKEY_LOCAL_MACHINE\software\microsoft\windows\currentversion\authentication\Credential Provider Filters\{DDC0EED2-...-EDE16A79A0DE}.
</span></li>
                                                        <li value="2">表示された各結果についてクエリを実行し、OktaCredentialProviderを特定します。<div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">コピー</a><div class="codeSnippetCaption"><p>リモートレジストリのクエリ</p></div><div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>psexec \\ipaddress -u username -p password reg query &quot;hklm\software\microsoft\windows\currentversion\authentication\Credential Provider Filters\{6D269AEA-...-02AA9C14F310}&quot;</code></pre></div></div>次のような結果が返されます。<span class="codeblock">HKEY_LOCAL_MACHINE\software\microsoft\windows\currentversion\authentication\Credential Provider Filters\{6D269AEA-...-02AA9C14F310} (Default) REG_SZ OktaCredentialProvider</span></li>
                                                        <li value="3">psexecとreg addコマンド、およびOkta Credential ProviderのクラスIDを使用して、名前が<span class="userinput">Disabled</span>、値が<span class="userinput">1</span>の新しいDWord値を作成します。 <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">コピー</a><div class="codeSnippetCaption">無効なエントリを作成する</div><div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>psexec \\ipaddress -u username -p password reg add &quot;hklm\software\microsoft\windows\currentversion\authentication\Credential Provider Filters\{value from prior step}&quot; /f /v Disabled /t REG_DWORD /d 1</code></pre></div></div>			Where:<span class="code">/f</span> - force overwriting<span class="code">/v {name of new entry}</span> - Name of new entry being added, Disabled. <span class="code">/t {type}</span> - Type of new entry added, REG_DWORD.<span class="code">/d {value}</span> - Value of new entry, 1. Which should return a result resembling:<span class="codeblock">The operation completed successfully.</span></li>
                                                        <li value="4">前のクエリを再実行すると、新しく追加された要素を示す結果が返され、次のようになります。<span class="codeblock">HKEY_LOCAL_MACHINE\software\microsoft\windows\currentversion\authentication\Credential Provider Filters\{6D269AEA-...-02AA9C14F310} (Default) REG_SZ OktaCredentialProvider REG_DWORD Disabled 1</span></li>
                                                        <li value="5">psexecとshutdownコマンドを使用して、リモートコンピューターを再起動します。<div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">コピー</a><div class="codeSnippetCaption"><p>リモートサーバーを再起動</p></div><div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>psexec \\ipaddress -u username -p password shutdown -f -r -t 0</code></pre></div></div>
					Where:
					<span class="code">-f</span> - Force running programs to exit without warning.<span class="code">-r</span> - Full shutdown and reboot.<span class="code">-t</span> 0

- Set timeout before shutdown to zero seconds.</li>
                                                    </ol>
                                                    <p>再起動すると、資格情報プロバイダーは非アクティブになります。</p>
                                                    <p>根本原因が特定されたら、次のようなコマンドを使って「Disabled」値を削除できます。 </p>
                                                    <div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">コピー</a>
                                                        <div class="codeSnippetCaption">
                                                            <p>無効なエントリを削除</p>
                                                        </div>
                                                        <div class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="False"><pre><code>psexec \\ipaddress -u username -p password reg delete &quot;hklm\software\microsoft\windows\currentversion\authentication\Credential Provider Filters\{class id from prior step}&quot; /f /v Disabled </code></pre>
                                                        </div>
                                                    </div>
                                                    <h3>資格情報プロバイダーがOktaにアクセスできない</h3>
                                                    <p>症状：資格情報プロバイダーがOktaにアクセスできません。これは、プロキシーの有無にかかわらず発生する可能性があります。以下に示すような例外がスローされます。<span class="code">System.Net.WebException: The underlying connection was closed: An unexpected error occurred on a send. </span></p>
                                                    <p>Complete exception</p><span class="codeblock">exception thrown is - System.Net.WebException: The underlying connection was closed: An unexpected error occurred on a send. ---&gt; 
System.IO.IOException: Authentication failed because the remote party has closed the transport stream.
    at System.Net.Security.SslState.StartReadFrame (Byte[] buffer, Int32 readBytes, AsyncProtocolRequest asyncRequest)
    at System.Net.Security.SslState.StartReceiveBlob(Byte[] buffer, AsyncProtocolRequest asyncRequest)
    at System.Net.Security.SslState.CheckCompletionBeforeNextReceive(ProtocolToken message, AsyncProtocolRequest asyncRequest)
    at System.Net.Security.SslState.ForceAuthentication (Boolean receiveFirst, Byte[] buffer, AsyncProtocolRequest asyncRequest)
    at System.Net.Security.SslState.ProcessAuthentication(LazyAsyncResult lazyResult)
    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
    at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
    at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)
    at System.Net.TlsStream.ProcessAuthentication(LazyAsyncResult result)
    at System.Net.TlsStream.Write(Byte[] buffer, Int32 offset, Int32 size)
    at System.Net.PooledStream.Write(Byte[] buffer, Int32 offset, Int32 size)
    at System.Net.ConnectStream.WritHeaders (Boolean async)
    --- End of inner exception stack trace ---
    at System.Net.HttpWebRequest.GetResponse()
    at OktaWidget.JwtService.GetStateTokenUsingJwt(String username)
    at OktaWidget.OktaWidgetForm..ctor(String username, Int64 parent, Int64 widgetFlow)
    at OktaWidget.OktaWidgetClass.displayWidget(Int64 parent, String username, Int64 flow)
</span>
                                                    <p>解決策：
</p>
                                                    <p>TLSが正しく有効化されていない可能性があります。OktaではTLS 1.2以降が必要です。</p>
                                                    <p>問題を修正するには、次の手順を実行します。</p>
                                                    <ol>
                                                        <li value="1">プロキシが使用され、TLSがプロキシで終了している場合は、SslPinningEnabledを無効にします。「<a href="proc-mfa-win-creds-rdp-install.htm" class="MCXref xref">Okta Credential Provider for Windowsのインストール</a>」の「<a href="proc-mfa-win-creds-rdp-install.htm#Modify">その他のプロパティーの変更</a>」を参照してください。</li>
                                                        <li value="2">レジストリでTLS 1.2を有効にします。管理者としてPowerShellターミナルを開き、次のスクリプトを実行します。

                    <div><div class="codeSnippet"><a class="codeSnippetCopyButton" role="button" href="javascript:void(0);">コピー</a><div style="mc-code-lang: PowerShell;" class="codeSnippetBody" data-mc-continue="False" data-mc-line-number-start="1" data-mc-use-line-numbers="True"><pre><span class="codeSnippetLineNumbers" style="border-right: #AAA 2px solid;" aria-hidden="true">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
</span><code><span style="font-weight: bold; ">$is64bit</span> = [IntPtr]::Size * <span style="color: #333333; ">8</span> <span style="color: #795da3; ">-eq</span> <span style="color: #333333; ">64</span><br /><span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;Is 64-bit script: $is64bit&quot;</span><br /><span style="color: #969896; ">#helper function to check for if 0x800 bit is set</span><br /><span style="color: #a71d5d; font-weight: bold; ">function</span> checkTls12Bit([Int] <span style="font-weight: bold; ">$regValue</span>) {<br />    <span style="color: #a71d5d; ">return</span> (<span style="font-weight: bold; ">$regValue</span> <span style="color: #795da3; ">-band</span> <span style="color: #333333; ">0x800</span>) <span style="color: #795da3; ">-ne</span> <span style="color: #333333; ">0x800</span><br />}<br /><br /><span style="color: #a71d5d; font-weight: bold; ">function</span> setRegKeyToBitValue([string] <span style="font-weight: bold; ">$regBranch</span>, [string] <span style="font-weight: bold; ">$regKey</span>) {<br />    <span style="font-weight: bold; ">$current</span> = <span style="color: #a71d5d; font-weight: bold; ">Get-ItemProperty</span> -Path <span style="font-weight: bold; ">$regBranch</span> -ErrorAction SilentlyContinue<br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$current</span> <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$null</span>) {<br />        <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;$regBranch\$regKey does not exist. No change.&quot;</span> <br />        <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$false</span><br />    }<br />    <span style="font-weight: bold; ">$regValue</span> = <span style="font-weight: bold; ">$current</span>.<span style="font-weight: bold; ">$regKey</span><br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$regValue</span> <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$null</span> <span style="color: #795da3; ">-or</span> (checkTls12Bit <span style="font-weight: bold; ">$regValue</span>) ) {<br />        <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$regValue</span> <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$null</span>) {<br />            <span style="font-weight: bold; ">$regValue</span> = <span style="color: #333333; ">0x800</span><br />         } <span style="color: #a71d5d; font-weight: bold; ">else</span>    {<br />             <span style="font-weight: bold; ">$regValue</span> = <span style="font-weight: bold; ">$regValue</span> <span style="color: #795da3; ">-bor</span> <span style="color: #333333; ">0x800</span><br />          }<br /><br />         <span style="font-weight: bold; ">$p</span> = <span style="color: #a71d5d; font-weight: bold; ">New-ItemProperty</span> <span style="font-weight: bold; ">$regBranch</span> -Name <span style="font-weight: bold; ">$regKey</span> -PropertyType DWord -Value <span style="font-weight: bold; ">$regValue</span> -ErrorAction Stop -Force<br />         <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;Updated $regBranch\$regKey value to $regValue&quot;</span> <br />         <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$true</span><br />     }<br />    <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;$regBranch\$regKey value is $regValue. No change.&quot;</span><br />    <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$false</span><br />}<br /><br /><span style="color: #a71d5d; font-weight: bold; ">function</span> setRegKeyToValueOfOne([string] <span style="font-weight: bold; ">$regBranch</span>, [string] <span style="font-weight: bold; ">$regKey</span>) {<br />    <span style="font-weight: bold; ">$current</span> = <span style="color: #a71d5d; font-weight: bold; ">Get-ItemProperty</span> -Path <span style="font-weight: bold; ">$regBranch</span> -ErrorAction SilentlyContinue<br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$current</span> <span style="color: #795da3; ">-eq</span> <span style="font-weight: bold; ">$null</span>) {<br />        <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;$regBranch\$regKey does not exist. No change.&quot;</span> <br />        <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$false</span><br />    }<br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$current</span>.<span style="font-weight: bold; ">$regKey</span> <span style="color: #795da3; ">-ne</span> <span style="color: #333333; ">1</span>) {<br />        <span style="font-weight: bold; ">$p</span> = <span style="color: #a71d5d; font-weight: bold; ">New-ItemProperty</span> <span style="font-weight: bold; ">$regBranch</span> -Name <span style="font-weight: bold; ">$regKey</span> -PropertyType DWord -Value <span style="color: #333333; ">1</span> -ErrorAction Stop -Force<br />        <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;Updated $regBranch\$regKey value to 1&quot;</span><br />        <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$true</span><br />     }<br />    <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;$regBranch\$regKey value is 1. No change.&quot;</span><br />    <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$false</span><br />}<br /><br /><span style="color: #969896; ">#setup .net tls settings</span><br /><span style="color: #a71d5d; font-weight: bold; ">function</span> setupTls4NET([boolean]<span style="font-weight: bold; ">$is64bit</span>, [string]<span style="font-weight: bold; ">$regBranch</span>, [string]<span style="font-weight: bold; ">$reg32bitBranch</span>) {<br /><span style="color: #969896; "># https://docs.microsoft.com/ja-jp/dotnet/framework/network-programming/tls</span><br />    <span style="font-weight: bold; ">$updated</span> = setRegKeyToValueOfOne <span style="font-weight: bold; ">$regBranch</span> <span style="color: #df5000; ">&quot;SchUseStrongCrypto&quot;</span><br />    <span style="font-weight: bold; ">$updated</span> = (setRegKeyToValueOfOne <span style="font-weight: bold; ">$regBranch</span> <span style="color: #df5000; ">&quot;SystemDefaultTlsVersions&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br /><br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$is64bit</span>) {<br />        <span style="font-weight: bold; ">$updated</span> = (setRegKeyToValueOfOne <span style="font-weight: bold; ">$reg32bitBranch</span> <span style="color: #df5000; ">&quot;SchUseStrongCrypto&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br />        <span style="font-weight: bold; ">$updated</span> = (setRegKeyToValueOfOne <span style="font-weight: bold; ">$reg32bitBranch</span> <span style="color: #df5000; ">&quot;SystemDefaultTlsVersions&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br />    }<br /><br />    <span style="color: #a71d5d; ">return</span> <span style="font-weight: bold; ">$updated</span><br />}                            <br /><span style="color: #969896; "># https://docs.microsoft.com/ja-jp/dotnet/framework/migration-guide/how-to-determine-which-versions-are-installed</span><br /><br /><span style="font-weight: bold; ">$version</span> = <span style="color: #a71d5d; font-weight: bold; ">Get-ItemProperty</span> -Path <span style="color: #df5000; ">&quot;HKLM:\Software\Microsoft\NET Framework Setup\NDP\v4\Full&quot;</span> -Name Release<br /><span style="color: #969896; "># 394254 - .NET Framework 4.6.1, which is the current target of the installer</span><br /><span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$version</span>.Release <span style="color: #795da3; ">-ge</span> <span style="color: #333333; ">394254</span>)  {<br />    <span style="font-weight: bold; ">$ev</span> = [environment]::Version<br />    <span style="font-weight: bold; ">$v</span> = <span style="color: #df5000; ">&quot;v&quot;</span> + <span style="font-weight: bold; ">$ev</span>.Major + <span style="color: #df5000; ">&quot;.&quot;</span> + <span style="font-weight: bold; ">$ev</span>.Minor + <span style="color: #df5000; ">&quot;.&quot;</span> + <span style="font-weight: bold; ">$ev</span>.Build<br />    <span style="font-weight: bold; ">$updated</span> = setupTls4NET <span style="font-weight: bold; ">$is64bit</span> <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Microsoft\.NETFramework\$v&quot;</span> <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Wow6432Node\Microsoft\.NETFramework\$v&quot;</span><br /><span style="color: #969896; "># https://support.microsoft.com/en-ca/help/3140245/update-to-enable-tls-1-1-and-tls-1-2-as-a-default-secure-protocols-in</span><br /><br />    <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\WinHttp&quot;</span> <span style="color: #df5000; ">&quot;DefaultSecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br />    <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span> <span style="color: #df5000; ">&quot;SecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br /><br />    <span style="color: #969896; "># updated the 32-bit branches if we are on 64-bit machine</span><br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$is64bit</span>) {<br />        <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Internet Settings\WinHttp&quot;</span> <span style="color: #df5000; ">&quot;DefaultSecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br />        <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span> <span style="color: #df5000; ">&quot;SecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br />    }<br /><br />    <span style="color: #969896; "># current user settings</span><br />    <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span> <span style="color: #df5000; ">&quot;SecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br /><br />    <span style="color: #969896; "># local system account</span><br />    <span style="font-weight: bold; ">$userSid</span> = <span style="color: #df5000; ">&quot;.DEFAULT&quot;</span><br />    <span style="font-weight: bold; ">$updated</span> = (setRegKeyToBitValue <span style="color: #df5000; ">&quot;Registry::HKEY_USERS\$userSid\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span> <span style="color: #df5000; ">&quot;SecureProtocols&quot;</span>) <span style="color: #795da3; ">-or</span> <span style="font-weight: bold; ">$updated</span><br /><br />    <span style="color: #a71d5d; font-weight: bold; ">if</span> (<span style="font-weight: bold; ">$updated</span>) {<br />        <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;Done. Updated required settings.&quot;</span><br />    }<br />    <span style="color: #a71d5d; font-weight: bold; ">else</span><br />    {<br />        <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;Done. No updates are required.&quot;</span><br />    }<br />}<br /><span style="color: #a71d5d; font-weight: bold; ">else</span> <br />{<br />    <span style="color: #a71d5d; font-weight: bold; ">Write-Host</span> <span style="color: #df5000; ">&quot;No changes were made. Your version of .NET Framework is earlier version than 4.6.1, please upgrade.&quot;</span><br />}        </code></pre></div></div></div></li>
                                                    </ol>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- div class="toolbar-main">
            <MadCap:topicToolbarProxy data-mc-skin="/Project/Skins/okta-toolbar-no-expand.flskn" style="mc-topic-toolbar-items: ;" />
                </div -->
                                    <!-- *********************** Footer rows ********************************* -->
                                    <div class="footer2" data-test="footer">
                                        <div>
                                            <p class="copyright" data-test="copyrightNotice">&copy;  <span class="mc-variable okta-variables.Year variable">2023</span> <span class="mc-variable okta-variables.CompanyName variable">Okta, Inc</span>. All Rights Reserved. それぞれの商標は、それぞれの商標所有者に帰属します。
	</p>
                                        </div>
                                    </div>
                                    <!-- ********************** Scripts ************************************* -->
                                    <script src="../../resources/scripts/js/ignore-dompurify.js">
                                    </script>
                                    <script src="../../resources/scripts/js/app.js">
                                    </script>
                                    <script src="../../resources/scripts/js/vendor/what-input.js">
                                    </script>
                                    <script src="https://cdnjs.cloudflare.com/ajax/libs/foundation/6.4.4-rc1/js/foundation.min.js">
                                    </script>
                                    <!-- Coveo -->
                                    <script src="https://static.cloud.coveo.com/searchui/v2.5395/js/CoveoJsSearch.Lazy.min.js" defer="defer">
                                    </script>
                                    <script src="../../resources/scripts/coveo-resources/js/cultures/en.js" id="coveoCultureScript" defer="defer">
                                    </script>
                                    <script src="../../resources/scripts/coveo-resources/js/coveo.madcapflare.requirejs.js" id="coveoRequireScript" defer="defer">
                                    </script>
                                    <script src="../../resources/scripts/coveo-resources/js/coveo.madcapflare.okta.js" id="coveoInitscript" defer="defer">
                                    </script>
                                    <!-- Feedback tab for Qualtrics survey -->
                                    <div id="feedback-tab" data-mc-conditions="Primary.live-site-only"><a id="feedback-link" href="#" onclick="openSurvey();  return false" target="_blank" title="フィードバックを送信"><div id="feedback-container"><p id="feedback-text" translate="no">Feedback</p></div></a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>
