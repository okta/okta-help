<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Patrick Calnan">
    <body>
        <h2>What can <MadCap:variable name="okta-feature-names.app sign-on policies" /> do?</h2>
        <p>Authentication policies allow organizations to model security outcomes for application access based on industry-accepted, digital identity practices outlined by US-based National Institute of Standards and Technology (NIST). Authentication policies are deployed in conjunction with <MadCap:variable name="okta-feature-names.Okta sign-on policies" /> to allow granular control at the time of access to a specific application.</p>
        <p>With <MadCap:variable name="okta-feature-names.app sign-on policies" />, organizations can enable contextual, conditional access to apps based on the risk and security posture when a user accesses an application. Authentication policies enforce user authentication in the context of the requested application. The user's location and profile (also identified by the Global Session Policy) are verified against the <MadCap:variable name="okta-feature-names.app sign-on policy" />'s group membership and authentication criteria.</p>
        <p> Every app in your org has one authentication policy, but multiple apps can share a policy. Okta provides  some preset policies with standard sign-on requirements, including a default policy for new apps. The default policy allows access with a single factor, and if you want to keep it in place for an app, you can.</p>
        <p>However, you can customize multiple levels of access by creating your own authentication policies. You can create a unique policy for each app in your org, or just create a few policies and share them across multiple apps. If you decide later to change an app’s sign-on requirements, you can modify its policy or switch to a different policy.&#160; </p>
        <p>Remember that the definitions of factor and authenticators have changed, and a policy with two-factor authentication now requires two distinct factors. Two authenticators of the same factor (Knowledge, Possession, or Inherence) are not acceptable; you must use a different factor for each authenticator. For example, a policy requiring two factors cannot be satisfied by using the Email and Phone authenticators because they both belong to the Possession factor type. For instructions on setting up authenticators, refer to Add an authenticator.</p>
        <p>Add an <MadCap:variable name="okta-feature-names.app sign-on policy" /> rule to customize the level of application access. For example, you may want to challenge all default Okta users to provide a password, but challenge Okta users in a designated group to provide password and email factors. To accomplish this, you can create a rule that challenges default users to provide a password, and then create a second rule that challenges all group members for email and password authenticators.</p>
        <p MadCap:conditions="Primary.do-not-publish"><span class="uicontrol">Note:</span> <MadCap:annotation MadCap:createDate="2022-02-25T14:54:07.0118192-05:00" MadCap:creator="InfoDev" MadCap:initials="IN" MadCap:comment="cut this, redundant and no longer valid (can't edit catch-all)." MadCap:editor="InfoDev" MadCap:editDate="2022-02-25T14:54:29.0284892-05:00">The ca</MadCap:annotation>tch-all rule governs behavior for devices that do not meet the "if" conditions of other rules you define. If you plan to have an <MadCap:variable name="okta-feature-names.app sign-on policy" /> in place that denies access to devices that don't meet certain criteria (such as Registered devices), you must configure a rule that allows access to devices that do meet the criteria, while also configuring the catch-all rule to deny all other devices.</p>
    </body>
</html>