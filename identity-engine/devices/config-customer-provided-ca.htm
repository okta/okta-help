<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"
      MadCap:onlyLocalStylesheets="False"
      MadCap:searchable="True"
      MadCap:fileTags="Tags/okta-authors.Kimli Welsh">
   <head>
      <title>[%=Heading.Level1%] | Okta</title>
      <link href="" rel="stylesheet" type="text/css"/>
   </head>
   <body>
      <h1>Use your own certificate authority for managed devices</h1>
      <p>When an <MadCap:variable name="okta-feature-names.app sign-on policy"/> requires desktop devices to be managed, <MadCap:variable name="okta-variables.ProductName"/>  checks whether a client certificate is installed on the targeted devices. To attest the certificate, <MadCap:variable name="okta-variables.ProductName"/> uses the certificate to create a digital signature and validates it on the server. You can configure your own certificate authority (CA) to issue client certificates to devices secured by <MadCap:variable name="okta-variables.ProductName"/>.</p>
      <p>To provide your own CA, your environment requires a public key infrastructure (PKI) that is integrated with your Mobile Device Management (MDM) software. The MDM software performs the following tasks: </p>
      <ul>
         <li>
            <p>Distributes client certificates to targeted devices. </p>
         </li>
         <li>
            <p>Renews certificates before they expire.</p>
         </li>
         <li>
            <p>Revokes certificates from your MDM server and managed devices when devices are no longer managed.</p>
         </li>
      </ul>
      <h2>Before you begin</h2>
      <ul>
         <li>To manage devices, you can use your existing MDM software (such as Microsoft Intune for Windows, or <MadCap:variable name="3rd Party Integrations.Jamf Pro"/> for macOS), or Active Directory Certificate Services (ADCS) infrastructure. You can use your ADCS infrastructure with <MadCap:variable name="okta-feature-names.Okta Verify"/> to register managed devices in <MadCap:variable name="okta-variables.ProductName"/>. The device user must have a certificate issued by the certificate authority that is set up in <MadCap:variable name="okta-variables.ProductName"/>. For example, you can use Microsoft Active Directory Certificate Services and Network Device Enrollment Service integrated with Microsoft Intune.				</li>
         <li>To prove that devices are managed by your organization, configure your MDM software to deploy certificates to your  registered macOS and Windows devices. The certificates must be signed by your organization's CA. See <MadCap:xref href="device-registration.htm">Device registration</MadCap:xref>.</li>
         <li>Use the <MadCap:variable name="okta-variables.ProductName"/>
            <MadCap:variable name="okta-feature-names.Administrator dashboard"/> to upload the intermediate certificate authorities that your MDM software uses to issue the client certificate. During Single Sign-On (SSO), <MadCap:variable name="okta-feature-names.Okta Verify"/> presents the signed token to the server as proof of possession of the client certificate. <MadCap:variable name="okta-variables.ProductName"/> uses the trusted CA certificate to validate that the device belongs to your organization.</li>
      </ul>
      <h2>Start this procedure</h2>
      <ul>
         <li>
                Task 1: <MadCap:xref href="#Task">Confirm that client certificates are deployed</MadCap:xref>
         </li>
         <li>
                Task 2: <MadCap:xref href="#Task4">In Okta, configure management attestation and upload your certificate</MadCap:xref>
         </li>
      </ul>
      <h3>
         <a name="Task"/>Confirm that client certificates are deployed</h3>
      <p>Ensure that client certificates issued by your CA are deployed on your organization's macOS and Windows devices. </p>
      <h3>
         <a name="Task4"/>In <MadCap:variable name="okta-variables.ProductName"/>, upload your CA and configure the management attestation</h3>
      <ol>
         <li>In the <MadCap:variable name="okta-variables.ProductName"/>
            <MadCap:variable name="okta-feature-names.Administrator dashboard"/>, go to <span class="menucascade">
               <span class="uicontrol">Security</span>
               <span class="uicontrol">Device integrations</span>
            </span>.</li>
         <li>Go to the <span class="wintitle">Certificate authority</span> tab and click <span class="uicontrol">Add certificate authority</span>.</li>
         <li>In the <span class="uicontrol">Add  certificate authority</span> dialog box, browse to the intermediate CA that will be used to issue the client certificate. If you have multiple issuers, upload all of them one at a time.
                <div class="noteOkta">
               <p class="noteContent">
                  <MadCap:variable name="okta-variables.ProductName"/> doesn't support PKCS#7, PKCS#12, or PFX certificate formats. </p>
            </div>
            <p>Certificates are uploaded automatically. A message appears if uploads are successful. To view  details, click <span class="uicontrol">View root certificate chain details</span>.</p>
         </li>
         <li>Click <span class="uicontrol">Close</span>.</li>
         <li>Go to the <span class="uicontrol">Endpoint management</span> tab.</li>
         <li>Click <span class="uicontrol">Add platform</span>.</li>
         <li>Select <span class="uicontrol">Desktop (Windows and macOS only)</span> and click <span class="uicontrol">Next</span>.</li>
         <li>Configure management attestation. Select <span class="uicontrol">Use my own certificate authority</span> for the Certificate authority.</li>
         <li>Click <span class="uicontrol">Save</span>.</li>
      </ol>
      <h2>
         <span>Next steps</span>
      </h2>
      <p>
         <MadCap:xref href="add-app-signon-policy-desktop.htm">Add an app sign-on policy rule for desktop</MadCap:xref>
      </p>
   </body>
</html>
