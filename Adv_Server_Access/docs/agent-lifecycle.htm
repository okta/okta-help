<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Arshabhi Rai">
    <head>
        <link rel="canonical" href="https://help.okta.com/asa/en-us/Content/Topics/Adv_Server_Access/docs/agent-lifecycle.htm" />
        <link href="../../../Resources/TableStyles/standard.css" rel="stylesheet" MadCap:stylesheetType="table" /><title>Configure Agent Lifecycle Management Hooks for Advanced Server Access | Okta</title>
        <meta name="description" content="Lifecycle Management Hooks for Advanced Server Access allows custom scripts to run when user attributes or group memberships change." />
    </head>
    <body>
        <h1>Configure agent lifecycle management hooks for <MadCap:variable name="okta-feature-names.ScaleFT" /></h1>
        <p>The
    <MadCap:variable name="okta-feature-names.ScaleFT" /> lifecycle hooks feature exposes an event bus on your servers that receives notifications when membership changes are made to local <span class="disableGlossary">users</span> and <span class="disableGlossary">group</span> configurations on your Linux systems.
    <MadCap:variable name="okta-feature-names.ScaleFT" /> administrators can customize these lifecycle hooks with scripts to fit any routine tasks that need to be executed when these changes occur. Local scripts are also run globally, matching
 any files that are under the <span class="code">/usr/lib/sftd/hooks</span> directory. You can discover which operating system objects are affected depending on which event is occurring, and see which scripts are being run. See <MadCap:xref href="#Director">Directories and scripts</MadCap:xref> and <MadCap:xref href="#Lifecycl">Lifecycle-related environment variables</MadCap:xref>.</p>
        <h2>Procedure</h2>
        <p>Use the following steps as a guide to perform an on-host setup.</p>
        <div class="noteOkta">
            <p class="noteContent">Before you begin, make sure you have an active
    <MadCap:variable name="okta-feature-names.ScaleFT" /> session open, and that you have <span class="disableGlossary">admin</span> authority on your target Linux server.</p>
        </div>
        <h3>Create a custom script</h3>
        <ol>
            <li>
                <p>From the command line, use SSH to connect to one of your target Linux servers.</p>
            </li>
            <li>
                <p>Switch to root by running <span class="code">sudo su</span></p>
            </li>
            <li>
                <p>Create a directory for the hooks script with the following command:</p>
                <p><span class="code">mkdir -p /usr/lib/sftd/hooks/user-created.d</span>
                </p>
            </li>
            <li>
                <p>Using a text editor, create a file named <span class="code">01-copyfiles.sh</span> and copy/paste the following bash script:</p>
                <p>Note: The following is an example that demonstrates the basic functionality of <span class="disableGLossary">agent</span> lifecycle hooks. Modify the script as needed to fit your specific integration.</p><span class="codeblock">#!/bin/bash
SOURCE_FILES=/opt/sourcefiles
cp $SOURCE_FILES/App?/home/"${SFT_HOOK_USERNAME}"
if [ $? -eq 0 ]
then
echo "Successfully copied source files into /home/"${SFT_HOOK_USERNAME}"" &gt;&gt; /tmp/sourcefiles.out
else
echo "Error Copying source files into /home/"${SFT_HOOK_USERNAME}"" &gt;&gt; /tmp/sourcefiles.out</span>
            </li>
            <li>
                <p>Grant the script execute access:</p>
                <p><span class="code">chmod 755 01-copyfiles.sh</span>
                </p>
            </li>
            <li>
                <p>Run the <span class="code">ls -l</span> command and confirm that permissions have been correctly set. The output should resemble the following:</p>
                <p><span class="code">-rwxr-xr-x 1 root root 316 Jun 30 14:54 01-copyfiles.sh</span>
                </p>
            </li>
        </ol>
        <h3>Create source files</h3>
        <ol>
            <li>
                <p>Create a directory for the source files by running the following commands:</p><span class="codeblock">cd /opt

mkdir sourcefiles</span>
            </li>
            <li>
                <p>Next, create the source files with the following commands:</p><span class="codeblock">cd sourcefiles
touch App1 App2 App3</span>
            </li>
            <li>
                <p>Run the <span class="code">ls</span> command and confirm that the files <span class="code">App1</span>, <span class="code">App2</span>, and <span class="code">App3</span> have been created.</p>
            </li>
        </ol>
        <h3>Create a <MadCap:variable name="okta-variables.ProductName" /> user and assign them to an authorized group</h3>
        <ol>
            <li>
                <p>As an <MadCap:variable name="okta-variables.ProductName" /> administrator, go to the <span class="uicontrol">Admin Dashboard</span> of the Okta tenant that manages your <MadCap:variable name="okta-feature-names.ScaleFT" /> application.</p>

            </li>
            <li>
                <p>Go to <span class="uicontrol">Applications</span> and click <span class="uicontrol"><MadCap:variable name="okta-variables.ProductName" style="font-weight: normal;" /> <MadCap:variable name="okta-feature-names.ScaleFT" style="font-weight: normal;" /></span>.</p>
            </li>
            <li>
                <p>Click <span class="uicontrol">Assignments</span> and then <span class="uicontrol">Groups</span>. Remember the name of the group that has been assigned the application.</p>
            </li>
            <li>
                <p>In the <MadCap:variable name="okta-feature-names.Administrator dashboard" />, select <span class="uicontrol">Directory</span> , <span class="uicontrol">People</span> and then <span class="uicontrol">Add Person</span>.</p>

            </li>
            <li>
                <p>Create a user with a memorable name.</p>
            </li>
            <li>
                <p>In the <MadCap:variable name="okta-feature-names.Administrator dashboard" />, go to <span class="uicontrol">Directory</span>, and then click <span class="uicontrol">Groups</span>. From here, select the group that was assigned to
        <MadCap:variable name="okta-feature-names.ScaleFT" /> in step 3. </p>

            </li>
        </ol>
        <h3>Add the group to your project</h3>
        <ol>
            <li>
                <p>In the <MadCap:variable name="okta-feature-names.Administrator dashboard" />, click <span class="uicontrol">My Applications</span>, and then select <span class="uicontrol"><MadCap:variable name="okta-variables.ProductName" /> <MadCap:variable name="okta-feature-names.ScaleFT" /></span>.</p>
            </li>
            <li>
                <p>Click <span class="uicontrol">Projects</span>.</p>
            </li>
            <li>
                <p>Click the project that you want to add the group to.</p>
            </li>
            <li>
                <p>Click the <span class="uicontrol">Groups</span> tab, then click <span class="uicontrol">Add Group to Project</span>.</p>
            </li>
            <li>
                <p>In the <span class="uicontrol">Group</span> field, enter the name of the group to add, select the group, then click <span class="uicontrol">Create Group</span>.</p>
            </li>
            <li>
                <p>Ensure that the user has been added to the project. Click the <span class="uicontrol">Users</span> tab for the project and search for the user.</p>
            </li>
        </ol>
        <h3>Validate user provisioning on your Linux server</h3>
        <ol>
            <li>
                <p>From the Linux command prompt, enter the following commands: </p><span class="codeblock">cd /home
ls -l</span>
            </li>
            <li>
                <p>Verify that the home directory for your new user has been created.</p>
            </li>
            <li>
                <p>Switch to the new user's home directory by running <span class="code">cd &lt;username&gt;</span>.</p>
                <p>You can verify that the files <span class="code">App1</span>, <span class="code">App2</span>, and <span class="code">App3</span> exist in the user's home directory with the <span class="code">ls</span> command.</p>
            </li>
        </ol>
        <p>This is how you can use
    <MadCap:variable name="okta-feature-names.ScaleFT" /> <span class="disableGlossary">agent</span> lifecycle hooks to integrate any host-local automation, system, or external user directory with your users and groups in Okta.</p>
        <h2>Related information</h2>
        <h3><a name="Director"></a>Directories and scripts</h3>
        <p>The sections below detail which directories and scripts are invoked depending on the user or group event that occurred. The event type is captured in the <span class="code">SFT_HOOK_EVENT</span> variable. See <a href="#lifecyclevariables">Lifecycle-related environment variables</a>.</p>
        <h4>User</h4>
        <ul>
            <li>
                <p><tt>user-created</tt>
                </p>
                <p>When a user is created, scripts in <span class="code">/usr/lib/sftd/hooks/user-created.d/*.sh</span> are executed.</p>
            </li>
            <li>
                <p><tt>user-updated</tt>
                </p>
                <p>When a user is updated, scripts in <span class="code">/usr/lib/sftd/hooks/user-updated.d/*.sh</span> are executed.</p>
            </li>
            <li>
                <p><tt>user-deleted</tt>
                </p>
                <p>When a user is deleted, scripts in <span class="code">/usr/lib/sftd/hooks/user-deleted.d/*.sh</span> are executed.</p>
            </li>
        </ul>
        <h4>Group</h4>
        <ul>
            <li>
                <p><tt>group-created</tt>
                </p>
                <p>When a group is created, scripts in <span class="code">/usr/lib/sftd/hooks/group-created.d/*.sh</span> are executed.</p>
            </li>
            <li>
                <p><tt>group-updated</tt>
                </p>
                <p>When a group is updated, scripts in <span class="code">/usr/lib/sftd/hooks/group-updated.d/*.sh</span> are executed.</p>
            </li>
            <li>
                <p><tt>group-deleted</tt>
                </p>
                <p>When a group is deprovisioned scripts, in <span class="code">/usr/lib/sftd/hooks/group-deleted.d/*.sh</span> are executed.</p>
            </li>
        </ul>
        <div class="noteOkta">
            <p class="noteContent">Scripts returned from the global path are sorted numerically.</p>
        </div>
        <h3><a name="Lifecycl"></a>Lifecycle-related environment variables</h3>
        <h4><a name="lifecyclevariables"></a>User</h4>
        <p>
            <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                <col style="width: 33%;" class="TableStyle-standard-Column-Column1" />
                <col style="width: 33%;" class="TableStyle-standard-Column-Column1" />
                <col style="width: 33%;" class="TableStyle-standard-Column-Column1" />
                <thead>
                    <tr class="TableStyle-standard-Head-Header1">
                        <th class="TableStyle-standard-HeadF-Column1-Header1">Hook</th>
                        <th class="TableStyle-standard-HeadF-Column1-Header1">Environment variable</th>
                        <th class="TableStyle-standard-HeadD-Column1-Header1">Contents</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-standard-Body-Body1">
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">user-created</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">SFT_HOOK_EVENT</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyD-Column1-Body1">user-created</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body2">
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body2">user-created</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body2">SFT_HOOK_USERNAME</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyD-Column1-Body2">alice.smith</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body1">
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">user-updated</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">SFT_HOOK_EVENT</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyD-Column1-Body1">user-updated</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body2">
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body2">user-updated</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body2">SFT_HOOK_USERNAME</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyD-Column1-Body2">alice.smith</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body1">
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">user-deleted</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">SFT_HOOK_EVENT</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyD-Column1-Body1">user-deleted</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body2">
                        <td style="text-align: left;" class="TableStyle-standard-BodyC-Column1-Body2">user-deleted</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyC-Column1-Body2">SFT_HOOK_USERNAME</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyA-Column1-Body2">alice.smith</td>
                    </tr>
                </tbody>
            </table>
            <h4>Group</h4>
            <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                <col style="width: 33%;" class="TableStyle-standard-Column-Column1" />
                <col style="width: 33%;" class="TableStyle-standard-Column-Column1" />
                <col style="width: 33%;" class="TableStyle-standard-Column-Column1" />
                <thead>
                    <tr class="TableStyle-standard-Head-Header1">
                        <th class="TableStyle-standard-HeadF-Column1-Header1">Hook</th>
                        <th class="TableStyle-standard-HeadF-Column1-Header1">Environment variable</th>
                        <th class="TableStyle-standard-HeadD-Column1-Header1">Contents</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-standard-Body-Body1">
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">group-created</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">SFT_HOOK_EVENT</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyD-Column1-Body1">group-created</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body2">
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body2">group-created</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body2">SFT_HOOK_GROUPNAME</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyD-Column1-Body2">everyone</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body1">
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">group-updated</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">SFT_HOOK_EVENT</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyD-Column1-Body1">group-updated</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body2">
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body2">group-updated</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body2">SFT_HOOK_GROUPNAME</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyD-Column1-Body2">AWS-eng</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body1">
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">group-deleted</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyF-Column1-Body1">SFT_HOOK_EVENT</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyD-Column1-Body1">group-deleted</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body2">
                        <td style="text-align: left;" class="TableStyle-standard-BodyC-Column1-Body2">group-deleted</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyC-Column1-Body2">SFT_HOOK_GROUPNAME</td>
                        <td style="text-align: left;" class="TableStyle-standard-BodyA-Column1-Body2">t1-support</td>
                    </tr>
                </tbody>
            </table>
        </p>
    </body>
</html>