<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../TableStyles/standard-no-header.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link href="../../TableStyles/standard-shaded-rows.css" rel="stylesheet" MadCap:stylesheetType="table" />
    </head>
    <body>
        <blockquote>
            <table style="mc-table-style: url('../../TableStyles/standard-shaded-rows.css');" class="TableStyle-srb_header_alt_shade" cellspacing="0">
                <col class="TableStyle-srb_header_alt_shade-Column-Column1" />
                <col class="TableStyle-srb_header_alt_shade-Column-Column1" />
                <col class="TableStyle-srb_header_alt_shade-Column-Column1" />
                <thead>
                    <tr class="TableStyle-srb_header_alt_shade-Head-Header1">
                        <th class="TableStyle-srb_header_alt_shade-HeadF-Column1-Header1">Property</th>
                        <th class="TableStyle-srb_header_alt_shade-HeadF-Column1-Header1">Description</th>
                        <th class="TableStyle-srb_header_alt_shade-HeadD-Column1-Header1">Default</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-srb_header_alt_shade-Body-Body1" MadCap:conditions="Primary.review-only">
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">ragent.enc.ky</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">Do not modify. </td>
                        <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body1">Added automatically by install</td>
                    </tr>
                    <tr class="TableStyle-srb_header_alt_shade-Body-Body2">
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">ragent.num_max_http_connection</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">The maximum number of HTTP connections in the connection pool.</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body2">20<sup>*</sup></td>
                    </tr>
                    <tr class="TableStyle-srb_header_alt_shade-Body-Body1">
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">ragent.num_request_threads</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">The number of authentication worker threads  available for processing requests.</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body1">15<sup>*</sup></td>
                    </tr>
                    <tr class="TableStyle-srb_header_alt_shade-Body-Body2">
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">ragent.total.request.timeout.millisecond</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">
                            The maximum time the RADIUS agent is allowed to process a UDP packet after it has arrived from the RADIUS client.
                            <p>For the Okta Verify with Push factor, the actual value is interpreted by the RADIUS agent as one half (1/2) of the configured value. </p><p>For example: 60000 = 60 seconds, divided in half = 30 seconds.</p><p>For all other factors the value is used as specified.</p></td>
                        <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body2">60000</td>
                    </tr>
                    <tr MadCap:conditions="" class="TableStyle-srb_header_alt_shade-Body-Body1">
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">ragent.request.timeout.millisecond</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">
                            The maximum time the RADIUS agent is allowed to process a UDP packet after it has arrived from the RADIUS client.
                            <p>If specified, ragent.total.request.timeout.millisecond is ignored.
</p><p>If  not specified, the default is to use  ragent.total.request.timeout.millisecond.

<br /></p><p>Available since version 2.9.4.</p></td>
                        <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body1">N/A defaults to value specified by ragent.total.request.timeout.millisecond</td>
                    </tr>
                    <tr class="TableStyle-srb_header_alt_shade-Body-Body2">
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">ragent.okta.request.max.timeout.millisecond</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body2">The socket timeout to set on the Okta API request. This property only applies if configured; otherwise, it is computed dynamically based on the total request timeout setting.</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body2">Dynamic, based on remaining TTL for request</td>
                    </tr>
                    <tr class="TableStyle-srb_header_alt_shade-Body-Body1">
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">ragent.request.timeout.response.mode</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyF-Column1-Body1">
                            The timeout response mode. Possible values include:
                            <ul><li>SEND_REJECT_ALWAYS: agent sends a reject message to the client after any timeout.</li><li>SEND_REJECT_ON_POLL_MFA:  agent sends a reject message to the client if a timeout occurs during the MFA polling loop only (that is, while the agent is polling Okta to determine if the user has correctly responded to an MFA challenge such as a push notification). If a timeout occurs at any other time, no response will be sent to the client.</li><li>NO_RESPONSE: no response will be sent to the client when the agent times out.</li></ul></td>
                        <td class="TableStyle-srb_header_alt_shade-BodyD-Column1-Body1">SEND_REJECT_ON_POLL_MFA</td>
                    </tr>
                    <tr class="TableStyle-srb_header_alt_shade-Body-Body2">
                        <td class="TableStyle-srb_header_alt_shade-BodyC-Column1-Body2">ragent.mfa.timeout.seconds</td>
                        <td class="TableStyle-srb_header_alt_shade-BodyC-Column1-Body2">Time, in seconds, that the agent will wait for the client to respond to an MFA challenge such as factor selection. </td>
                        <td class="TableStyle-srb_header_alt_shade-BodyA-Column1-Body2">60</td>
                    </tr>
                </tbody>
            </table>
            <p><sup>*</sup> If "Request queue is full" appears in your logs, the RADIUS Server Agent is rejecting login attempts due to reaching the maximum number of threads and connections that it can process. See <MadCap:xref href="../../../Topics/integrations/radius-best-pract-ts.htm#Request">Request queue is full</MadCap:xref>.</p>
            <div class="noteOkta">
                <p class="noteContent">When using the RADIUS agent with a VPN, such as <a href="../../../Topics/integrations/cisco-radius-intg.htm">Cisco ASA VPN</a>, the following timeout values should be configured on both RADIUS Agent and VPN settings:
                    <table style="mc-table-style: url('../../TableStyles/standard-no-header.css');" class="TableStyle-srb_no_header" cellspacing="0"><col class="TableStyle-srb_no_header-Column-Column1" /><col class="TableStyle-srb_no_header-Column-Column1" /><tbody><tr class="TableStyle-srb_no_header-Body-Body1"><td class="TableStyle-srb_no_header-BodyF-Column1-Body1">RADIUS agent  v2.9.3 and earlier without Okta Verify Push.</td><td class="TableStyle-srb_no_header-BodyD-Column1-Body1">ragent.total.request.timeout.millisecond = VPN retry count * (VPN timeout + VPN wait between retries) - VPN wait between retries </td></tr><tr class="TableStyle-srb_no_header-Body-Body2"><td class="TableStyle-srb_no_header-BodyF-Column1-Body2">RADIUS agent  v2.9.3 with Okta Verify Push.</td><td class="TableStyle-srb_no_header-BodyD-Column1-Body2">ragent.total.request.timeout.millisecond = 2 * (VPN retry count * (VPN timeout + VPN wait between retries) - VPN wait between retries) </td></tr><tr class="TableStyle-srb_no_header-Body-Body1"><td class="TableStyle-srb_no_header-BodyC-Column1-Body1">RADIUS agent  v 2.9.4 and later.</td><td class="TableStyle-srb_no_header-BodyA-Column1-Body1">ragent.request.timeout.millisecond = VPN retry count * (VPN timeout + VPN wait between retries) - VPN wait between retries</td></tr></tbody></table><p>Note: </p><ul><li>VPN retry count should be between 3-5. </li><li>VPN request timeout should be 15-60s, (60-120s when using Okta Verify Push).</li></ul><p>For example, where:</p><ul><li>VPN retry = 5x</li><li>VPN request timeout = 60s</li><li>VPN wait between retry = 5s</li></ul><p>Then, VPN authentication timeout = 5 * (60 + 5) -  5 = 320s, or 320000ms</p><p>RADIUS agent v2.9.3 and earlier with Okta Verify Push: ragent.total.request.timeout.millisecond = 320000.</p><p>RADIUS agent v 2.9.4 and later: ragent.request.timeout.millisecond = 320000.<br /></p></p>
            </div>
            <p>The following properties apply to proxy configuration only:</p>
            <MadCap:snippetBlock src="radius.agent.properties-proxy.flsnp" />
        </blockquote>
    </body>
</html>