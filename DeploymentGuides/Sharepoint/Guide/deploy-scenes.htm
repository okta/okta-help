<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Mark Cowan">
    <head><title>[%=Heading.Level1%] | Okta</title>
    </head>
    <body>
        <h1>Deployment Scenarios</h1>
        <h2>Single Authentication Provider</h2>
        <p>SharePoint can use Classic Mode Authentication or claims-based authentication. Classic Mode Authentication is traditional Windows authentication such as Integrated Windows Authentication (NTLM/Kerberos) or basic username/password schemes. Claims-based authentication is new to SharePoint as of SharePoint 2010 and is built on the Windows Identity Foundation (WIF). There are three types of claims-based authentication schemes: Windows claims, form-based, and SAML claims. </p>
        <h2>
Mixed Authentication Provider
</h2>
        <p>You can configure multiple authentication providers with SharePoint (Windows
authentication, forms authentication, and trusted Identity providers) using the same URL without having to extend the web application. Both external and internal users would access the web site on <span class="url">https://intranet.company.com</span>, for example. By default the user chooses the authentication method when signing in. Alternatively, the administrator can extend SharePoint to use programmatic methods of guiding the user to the correct authentication method (for example, based on IP address).

SharePoint shows the single page for mixed authentication mode where the user can pick the provider.
</p>
        <h2>Multiple Web Applications and Zones</h2>
        <p>For technical purposes a zone is a logical path through which users gain access to a web application. The URL is a common public face of a zone. The purpose of the zone is to let users into a web application or other SharePoint application. Most people don’t think about the zone. Users envision a URL that directly accesses the web application, but a zone adds a layer of abstraction for more configuration possibilities. A web application can have multiple URLs that all lead to the same place and use the same zone. This maximizes reuse and security.</p>
        <h2>People Picker with Active Directory Filtering</h2>
        <p>The Okta People Picker shows Active Directory (AD) imported users twice: as an Okta user, and as an AD domain user. Admins can see and manage only the original AD users. They can also specify that certain domains retain the original behavior.</p>
        <p>Enabling this feature requires setting certain <span class="code">$farm</span> object properties in SharePoint. Refer to Active Directory Filtering for the needed custom property values.</p>
        <h2>Hiding People Picker</h2>
        <p>People Picker is configured at the zone level for a farm through the <span class="code">stsadm setproperty</span> operation. By configuring the settings for the control, administrators can filter and restrict the results that are displayed when a user searches for a user, group, or claim. Those settings apply to every site in a specific site collection. For more information about how to configure People Picker, see Configure People Picker in SharePoint 2013. (Source: https://docs.microsoft.com/en-us/sharepoint/administration/people-picker-and-claims-providers-overview)</p>
        <h2>Restrict People Picker to a group in Active Directory</h2>
        <p>If a web application uses Windows authentication and the site user directory path isn't set, the People Picker control searches all of Active Directory to resolve users' names or find users, instead of searching only users in a particular organizational unit (OU). The <code>Stsadm setsiteuseraccountdirectorypath</code> operation allows you to set the user's directory path to a specific OU in the same domain. After the directory path is set to a site collection, the People Picker control only searches under that particular OU.</p>
        <p>To restrict People Picker to a certain OU in Active Directory, enter the following command:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">stsadm ­o setsiteuseraccountdirectorypath ­-path &lt;Valid OU name&gt; –url &lt;Web application URL&gt;</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <h2>Okta Claims Authentication with Multiple SharePoint Applications (SSO)</h2>
        <p>Administrators configure a corresponding Okta app for each SharePoint app. The realm establishes the trust relationship between Okta and the SharePoint application. For each SharePoint application, Okta generates a new "realm" that is used to define a relationship.</p>
        <p>To add a web app to an existing authentication provider such as Okta, enter the following command:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">$ap = Get­SPTrustedIdentityTokenIssuer "Okta"
$uri = new­object System.Uri($sharepoint_app)
$ap.ProviderRealms.Add($uri, $realm)
$ap.Update()</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <p>Replace <span class="userinput">$sharepoint_app</span> with the new SharePoint app URI and <span class="userinput">$realm</span> with the generated realm from the Sign-on tab of the corresponding SharePoint app in Okta.</p>
    </body>
</html>