<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:onlyLocalStylesheets="False" MadCap:searchable="True" MadCap:fileTags="Tags/okta-authors.Jeanette Smith">
    <head><title>About integrating multiple Amazon Web Services instances | Okta</title>
        <link href="" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1><a name="High-lev"></a>About integrating multiple AWS instances </h1>
        <p>Note: Connecting multiple Amazon Web Services (AWS) accounts using the API is not supported. Use the following instructions to switch to multiple AWS accounts role management via groups.</p>
        <p>This diagram illustrates the work flow you follow when you connect multiple Amazon Web Services (AWS) instances  to <MadCap:variable name="okta-variables.ProductName" />:</p>
        <p>
            <img src="../../../Resources/Images/aws/aws_new_bb.png">
            </img>
        </p>
        <h2><a name="Set2"></a>Set up AWS for SAML</h2>
        <p>Each of your AWS accounts must be configured for SAML access. To do this, you add <MadCap:variable name="okta-variables.ProductName" /> as a trusted IDP to the AWS account and then create a trust relationship for each  role that permits access via the new IDP. These are the same steps you follow to provide SAML SSO into any single AWS account, but must be performed across all of your accounts. For advanced organizations, this process can be automated with Cloud Formation or AWS API scripts for a simple SAML setup in each account.</p>
        <h2><a name="Create"></a>Create a management layer of groups in an external directory</h2>
        <p>Once SAML is configured, create AWS role groups in an external directory for each role and account you want users to be able to access using <MadCap:variable name="okta-variables.ProductName" />. This can be completed using a script between AWS and  an external directory, by exporting a CSV file to  an external directory and scripting against the CSV file on the  external directory side, or manually.</p>
        <p>Next, create a link between the AWS role-specific groups and other  external-directory groups by assigning management groups as Members Of the AWS role groups to which you want to grant them access. Assign users to the management groups to allow access to all of the AWS roles and accounts for which the management group is a member.</p>
        <h2><a name="Configur"></a>Configure the AWS app in <MadCap:variable name="okta-variables.ProductName" /> for group-based role assignment</h2>
        <p>In <MadCap:variable name="okta-variables.ProductName" />, import both the  external-directory management groups and role groups using the appropriate <MadCap:variable name="okta-variables.ProductName" />  external agent.</p>
        <p>Next, assign your management groups to the AWS application you set up earlier. This assigns the proper users to the AWS app. </p>
        <p>Lastly, set up group-based role assignment to translate the names of each of your AWS role groups into a format that AWS can consume in order to list user roles in the <span class="wintitle">Role Picker</span> page.</p>
    </body>
</html>