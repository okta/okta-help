<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:onlyLocalStylesheets="False" MadCap:searchable="True" MadCap:fileTags="Tags/okta-authors.Jeanette Smith" MadCap:conditions="Primary.do-not-publish">
    <head><title>AWS migration - set up your AWS accounts and roles for SAML SSO | Okta</title>
        <link href="" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1>AWS migration - set up your AWS accounts and roles for SAML SSO</h1>
        <p>These instructions describe how to set up all of your AWS accounts for SAML access with Okta.</p>
        <ol>
            <li>Perform steps 1 and 2 of CONNECT OKTA TO A SINGLE AWS INSTANCE:</li>
            <li>Configure Okta as your Identity Provider in your AWS Account:<ol><li>Log in to your AWS Console</li><li>Navigate to Identity and Access Management (IAM) Service</li><li>Select Identity Providers in the menu bar</li><li>Use Create Provider to create a new instance</li><li>In the Configure Provider screen, enter the following:<ul><li>Provider Type: Select SAML from the dropdown menu</li><li>Provider Name: Enter the name of your preference, for example, Okta</li><li>Metadata Document: Upload the following metadata file:</li></ul></li><li>&lt;kbd id="metadataUrl"&gt; Sign into the Okta Admin dashboard to generate this value.&lt;/kbd&gt;</li><li>Finish provider configuration</li><li>Locate the Identity Provider you just created in the list of Identity Providers and copy it’s Provider ARN value. You will need it later during this configuration:</li></ol></li>
            <li>Step 2: Add Okta Identity Provider as Trusted Source in your AWS Roles<ol><li>To grant SSO access to existing roles in your account:</li><li>Go to Roles and select the role that you would like to permit Okta SSO access to</li><li>Select the Trust Relationship tab for the role, then click Edit Trust Relationship</li><li>You now need to modify the IAM trust relationship policy to permit SSO into Okta using the SAML IDP you configured in the previous step:<ol><li>If your policy is currently empty, you can copy and paste the policy listed below and replace &lt;COPY &amp; PASTE SAML ARN VALUE HERE&gt; with the ARN value you copied from Step 1</li><span class="codeblock">insert code</span><li>If you have a current trust relationship in place, then you may need to modify your existing policy document to also include Okta SSO access. At a minimum, you will need to include everything within the Statement code block</li></ol></li></ol></li>
        </ol>
        <p>To grant SSO access to a new role:</p>
        <p>Go to Roles &gt; Create Role.</p>
        <p>Use SAML 2.0 federation type of trusted entity</p>
        <p>Select Okta (name of your identity provider) as the SAML provider and Allow programmatic and AWS Management Console access, then proceed to Permissions</p>
        <p>Select your preferred policy to be assigned to the role you're creating</p>
        <p>Finish Role configuration</p>
        <p>Do this for all of your AWS accounts and roles that you want to grant users access to – and ensure that all of your accounts have been set up with the same exact SAML metadata and have been named the same exact name. Any account with a different SAML provider name or metadata document will not be accessible</p>
        <h2>Next steps</h2>
        <ul>
            <li>Create AWS&#160;role groups</li>
        </ul>
    </body>
</html>