<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Set up a template for flow back up</h1>
        <p>Back up for flows and folders allows you to store and back up your flows on an on-demand or automated basis to an external platform such as <MadCap:variable name="workflows_connectors.GitHub" /> or <MadCap:variable name="workflows_connectors.Google Drive" />. </p>
        <div class="noteOkta">
            <p class="noteContent">This set of tasks demonstrates how to export a flow. You can also swap the <span class="wintitle">Export Flow</span> function card with the <span class="wintitle">Export Folder</span> function card to export a set of flows within a folder instead of a single flow.</p>
        </div>
        <h2>Before you begin
        </h2>
        <p>Verify that you have the following:</p>
        <ul>
            <li>
                <p>Access to an Okta tenant with Okta Workflows enabled for your org</p>
            </li>
            <li>
                <p>Access to a GitHub tenant</p>
            </li>
            <li>
                <p>Access to a GitHub repository in which you have rights to either make a commit or open a pull request</p>
            </li>
        </ul>
        <h2>Download a template for flow back up</h2>
        <p>New templates are available on the <span class="wintitle">Templates</span> page in your Workflows instance.</p>
        <p>To find examples of templates for flow back up:</p>
        <ol>
            <li>
                <p>From the Workflows templates page, enter <span class="userinput">versioning for flows and folders</span> in the <span class="uicontrol">Search</span> field.</p>
            </li>
            <li>
                <p>Click the <span class="wintitle">Versioning for Flows and Folders with GitHub</span> template in the search results.</p>
            </li>
            <li>
                <p>On the template's page, click <span class="uicontrol">Add template</span> to download it into your environment.</p>
            </li>
            <li>
                <p>Optionally, repeat these steps to download multiple templates for running flow back up.</p>
            </li>
        </ol>
        <h2>Set up a template</h2>
        <p>This task includes the steps that are necessary to set up one of the two flows that are provided with the <span class="wintitle">Versioning for Flows and Folders with GitHub</span> template. In this task, you'll set up the flow named <span class="wintitle">Export Flow and Make Commit to GitHub</span>.
</p>
        <ol>
            <li>
                <p>After downloading the <span class="wintitle">Versioning for Flows and Folders with GitHub</span> template, open the flow named <span class="wintitle">Export Flow and Make Commit to GitHub</span>.</p>
            </li>
            <li>
                <p>On the <span class="wintitle">Export Flow</span> function card, select a flow in your environment that you'll export. All the elements of that flow are exported as a JSON file.</p>
            </li>
            <li>
                <p>Select the name of the file that you're exporting. The default is <span class="filepath">exportedFlow.flow</span>. You can change the file name, but make sure that the file extension is <span class="filepath">.flow</span>.</p>
            </li>
            <li>
                <p>Edit the comment to add to the commit history, so that other users in this repository understand why you made the commit.</p>
            </li>
            <li>
                <p>For the <span class="wintitle">Update File Content</span> card, create a connection for the <MadCap:variable name="workflows_connectors.GitHub" /> connector:</p>
                <ol style="list-style-type: lower-alpha;">
                    <li>
                        <p>Establish your connection and follow the OAuth prompts to authorize Workflows to access this <MadCap:variable name="workflows_connectors.GitHub" /> repository on your behalf.</p>
                    </li>
                    <li>
                        <p>Select the organization, repository, and branch to use for testing. Make sure you have the appropriate privileges in your repository settings to the <span class="wintitle">Manage Access</span> menu for your repository.</p>
                    </li>
                    <li>
                        <p>Make sure that the following fields are populated:</p>
                        <ul>
                            <li>
                                <p><span class="uicontrol">Message</span>: The commit comment</p>
                            </li>
                            <li>
                                <p><span class="uicontrol">File Content</span>: The exported JSON file</p>
                            </li>
                            <li>
                                <p><span class="uicontrol">Path</span>: The folder path and the file name. If you want to create or update a file within a folder or sub-folder, you’ll need to define the path in addition to the file name; for example,  <span class="filepath">MainFolder/SubFolder1/exportedFlow.flow</span>. This string serves as the value to the <span class="uicontrol">Path</span> input.</p>
                            </li>
                        </ul>
                    </li>
                    <li>
                        <p>If the file doesn't exist, this flow returns an error and then attempts to create a new file. To resolve this issue:</p>
                        <ul>
                            <li>
                                <p>Click <span class="uicontrol">If Error</span> within the <span class="uicontrol">Try/If Error</span> block and establish a connection to the same repository as above.</p>
                            </li>
                            <li>
                                <p>Make sure that the <span class="uicontrol">Message</span>, <span class="uicontrol">File Content</span>, and <span class="uicontrol">Path</span> fields have the correct inputs.</p>
                            </li>
                        </ul>
                    </li>
                </ol>
            </li>
        </ol>
        <p>See also the flow named <span class="wintitle">Export Flow and Open PR in GitHub</span>, in which you can create a branch and open a pull request instead of committing directly to a <MadCap:variable name="workflows_connectors.GitHub" /> repository branch.
</p>
        <h2>Test the template flow</h2>
        <ol>
            <li>
                <p>Click <span class="uicontrol">Test Flow</span>.</p>
            </li>
            <li>
                <p>In <MadCap:variable name="workflows_connectors.GitHub" />, select the file that you created or updated.</p>
            </li>
            <li>
                <p>For the file, select <span class="uicontrol">History</span> and verify that you can see the history of commits. The last commit should appear to be made by <MadCap:variable name="okta-feature-names.Okta Workflows" /> and include the comment that you previously submitted with the commit.</p>
            </li>
        </ol>
    </body>
</html>