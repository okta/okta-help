<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"
      MadCap:onlyLocalStylesheets="False"
      MadCap:searchable="True"
      MadCap:fileTags="Tags/okta-authors.Ian Hakes">
   <head>
      <link rel="canonical"
            href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/Tutorials/processjson-walkthrough/parse-results.htm"/>
      <title>[%=Heading.Level1%] | Okta</title>
      <link href="" rel="stylesheet" type="text/css"/>
   </head>
   <body>
      <div data-content-id="hoc-main-content">
         <h1>Step 1: Parse the results</h1>
         <ol>
            <li>In the Admin Console, go to <span class="menucascade">
                  <span class="uicontrol">Workflow</span>
                  <span class="uicontrol">Workflows console</span>
               </span>.</li>
            <li>
               <p>In the Workflows console, open the flow that you created for Amazon Petstore.</p>
            </li>
            <li>
               <p>Scroll to the end of the Run When TRUE cards, and then click <span class="menucascade">
                     <span class="uicontrol">Add Another</span>
                     <span class="uicontrol">Function</span>
                     <span class="uicontrol">Text</span>
                     <span class="uicontrol">Compose</span>
                  </span>.</p>
            </li>
            <li>
               <p>In the Compose card, enter <code>statusCode is</code> and then drag and drop the Outputs <span class="uicontrol">statusCode</span> field.</p>
            </li>
            <li>
               <p>Click <span class="menucascade">
                     <span class="uicontrol">Add Another</span>
                     <span class="uicontrol">Function</span>
                     <span class="uicontrol">JSON </span>
                     <span class="uicontrol">Parse</span>
                  </span>.</p>
            </li>
            <li>
               <p>Drag and drop the Outputs <span class="uicontrol">body</span> field to the <span class="uicontrol">string</span> field of the Parse card.</p>
            </li>
            <li>
               <p>In the Parse card, change the name of the output field to <code>parsedString</code>.</p>
            </li>
         </ol>
         <p>Note: <code>type </code>is an object.</p>
         <ol start="8">
            <li>
               <p>Click <span class="menucascade">
                     <span class="uicontrol">Add Another</span>
                     <span class="uicontrol">Function</span>
                     <span class="uicontrol">Object</span>
                     <span class="uicontrol">Get Multiple</span>
                  </span>.</p>
            </li>
            <li>
               <p>Drag and drop the <span class="uicontrol">parsedString</span> field from the Parse card to the object field of the <span class="uicontrol">Get Multiple</span> card.</p>
            </li>
            <li>
               <p>In the Get Multiple card, create three output fields: <span class="uicontrol">0.id</span>, <span class="uicontrol">0.type</span>, and<span class="uicontrol">0.price</span>.</p>
            </li>
            <li>
               <p>Click <span class="menucascade">
                     <span class="uicontrol">Add Another</span>
                     <span class="uicontrol">Function</span>
                     <span class="uicontrol">JSON </span>
                     <span class="uicontrol">Parse</span>
                  </span>.</p>
            </li>
            <li>
               <p>Drag and drop the input string field (of the JSON Parse card from step 6) to the string field of this Parse card.</p>
            </li>
         </ol>
         <p>Note: You can drag and drop inputs from one card to another. Workflows ensures that those inputs will map back to the same source.</p>
         <ol start="13">
            <li>
               <p>In this Parse card, changed the name of the output field to <code>parsedListOfObjects</code>.</p>
            </li>
            <li>
               <p>Change the type of output field to <code>List of Objects</code>.</p>
            </li>
         </ol>
         <p>Note: If you don't change the field type, then you won't be able to map it to the input field of the List Pluck card in the next step. Compare to step 7.</p>
         <ol start="15">
            <li>
               <p>Click <span class="menucascade">
                     <span class="uicontrol">Add Another</span>
                     <span class="uicontrol">Function</span>
                     <span class="uicontrol">List</span>
                     <span class="uicontrol">Pluck</span>
                  </span>.</p>
            </li>
            <li>
               <p>Drag and drop the <span class="uicontrol">parsedListOfObjects</span> field from the Parse card to the <span class="uicontrol">List</span> field of the Pluck card.</p>
            </li>
         </ol>
         <p>Note: The List Pluck card needs a list of objects. If you map to the output of the JSON Parse card from step 7, an error will occur. This is an update to the steps taken in the video.</p>
         <ol start="17">
            <li>
               <p>In the key field of the Pluck card, enter <code>price</code>.</p>
            </li>
            <li>
               <p>Click <span class="menucascade">
                     <span class="uicontrol">Add Another</span>
                     <span class="uicontrol">Function</span>
                     <span class="uicontrol">List</span>
                     <span class="uicontrol">Flatten</span>
                  </span>.</p>
            </li>
            <li>
               <p>Drag and drop the <span class="uicontrol">parsedString</span> field from the Parse card to the <span class="uicontrol">lists</span> field of the Flatten card.</p>
            </li>
            <li>
               <p>In the output list fields of the Flatten card, enter <code>id</code>, <code>type</code>, and <code>price</code>.</p>
            </li>
            <li>
               <p>Save your flow.</p>
            </li>
         </ol>
         <h2>Next steps</h2>
         <p>
            <MadCap:xref href="add-helper-flow.htm">Step 2: Add a helper flow</MadCap:xref>
         </p>
      </div>
   </body>
</html>
