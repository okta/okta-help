<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../../Resources/TableStyles/standard-horizonal-borders-only.css" rel="stylesheet" MadCap:stylesheetType="table" />
    </head>
    <body>
        <h1>Add selectable outputs to an action card</h1>
        <p>With Connector Builder, you can inspect a list of output fields chosen by the connector's end user. As a developer of a connector, you can retrieve these fields for your connector flows. </p>
        <p>This feature is useful when building a connector against a third-party service that retrieves a large payload of data. Such third-party services may allow a developer of a connector to specify which fields should be returned in a response.</p>
        <p>For example, <span class="code">Get Issue</span> in the <MadCap:variable name="workflows_connectors.Jira" /> REST API allows a developer to pass a <span class="code">fields</span> array of comma-separated keys to include in a response. If no fields are provided, then the service returns all of them.</p>
        <p>However, since <MadCap:variable name="workflows_connectors.Jira" /> issues can have hundreds of fields, an unfiltered response  may be large and impact performance. By specifying a specific subset of fields, you  reduce the size of the payload and decrease the time waiting for a third-party service to respond. </p>
        <div class="note_tipOkta">
            <p class="noteContent">Connector Builder provides a list of outputs selected by a user for your connector. This list exists, whether the third-party service accepts a list of fields as requested in a response. </p>
            <p class="noteContent">If the list of selected outputs isn't used by your third-party service, you can ignore the list.</p>
        </div>
        <ul>
            <li>
                <p>
                    <MadCap:xref href="#Selected">Selected output fields in action flow</MadCap:xref>
                </p>
            </li>
            <li>
                <p>
                    <MadCap:xref href="#Object">Object shape for selected outputs</MadCap:xref>
                </p>
            </li>
        </ul>
        <h2><a name="Selected"></a>Selected output fields in action flow</h2>
        <p>Outputs are the fields on a card that return data during the execution of a flow.  Such fields can be mapped (by drag-and-drop) to input fields of other cards in a flow.</p>
        <p>When you create an <span class="wintitle">Action</span> flow, the <span class="wintitle">Connector Action</span> card displays a <span class="wintitle">SELECTED OUTPUTS</span> section. Until you add a group of output fields, this section remains empty. After you add a group of output fields to a card, a draggable output field is added to the section. Okta adds a separate output field for each output group that is created.</p>
        <p>To add output fields using the <span class="wintitle">Outputs</span> dialog, see <MadCap:xref href="inputs-outputs-dialog.htm">Add input and output fields to connector cards</MadCap:xref>.</p>
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/standard-horizonal-borders-only.css');" class="TableStyle-standard-horizonal-borders-only" cellspacing="14">
            <col style="width: 20%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" MadCap:conditions="Primary.do-not-publish" />
            <col style="width: 55%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" MadCap:conditions="Primary.do-not-publish" />
            <col style="width: 25%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" MadCap:conditions="Primary.do-not-publish" />
            <thead>
                <tr class="TableStyle-standard-horizonal-borders-only-Head-Header1">
                    <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Field</th>
                    <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Definition</th>
                    <th class="TableStyle-standard-horizonal-borders-only-HeadD-Column1-Header1">Type</th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">Group Name</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
Using multiple group names means you can group fields for better understanding by the card user. 
                        </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">Text</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">Label</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">This is the display name for the field and appears above the value on the card.</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">Text</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">Type</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">
The type describes the expected value of the data provided by the card user. You can use these data types for output fields:
                        <ul><li><p><span class="userinput">Text</span></p></li><li><p><span class="userinput">Object</span></p></li><li><p><span class="userinput">Date &amp; Time</span></p></li><li><p><span class="userinput">File</span></p></li><li><p><span class="userinput">True/False</span></p></li><li><p><span class="userinput">Number</span></p></li></ul><p>A data set for an output field may also be a list of a supported type.</p></td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyA-Column1-Body1">Dropdown</td>
                </tr>
            </tbody>
        </table>
        <p MadCap:conditions="Primary.do-not-publish">To add output fields to the <span class="wintitle">Selected Outputs</span> section:</p>
        <ol MadCap:conditions="Primary.do-not-publish">
            <li>
                <p>On the <span class="wintitle">Connectors</span> page, click the folder of the connector for which you want to add a new action flow.</p>
            </li>
            <li>
                <p>Click the <span class="wintitle">Flows</span> tab, then click <span class="userinput">+ New Flow</span>.</p>
            </li>
            <li>
                <p>In the <span class="wintitle">When this happens</span> section, click <span class="userinput">Action</span>.</p>
            </li>
            <li>
                <p>On the <span class="wintitle">Flow Control Return Outputs</span> card, click <span class="userinput">Add Outputs</span>.</p>
            </li>
            <li>
                <p>In the <span class="wintitle">Outputs</span> dialog, click <span class="userinput">Add group</span>.</p>
            </li>
            <li>
                <p>In the <span class="userinput">Group Name</span> field, add a string value for a group name.</p>
            </li>
            <li>
                <p>In the first input field in the <span class="userinput">Label</span> section, add a string value for the first field. A label of a field can contain letters, numbers, hyphens, underscores, and spaces only. Leading or trailing spaces and any other characters are prohibited.</p>
            </li>
            <li>
                <p>Select a type for the field from the <span class="userinput">Type</span> dropdown.</p>
            </li>
            <li>
                <p>Click <span class="userinput">Add field</span> and add string values for other fields.</p>
            </li>
            <li>
                <p>Click <span class="userinput">Add group</span> for more output field groups.</p>
            </li>
            <li>
                <p>Click <span class="userinput">Save</span>. A separate output field appears for each output group that you created.</p>
            </li>
        </ol>
        <h2><a name="Object"></a>Object shape for selected outputs</h2>
        <p>When the  third-party service returns the fields in the <span class="wintitle">Selected Outputs</span> section, each group has the format:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">{
	"field A": 
		{
			"type": "Text",
			"collection": false
		},
	"field B": 
		{
			"type": "Object",
			"collection": true
		},
	"field C": 
	{
		"type": "True/False",
		"collection": false
	}
}</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <p>This list can be processed into a comma-delimited text string using the <span class="wintitle">Object Keys</span> and <span class="wintitle">List to Text</span> function cards. If required, you can then use the  <span class="wintitle">Object Construct</span> function card to  format the string as a query object.</p>
        <p>
            <img src="../../../Resources/Images/Workflows/selected-ouputs-processed-object.png" />
        </p>
        <p>For static fields, the top-level key for <span class="wintitle">Selected Outputs</span> is the value for the <span class="userinput">Field ID</span> field in the <span class="wintitle">Outputs</span> dialog. This value is generated automatically for each output field.</p>
        <p>
            <img src="../../../Resources/Images/Workflows/selected-outputs-modal.png" />
        </p>
        <p>For fields created with the <span class="userinput">Dynamic Fields</span> option, the top-level keys are the <span class="userinput">name</span> field that is used in the list of objects that represent the field list. For example:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">[
	{
	"displayname":"Field A",
	"name":"fieldA",
	"type":"Text",
	"collection":false
	},
	{
	"displayname":"Field B",
	"name":"fieldB",
	"type":"Object",
	"collection":true
	},
	{
	"displayname":"Field C",
	"name":"fieldC",
	"type":"True/False",
	"collection":false
	}
]</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
    </body>
</html>