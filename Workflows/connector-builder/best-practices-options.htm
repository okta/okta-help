<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body>
        <h1>Best practices: Options fields</h1>
        <p>Follow recommended best practices for designing options and fields on action cards.</p>
        <p>Fields in the options section of an action card are configuration values that can be selected by a Workflows user when designing a flow. Once those option values are selected, they cannot be changed when a user runs the flow.</p>
        <p>Keep in mind that options are not fields that can receive values (like input fields) from other cards. If you prefer to design a card where a user can enter a specific value on a card, then use an input field. Input fields (but not options fields) allow values to be dynamically passed into a card when you run a flow. Give priority to adding input fields rather than options fields to a card unless you expect that the static values in an options fields will never change.</p>
        <p>An options field can be a pre-defined set of static and selectable values in a dropdown. A dropdown can also contain a set of dynamically generated list of values. For example, an options field for a card that reads spreadsheets can contain a list of customized column names from any spreadsheet in user's environment. In such cases, your connector will make a call to an API to populate the dropdown list on your card. Such calls are subject to a 60-second time limit.</p>
        <p>Generally, for better usability, avoid designing dropdowns that offer long lists (of more than 100 values).</p>
        <p>Consider using options fields in these scenarios:</p>
        <ul>
            <li>
                <p>A user's selection from the options field will dynamically change which input and output fields are displayed on an action card.</p>
            </li>
            <li>
                <p>An action card requires the use of two or more dependent dropdown fields.</p>
            </li>
        </ul>
        <h2>Options fields for "Read" or "Search" action cards</h2>
        <p>An action card can be designed to return data on a large set of data, but it is rare that a user will need all the records in an environment (for example, every contact in a CRM&#160;application). For better results and experience, you can design an action card that searches for a subset of data by using a filtered request to the target API. By using one or more options fields for this narrowed search, you can allow a user to filter data and return a more specific set of records. By implementing options fields on a search card and allowing a user to specify more granular search criteria, you are also lowering the risk of negatively impacting the performance of flows (by avoiding the return of much larger data sets).</p>
        <h2>Related topics</h2>
        <p>
            <MadCap:xref href="card-names-best-practices.htm">Best practices: Action card names and descriptions</MadCap:xref>
        </p>
    </body>
</html>