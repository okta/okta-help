<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>[%=Heading.Level1%] | Okta</title>
        <link href="../../../Resources/TableStyles/standard-horizonal-borders-only.css" rel="stylesheet" MadCap:stylesheetType="table" />
    </head>
    <body>
        <h1>Add dynamic fields and groups</h1>
        <p>Builders can use helper flows to populate a card’s inputs and outputs dynamically either when a request to an API is needed to retrieve a list of fields, or when the available list of fields changes based on those Options a user selects on a card.</p>
        <p>Connector Builder allows for two types of Dynamic Fields.  Each requires a slightly different JSON structure, and the platform will recognize the intended type based on this structure when the helper flow is selected.</p>
        <dl>
            <dt>Dynamic fields with static group properties</dt>
            <dd>
                <ul>
                    <li>
                        <p>In this version of Dynamic Fields, a helper flow returns a list of fields and field properties.  The group name and extensibility option (group properties) are statically added to the I/O modals.</p>
                    </li>
                </ul>
            </dd>
            <dt>Dynamic fields with dynamic group properties</dt>
            <dd>
                <ul>
                    <li>
                        <p>In this version of Dynamic Fields, a helper flow returns the group name and extensibility option (group properties) along with a list of fields and field properties. Use this option when either the group name or extensibility option may change based on the options a user selects on a card. </p>
                        <div class="noteOkta">
                            <p class="noteContent">Currently, only one dynamic group is allowed for inputs, and dynamic groups can't be used for outputs.  </p>
                        </div>
                    </li>
                </ul>
            </dd>
        </dl>
        <p>To use Dynamic Fields:</p>
        <ol>
            <li>Either click <span class="uicontrol">Add Inputs</span> on an Connector Action card or click <span class="uicontrol">Add Outputs</span> on an action flow’s Return Outputs card.  </li>
            <li>Click <span class="uicontrol">Add Group</span> and select <span class="uicontrol">Dynamic Input Group</span> or <span class="uicontrol">Dynamic Output Group</span>.  </li>
            <li>Click <span class="uicontrol">Choose Flow</span> to select the helper flow that creates the list of fields or fields and group properties.</li>
        </ol>
        <H2>Dynamic Fields with static group properties</H2>
        <p>Connector Builder expects a predefined set of keys when using Dynamic Fields:</p>
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/standard-horizonal-borders-only.css');" class="TableStyle-standard-horizonal-borders-only" cellspacing="14">
            <col style="width: 15%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
            <col style="width: 40%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
            <col style="width: 15%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
            <col style="width: 15%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
            <col style="width: 15%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
            <thead>
                <tr class="TableStyle-standard-horizonal-borders-only-Head-Header1">
                    <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Key</th>
                    <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Definition</th>
                    <th class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Values</th>
                    <th class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Type</th>
                    <th class="TableStyle-standard-horizonal-borders-only-HeadD-Column1-Header1">Required</th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="code">name</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <p>The key for your field.  If no <span class="code">displayname</span> is provided, this is what the card user will see.</p>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">Any text value</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">Text</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="code">displayname</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">The label for the field.</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">Any string value</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">Text</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="code">required</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <p>Whether or not the card user will be required to provide a value. </p>
                        <p>*only available for Inputs
.</p>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <ul>
                            <li>
                                <p>True</p>
                            </li>
                            <li>
                                <p>False</p>
                            </li>
                        </ul>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">True/False</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="code">type</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <p>The data type of the field.</p>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <ul>
                            <li>
                                <p>Text</p>
                            </li>
                            <li>
                                <p>Number</p>
                            </li>
                            <li>
                                <p>
True/False
</p>
                            </li>
                            <li>
                                <p>Date &amp; Time</p>
                            </li>
                            <li>
                                <p>Object</p>
                            </li>
                            <li>
                                <p>Option
</p>
                            </li>
                        </ul>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">Text</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="code">defaultValue</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <p>A seeded value for the input.  When left unspecified users will see the platform default values depending on the field type.</p>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <ul>
                            <li>
                                <p>Text</p>
                            </li>
                            <li>
                                <p>Number</p>
                            </li>
                            <li>
                                <p>True/False</p>
                            </li>
                            <li>
                                <p>Date &amp; Time</p>
                            </li>
                            <li>
                                <p>Object</p>
                            </li>
                            <li>
                                <p>Option
</p>
                            </li>
                        </ul>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <ul>
                            <li>
                                <p>Text</p>
                            </li>
                            <li>
                                <p>Number</p>
                            </li>
                            <li>
                                <p>True/False
</p>
                            </li>
                        </ul>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="code">available</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">A list of field types the card user can select from</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <ul>
                            <li>
                                <p>Text</p>
                            </li>
                            <li>
                                <p>Number</p>
                            </li>
                            <li>
                                <p>True/False</p>
                            </li>
                            <li>
                                <p>Date &amp; Time</p>
                            </li>
                            <li>
                                <p>Object</p>
                            </li>
                            <li>
                                <p>Flow</p>
                            </li>
                            <li>
                                <p>Folder
</p>
                            </li>
                        </ul>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">List of text</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="code">collection</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">Represented in the product as a ‘List of’ or an array. </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <ul>
                            <li>
                                <p>True</p>
                            </li>
                            <li>
                                <p>False</p>
                            </li>
                            <li>
                                <p>Either
</p>
                            </li>
                        </ul>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">True/False</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="code">choices</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">A list of available options for the dropdown.  Note that this requires the type to be Option. </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <p>Any text value</p>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">List (array)</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">No</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1"><span class="code">attributes</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">If the field is of type <span class="code">Object</span>, then keys on that object can be defined using the attributes key.  </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">
                        <p>List of objects</p>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">List (array)</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyA-Column1-Body1">No</td>
                </tr>
            </tbody>
        </table>
        <p>The following is an example of a JSON object that returns four fields: a <span class="code">Text</span> field, a <span class="code">Number</span> field, a <span class="code">List of Objects</span> with three defined keys, and an <span class="code">Option</span> (dropdown) field with three choices.  Note that the structure for Dynamic Fields with static group properties is an array (list) of objects:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">[
    {
        "name":"field-1",
        "displayname":"Field 1",
        "type":"Text",
        "defaultValue":"Hello world!",
        "collection":false,
        "required":true
    },
    {
        "name":"field-2",
        "displayname":"Field 2",
        "type":"Number",
        "collection":false,
        "Required":false,
        "available":[
            "Text",
            "Number"
        ]
    },
    {
        "name":"field-3",
        "displayname":"Field 3",
        "type":"Object",
        "collection":true,
        "required":true,
        "attributes":[
            {
                "name":"key1",
                "displayname":"Key 1",
                "collection":true,
                "type":"Text"
            },
            {
                "name":"key2",
                "displayname":"Key 2",
                "collection":false,
                "type":"Number"
            },
            {
                "name":"key3",
                "displayname":"Key 3",
                "collection":false,
                "type":"True/False"
            }
        ]
    },
    {
        "name":"field-4",
        "displayname":"Field 4",
        "type":"Option",
        "collection":false,
        "required":true,
        "choices":[
            "Choice 1",
            "Choice 2",
            "Choice 3"
        ]
    }
]
</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <H2>Dynamic Fields with dynamic group properties</H2>
        <p>Connector Builder expects three additional keys when using Dynamic Fields with dynamic group properties.</p>
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../Resources/TableStyles/standard-horizonal-borders-only.css');" class="TableStyle-standard-horizonal-borders-only" cellspacing="14">
            <col style="width: 15%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
            <col style="width: 40%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
            <col style="width: 15%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
            <col style="width: 15%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
            <col style="width: 15%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
            <thead>
                <tr class="TableStyle-standard-horizonal-borders-only-Head-Header1">
                    <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Key</th>
                    <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Definition</th>
                    <th class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Values</th>
                    <th class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Type</th>
                    <th class="TableStyle-standard-horizonal-borders-only-HeadD-Column1-Header1">Req'd</th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="code">name</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">
                        <p>The group name used to categorize inputs on the connector card.</p>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">Any string value</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">String</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="code">fields</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">The list of fields to display to the end users</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">List of objects</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1">List (array)</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">Yes</td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1"><span class="code">extensible</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">Setting to <span class="code">true</span> allows the card user to add additional fields to a card that can be processed within a connector action.</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">
                        <ul>
                            <li>
                                <p>true</p>
                            </li>
                            <li>
                                <p>false</p>
                            </li>
                        </ul>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">Boolean</td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyA-Column1-Body1">No</td>
                </tr>
            </tbody>
        </table>
        <p>The following is an example of a JSON array that returns dynamic group properties and four fields: a <span class="code">Text</span> field, a <span class="code">Number</span> field, a <span class="code">List of Objects</span> with four defined keys, and an <span class="code">Option</span> (dropdown) field with three choices.  Note that the structure for Dynamic Fields JSON with dynamic group properties is an object with three top-level attributes:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">{
    "name":"Group Name",
    "extensible":false,
    "fields":[
        {
            "name":"field-1",
            "displayname":"Field 1",
            "type":"Text",
            "defaultValue":"Hello world!",
            "collection":false,
            "required":true
        },
        {
            "name":"field-2",
            "displayname":"Field 2",
            "type":"Number",
            "collection":false,
            "Required":false,
            "available":[
                "Text",
                "Number"
            ]
        },
        {
            "name":"field-3",
            "displayname":"Field 3",
            "type":"Object",
            "collection":true,
            "required":true,
            "attributes":[
                {
                    "name":"key1",
                    "displayname":"Key 1",
                    "collection":true,
                    "type":"Text"
                },
                {
                    "name":"key2",
                    "displayname":"Key 2",
                    "collection":false,
                    "type":"Number"
                },
                {
                    "name":"key3",
                    "displayname":"Key 3",
                    "collection":false,
                    "type":"True/False"
                },
                {
                    "name":"key4",
                    "displayname":"Key 4",
                    "collection":false,
                    "type":"Object",
                    “attributes”: [
                       "name":"key4subkey1",
                        "displayname":"Subkey 1",
                        "collection":false,
                        "type":"Text"
                   ]
                },
            ]
        },
        {
            "name":"field-4",
            "displayname":"Field 4",
            "type":"Option",
            "collection":false,
            "required":true,
            "choices":[
                "Choice 1",
                "Choice 2",
                "Choice 3"
            ]
        }
    ]
}
</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <h2>Related Topics</h2>
        <p>
            <MadCap:xref href="inputs-outputs-dialog.htm">Add input and output fields to connector cards</MadCap:xref>
        </p>
        <p>
            <MadCap:xref href="extensible-inputs.htm">Extensible input fields</MadCap:xref>
        </p>
        <p>
            <MadCap:xref href="dynamic-fields-input.htm">Add dynamic input fields: HTTP example</MadCap:xref>
        </p>
    </body>
</html>