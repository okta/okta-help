<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head><title>[%=Heading.Level1%] | Okta</title>
    </head>
    <body>
        <h1>Register a webhook event</h1>
        <MadCap:snippetBlock src="../../../Resources/Snippets/workflows/webhook-reg-intro-2.flsnp" />
        <p>When your user turns on a flow that contains your deployed webhook event card, the registration helper flow is triggered.</p>
        <h2>Before you begin</h2>
        <ul>
            <li>
                <MadCap:snippetBlock src="../../../Resources/Snippets/workflows/prereqs-superadmin.flsnp" />
            </li>
            <li>
                <MadCap:snippetBlock src="resources/CB-createconnector.flsnp" />
            </li>
            <li>
                <MadCap:snippetBlock src="resources/CB-quickstartlink.flsnp" />
            </li>
        </ul>
        <h2>Start this task</h2>
        <ol>
            <li>
                <p>Click your new connector to open it in the main panel.</p>
            </li>
            <li>
                <p>On the <span class="uicontrol">Flows</span> tab, create a flow by clicking <span class="uicontrol">+ New Flow</span>.</p>
            </li>
            <li>
                <p>Click <span class="uicontrol">Add event</span> and from the <span class="wintitle">Events</span> choices, select <span class="uicontrol">Webhook Event: Registration</span>.</p>
            </li>
            <li>
                <p>In the <span class="wintitle">Webhook Registration</span> card, define the inputs for your webhook registration. You can provide these input values in two ways:</p>
                <ul>
                    <li>
                        <p>As static text that is used every time the webhook event card executes the registration flow.</p>
                    </li>
                    <li>
                        <p>As optional values that are passed to the registration flow from the webhook event card. When you add the registration flow to a webhook event card, you can map values from the webhook event options to the inputs on this card. This second option gives you the ability to reuse the same registration event card for multiple webhook event cards.</p>
                    </li>
                </ul>
                <MadCap:snippetBlock src="../../../Resources/Snippets/workflows/webhook-reg-eventhooknote1.flsnp" />
            </li>
            <li>
                <p>Use function cards to construct and call the external service and register the webhook.</p>
            </li>
        </ol>
        <p>You can now reference this registration flow inside a webhook event card.</p>
        <p>
            <img src="../../../Resources/Images/Workflows/connector-builder/webhooks-registration-flow.png" class="thumbnail" />
        </p>
        <h2>Return card</h2>
        <p>The return card includes a <span class="uicontrol">Registration Data</span> object. When your user turns off a flow that contains a webhook event, the deregistration event flow references the information stored inside this object to deregister the webhook. For example, this may be a simple object with a unique identifier:</p>
        <MadCap:codeSnippet>
            <MadCap:codeSnippetCopyButton />
            <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">{  
  "webhook_id": "99b50e15-8809-47f1"  
}</MadCap:codeSnippetBody>
        </MadCap:codeSnippet>
        <p>The object could also consist of an API&#160;endpoint, a URL, or any other information returned by the service that is required to deregister the webhook. See <MadCap:xref href="webhook-event-deregister.htm">Deregister a webhook event</MadCap:xref>.</p>
        <p> This field can't be deleted or removed, and no other fields can be defined on the return card.</p>
        <div>
            <h2>Next steps</h2>
            <p>
                <MadCap:xref href="webhook-event-deregister.htm">Deregister a webhook event</MadCap:xref>
            </p>
            <p>
                <MadCap:xref href="webhook-event.htm">Build a webhook event flow</MadCap:xref>
            </p>
            <p>
                <MadCap:xref href="test-flows.htm">Test your flows</MadCap:xref>
            </p>
            <p>
                <MadCap:xref href="deployment.htm">Deploy your flows</MadCap:xref>
            </p>
        </div>
    </body>
</html>