<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Primary.deprecated">
    <head>
        <link href="../../../Resources/TableStyles/standard-horizonal-borders-only.css" rel="stylesheet" MadCap:stylesheetType="table" />
    </head>
    <body>
        <h1>Prepare connector documentation</h1>
        <p>Every Workflows connector requires user documentation, and it must be included as part of the connector submission. The <MadCap:variable name="okta-feature-names.Okta Integration Network" /> checks your documentation for general adherence to your submitted connector as part of the Okta verification process. After your connecter is published and made available in Okta Workflows, you can set the documentation link as customer accessible, publicly accessible, or limit access to users of the connector.</p>
        <p>Such content helps customers to understand how to configure and use your connector, learn about the input and output fields of your connector's action cards, and to anticipate any performance issues that may take place when running flows that contain one or more action cards that you've built.</p>
        <div class="noteOkta">
            <p class="noteContent">The documentation that you provide for your connector must explicitly state the version number of the connector to which the content applies. When a new version of your connector is released for production, your documentation set must state the new version number clearly in addition to the features updates in that new version.</p>
        </div>
        <p>The documentation site that you provide will be accessible through the Workflows in-product help pane. When a user clicks the help icon on any card or in other dialogs, a help pane appears and displays a link to the externally hosted help documentation for the connector. </p>
        <p>User documentation for your connector can be in any format that can be hosted and accessed by Workflows users, including HTML, a Google Doc, a Microsoft Word document, or a PDF.</p>
        <p>A documentation set for your connector must include the following assets:</p>
        <ul>
            <li>
                <p>Authorization</p>
            </li>
        </ul>
        <ul>
            <li>
                <p>A help topic for each action card, including Custom API Action cards</p>
            </li>
            <li>
                <p>Optionally, help topics for troubleshooting, FAQs, or other guidance for users of your connector and its cards</p>
            </li>
        </ul>
        <h2>Topics</h2>
        <ul>
            <li>
                <p>
                    <MadCap:xref href="#Authoriz">Authorization</MadCap:xref>
                </p>
            </li>
            <li>
                <p>
                    <MadCap:xref href="#Referenc">Reference help for every connector card</MadCap:xref>
                </p>
            </li>
            <li>
                <p>
                    <MadCap:xref href="#Referenc2">Reference help for Custom API Action cards</MadCap:xref>
                </p>
            </li>
        </ul>
        <h2><a name="Authoriz"></a>Authorization</h2>
        <p>An <span class="filepath">Authorization</span> topic should include any relevant information to help a user create and reauthenticate a connection.</p>
        <p>When users add your connector to a flow for the first time, they’ll be prompted to configure a connection. The connection will enable a user to connect to their account or environment, save their credentials, and reuse the connection when they build new flows that also include any of your connector cards. </p>
        <h3>Prerequisites</h3>
        <p>In this section, specify any prerequisites that a user must complete before configuring a connection to your connector. For example, if a user needs to generate an API Key or configure an OAuth application before they can connect to their account, then that information should be specified as prerequisites in the <span class="filepath">Authorization</span> topic for your connector. Here's an example of a Prerequisites section:</p>
        <h4>Generate an API Token
        </h4>
        <p>Authentication to the Enterprise API is controlled via instance-level bearer tokens. To generate one:</p>
        <ol>
            <li>
                <p>Log in and click <span class="uicontrol">Settings</span>.</p>
            </li>
            <li>
                <p>Click the <span class="wintitle">Access</span> tab.</p>
            </li>
            <li>
                <p>Locate your instance's specific API URL.</p>
            </li>
            <li>
                <p>Click <span class="uicontrol">Add</span> to create a new API key.</p>
            </li>
            <li>
                <p>Provide a <span class="uicontrol">Name</span> value for your API token.</p>
            </li>
            <li>
                <p>Click <span class="uicontrol">Save</span>. A new dialog appears that provides the API token.</p>
            </li>
            <li>
                <p>Click the visibility symbol to expose the API token.</p>
            </li>
            <li>
                <p>Click <span class="uicontrol">Copy</span> to copy the API token to your clipboard.</p>
            </li>
            <li>
                <p>Click <span class="uicontrol">Close</span>.</p>
            </li>
        </ol>
        <h3>Set up a connection</h3>
        <p>The <span class="filepath">Authorization</span> topic must include a set of steps that describes how users of your connector can create a connection to your service. Here's an example of a Set up section:</p>
        <ol>
            <li>
                <p>From the Connections page or any card, click <span class="uicontrol">New Connection</span>. The <span class="wintitle">New Connection</span> dialog appears.</p>
            </li>
            <li>
                <p>Add a string to the <span class="wintitle">Connection Nickname</span> dialog. This is useful if you plan to create multiple connections to share with your team.</p>
            </li>
            <li>
                <p>Paste the API token created in the Setup section into the API Token field on the dialog.</p>
            </li>
            <li>
                <p>Click <span class="uicontrol">Create</span>.</p>
            </li>
        </ol>
        <h3>Supported scopes</h3>
        <p>For OAuth or other token-based authentication, a list of the scopes that are required to use the connector should be included in the documentation. Include any setup details in the Prerequisites and Set up sections. Here's an example of a Supported scopes section:</p>
        <ul>
            <li>
                <p>https://www.googleapis.com/auth/userinfo.profile</p>
            </li>
            <li>
                <p>
https://www.googleapis.com/auth/userinfo.email</p>
            </li>
            <li>
                <p>
https://www.googleapis.com/auth/gmail.settings.basic
</p>
            </li>
        </ul>
        <div class="noteOkta">
            <p class="noteContent">See these examples of <span class="filepath">Authorization</span> topics:</p>
            <ul>
                <li>
                    <p><a href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/connector-reference/box/overviews/authorization.htm" target="_blank">Authorization</a> for the Box connector</p>
                </li>
                <li>
                    <p><a href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/connector-reference/freshservice/overviews/authorization.htm" target="_blank">Authorization</a> for the Freshservice connector</p>
                </li>
            </ul>
        </div>
        <h2><a name="Referenc"></a>Reference help for every connector card</h2>
        <p>Every card for a connector should be supported by a reference help topic that describes the purpose of the card, and defines the fields of the card.</p>
        <h3>Name and description</h3>
        <p>The help topic for a card should clearly indicate the name of the card and provide a brief description such as a simple imperative sentence describing the action that can be performed by the card. This information can match what was added in the name and description section of the action flow associated with the card. Other information specific to the card can be included here as well.</p>
        <h3>Definitions for fields on a card</h3>
        <p>The same help topic should also include information for every option, input, and output field on a card. For every field, the following should be provided:</p>
        <ul>
            <li>
                <p><span class="uicontrol">Label</span>: The name of the field.</p>
            </li>
            <li>
                <p><span class="uicontrol">Definition</span>: Describe the purpose of the field, such as the data that is expected to be passed to this field as an input or output.</p>
            </li>
            <li>
                <p><span class="uicontrol">Type</span>: Specify the type of data that is allowed for this field. For example, <span class="uicontrol">Number</span> or <span class="uicontrol">List of Text</span>.</p>
            </li>
            <li>
                <p><span class="uicontrol">Required</span>: Indicate whether a value must be added to this field in order to run a flow successfully.</p>
            </li>
        </ul>
        <p>For options fields, all the choices in an options field must be listed in the help topic.</p>
        <h4>Groups of fields</h4>
        <p>All options, inputs, and outputs are grouped on a connector card.</p>
        <p>For options, the group name is labeled <span class="wintitle">Options</span> and cannot be changed. For inputs and outputs, all fields must be located within one or more groups whose labels are changeable. All group labels should be included in the help topic.</p>
        <h3>Limitations and known issues</h3>
        <p>The same help topic should also include information about limitations and known issues for that card. For example, if a card may not perform optimally if it its processing a large set of records, or if a dropdown for an options field can only display a subset of all possible choices, then the help topic should clearly include such information.</p>
        <div class="noteOkta">
            <p class="noteContent">See these examples of reference help topics for connector cards:</p>
            <ul>
                <li>
                    <p><a href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/connector-reference/jira/actions/searchissues.htm" target="_blank">Search Issues</a> for the Jira connector</p>
                </li>
                <li>
                    <p><a href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/connector-reference/slack/actions/sendfiletouser.htm" target="_blank">Send File to User</a> for the Slack connector</p>
                </li>
            </ul>
        </div>
        <h2><a name="Referenc2"></a>Reference help for Custom API Action cards</h2>
        <p>A Custom API Action card for your connector should also be supported by a reference help topic.</p>
        <p>Introduce the topic with the following sentence:</p>
        <p><span class="userinput">Use the Custom API Action to make an authenticated custom API request to the &lt;your service&gt; REST API.</span>
        </p>
        <h3>Options</h3>
        <p>For the <span class="uicontrol">Request Type</span> field, specify the methods that your Custom API Action card supports by using these definitions as needed:</p>
        <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard-horizonal-borders-only.css');" class="TableStyle-standard-horizonal-borders-only" cellspacing="14">
            <col class="TableStyle-standard-horizonal-borders-only-Column-Column1" style="width: 20%;" />
            <col class="TableStyle-standard-horizonal-borders-only-Column-Column1" style="width: 80%;" />
            <tbody>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="userinput">GET</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">Retrieves data from a web server based on parameters. This method requests a representation of the specified resource. If a request is successful, a <span class="code">200 (OK)</span> response message is returned with the requested content. </td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="userinput">POST</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">
Sends data to a web server based on parameters (for example, uploading a file). Multiple POST requests may result in a different outcome than a single POST. Caution should be exercised to avoid sending multiple POST requests unintentionally. If a request is successful, a <span class="code">200 (OK)</span> response message is returned.

                    </td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="userinput">PUT</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">
Sends data to be stored at a specific location on a web server based on parameters (for example, uploading a file). Unlike POST requests, PUT requests are idempotent. For successful requests, the result of a single PUT request is the same as many identical PUT requests. If a request is successful, a <span class="code">200 (OK)</span>, <span class="code">201 (Created)</span>, or <span class="code">204 (No Content)</span> response message is returned.

                    </td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyE-Column1-Body1"><span class="userinput">PATCH</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyD-Column1-Body1">
Applies partial modifications to a resource on a web server based on parameters. PATCH is not idempotent. Multiple PATCH requests could have unintended consequences. If a PATCH is successful, a <span class="code">200 (OK)</span> or <span class="code">204 (No Content)</span> response message is returned.    
                    </td>
                </tr>
                <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                    <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1"><span class="userinput">DELETE</span>
                    </td>
                    <td class="TableStyle-standard-horizonal-borders-only-BodyA-Column1-Body1">
Deletes the specified resource (if it exists) from the web server based on parameters. If a DELETE is successful, a <span class="code">200 (OK)</span> response message is returned.   
                    </td>
                </tr>
            </tbody>
        </table>
        <h3>Inputs</h3>
        <p>For the input fields section, provide definitions for the following fields:</p>
        <ul>
            <li>
                <p>Relative URL</p>
            </li>
            <li>
                <p>Headers</p>
            </li>
            <li>
                <p>Query</p>
            </li>
            <li>
                <p>Body</p>
            </li>
        </ul>
        <p>Here's an example of a definition for the <span class="uicontrol">Relative URL</span> field for the Custom API&#160;Action card of the <MadCap:variable name="workflows_connectors.Google Calendar" /> connector:</p>
        <p>URL address on the web server to which you are attempting to interact. Specify the relative URL as <span class="url">/{version}/{insert_remaining_URL}</span>. You can specify query parameters in the relative URL using "?", or specify the query parameters as an object key pair in the Query input.</p>
        <p>For example, for the Google Calendar API endpoint: <br /><span class="url">https://www.googleapis.com/calendar/v3/users/{userId}/calendarList</span> the relative URL is: <span class="url">/v3/users/{userId}/calendarList</span>.</p>
        <h3>Ouputs</h3>
        <p>For the ouput fields section, provide definitions for the following fields:</p>
        <ul>
            <li>
                <p>Status Code</p>
            </li>
            <li>
                <p>Headers</p>
            </li>
            <li>
                <p>Body</p>
            </li>
        </ul>
        <div class="note_tipOkta">
            <p class="noteContent">Here's an example of a definition for the <span class="uicontrol">Status Code</span> field:</p>
            <p>Result of the operation. The HTTP status code is returned by the connector and indicates whether the action taken by the card succeeded or failed.  For example:</p>
            <ul>
                <li>
                    <p>A <span class="code">201 Created</span> status code indicates success where a new resource was created.</p>
                </li>
            </ul>
            <ul>
                <li>
                    <p>A <span class="code">403 Forbidden</span> error indicates that the HTTP request was not processed because the necessary permissions were missing.</p>
                </li>
            </ul>
            <p>For a full list of possible status codes, see <MadCap:xref href="../execute/http-status-codes.htm">HTTP status codes</MadCap:xref>.</p>
        </div>
        <div class="noteOkta">
            <p class="noteContent">See these examples of reference help topics for Custom API Action cards:</p>
            <ul>
                <li>
                    <p><a href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/connector-reference/docusign/actions/customapiaction.htm" target="_blank">Custom API Action</a> for the <MadCap:variable name="workflows_connectors.DocuSign"></MadCap:variable> connector.</p>
                </li>
                <li>
                    <p><a href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/connector-reference/microsoftteams/actions/customapiaction.htm" target="_blank">Custom API Action</a> for the <MadCap:variable name="workflows_connectors.Microsoft Teams" /> connector.</p>
                </li>
            </ul>
        </div>
    </body>
</html>