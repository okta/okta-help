<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/Encryption/encryption_hmac.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="HTTP" />
        <meta name="coveo:method" content="paginate" />
        <meta name="coveo:method-description" content="Set how many times the Paginate function card will iterate." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Best practices: Error handling</h1>
            <p>The Workflows platform will handle displaying any errors thrown by an API to a connector’s end user.  The use of the Error Handling If Error (Try/Catch) function can be limited to special circumstances, like handling messages in a connector’s _authping flow.  However, there are some best practices for error handling when designing cards for a connector.</p>
            <h2><a name="Required"></a>Required input handling</h2>
            <p>When you're creating inputs for a connector, the <span class="uicontrol">Inputs</span> dialog allows you as a builder to mark fields as being required.  Setting a field as required means that end users of a connector card need to either enter a value into that field or drag in an output from another card.  Because users can drag in output fields to satisfy the card’s frontend validation, there is no guarantee that when the flow executes that output field will contain an actual value.  Because of this, it’s good practice for connector developers to verify that required values exist before making a call to an API.  This will prevent the platform from sending known bad requests to the API, and will also protect the end user’s API limits.</p>
            <p>The simplest way to validate required fields is to use the Error Handling Return Error If card.  It is recommended that you use the following format for a required input error message: <span class="code">No &lt;Input Name&gt; input provided. Please enter a valid &lt;Input Name&gt;.</span> </p>
            <p>Be sure to include a 400 status code with the message. A 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (for example, malformed request syntax, invalid request message framing, or deceptive request routing).</p>
            <h3>Example</h3>
            <ol>
                <li>
                    <p>Add a Return Error If function to the right of your Connector Action (event) card.</p>
                </li>
                <li>
                    <p>Drag the required input into the <span class="uicontrol">value a</span> input of the Return Error If card, and set <span class="uicontrol">comparison</span> to <span class="code">is empty</span>.</p>
                </li>
                <li>
                    <p>In the <span class="uicontrol">message</span> field, type <span class="code">No &lt;Input Name&gt; input provided. Please enter a valid &lt;Input Name&gt;.</span> where <span class="code">&lt;Input Name&gt;</span> is the display name of the field.</p>
                </li>
                <li>
                    <p>Enter <span class="code">400</span> into the <span class="code">statusCode</span> field.</p>
                </li>
            </ol>
            <p>
                <img src="../../../Resources/Images/Workflows/connector-builder/error-handling-example.png" style="width: 555px;height: 313px;" />
            </p>
            <h2>Related topics</h2>
            <p>
                <MadCap:xref href="card-names-best-practices.htm">Best practices: Action card names and descriptions</MadCap:xref>
            </p>
            <p>
                <MadCap:xref href="best-practices-rate-limits.htm">Best practices: Rate limits</MadCap:xref>
            </p>
        </div>
    </body>
</html>