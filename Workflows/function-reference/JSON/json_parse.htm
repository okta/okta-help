<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link href="../../../../Resources/TableStyles/standard-horizonal-borders-only.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/JSON/json_parse.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="JSON" />
        <meta name="coveo:method" content="parse" />
        <meta name="coveo:method-description" content="This function parses a JSON string into a typed field - such as an object or a list - that you can use in subsequent functions." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Parse</h1>
            <p>This function card parses a JSON string into&#160;a typed field, such as an object or a list, that you can use in subsequent functions. JSON is a standard format used by web developers to send data to and from RESTful web services.</p>
            <p>This function is the inverse of <MadCap:xref href="json_stringify.htm">Stringify</MadCap:xref>.</p>
            <p>If the input string isn't in a valid JSON format, Workflows returns a runtime error. Be sure also to set the type of the output field to match the actual type&#160;represented in the string, or you&#160;may encounter runtime errors.</p>
            <p>For example,&#160;if your input is a string <span class="code">{"a":"this","b":"that","c":"the other"}</span>,
                then set the output type to be an object. This returns an object with the three keys <span class="code">a</span>, <span class="code">b</span>, and <span class="code">c</span>.</p>
            <p>If your input is a string <span class="code">["this is the first","this is the second","this is the third"]</span>, then you&#160;should set the output type to be a list of text.</p>
            <h2 class="relnotes">Input</h2>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/TableStyles/standard-horizonal-borders-only.css');" class="TableStyle-standard-horizonal-borders-only" cellspacing="14">
                <col style="width: 20%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
                <col style="width: 55%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
                <col style="width: 15%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
                <col style="width: 10%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
                <thead>
                    <tr class="TableStyle-standard-horizonal-borders-only-Head-Header1">
                        <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Field</th>
                        <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Definition</th>
                        <th class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Type</th>
                        <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadD-Column1-Header1">Required</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                        <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">string</td>
                        <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">String of JSON to parse to a type.</td>
                        <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">String</td>
                        <td class="TableStyle-standard-horizonal-borders-only-BodyA-Column1-Body1">TRUE</td>
                    </tr>
                </tbody>
            </table>
            <h2 class="relnotes">Output</h2>
            <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../../../Resources/TableStyles/standard-horizonal-borders-only.css');" class="TableStyle-standard-horizonal-borders-only" cellspacing="14">
                <col style="width: 20%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
                <col style="width: 55%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
                <col style="width: 25%;" class="TableStyle-standard-horizonal-borders-only-Column-Column1" />
                <thead>
                    <tr class="TableStyle-standard-horizonal-borders-only-Head-Header1">
                        <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Field</th>
                        <th style="text-align: left;" class="TableStyle-standard-horizonal-borders-only-HeadE-Column1-Header1">Definition</th>
                        <th class="TableStyle-standard-horizonal-borders-only-HeadD-Column1-Header1">Type</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-standard-horizonal-borders-only-Body-Body1">
                        <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">output</td>
                        <td class="TableStyle-standard-horizonal-borders-only-BodyB-Column1-Body1">
JSON value parsed into a specified type.
                                </td>
                        <td class="TableStyle-standard-horizonal-borders-only-BodyA-Column1-Body1">String</td>
                    </tr>
                </tbody>
            </table>
            <h2 class="relnotes">Example</h2>
            <p>See <MadCap:xref href="json_parse_example.htm">Parse Example</MadCap:xref>.</p>
            <MadCap:snippetBlock src="../functions-see-also.flsnp" />
        </div>
    </body>
</html>