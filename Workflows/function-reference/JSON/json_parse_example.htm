<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/JSON/json_parse.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="JSON" />
        <meta name="coveo:method" content="parse" />
        <meta name="coveo:method-description" content="This function parses a JSON string into a typed field - such as an object or a list - that you can use in subsequent functions." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Parse Example</h1>
            <p>This example shows how to get the status of a <MadCap:variable name="workflows_connectors.Slack" /> user from the user’s <MadCap:variable name="workflows_connectors.Slack" /> profile. This information is useful to have when the user is out of the office or have their status set to a custom status. It also shows how to perform JSON parsing and how to get values from a JSON string.</p>
            <p>Three cards are used in this flow:</p>
            <ul>
                <li>
                    <p><MadCap:variable name="workflows_connectors.Slack" /> <span class="wintitle">Read User</span></p>
                </li>
                <li>
                    <p>Optional. <span class="wintitle">Object Construct</span></p>
                </li>
                <li>
                    <p><MadCap:variable name="workflows_connectors.Slack" /> <span class="wintitle">Custom API Action</span></p>
                </li>
            </ul>
            <p>
                <img src="../../../../Resources/Images/Workflows/functions-json-flow.png" style="min-width: 600px;min-height: 200px;" />
            </p>
            <ol>
                <li>
                    <p>Retrieve the <span class="uicontrol">User ID</span> from <MadCap:variable name="workflows_connectors.Slack" /> with the <span class="uicontrol">Read User</span> card.</p>
                </li>
                <li>
                    <p>Optionally, include the <span class="uicontrol">Object Construct</span> card to pass the <span class="code">users:ID_VALUE</span> into the <span class="wintitle">Custom API Action</span> card.</p>
                </li>
                <li>
                    <p>To return the user’s information, use the <span class="wintitle">Custom API Action</span> card. This card might need to be added in the relative URL section. The <span class="uicontrol">Query</span> value needs to be in the following format <span class="code">{“users”:”ID_VALUE”}</span>.  This is equivalent to having <span class="code">?users=ID_VALUE</span> at the end of an HTTP URL.</p>
                </li>
                <li>
                    <p>Run the flow. When the operation is finished, the output in the JSON body should be similar to the following.</p>
                </li>
            </ol>
            <MadCap:codeSnippet>
                <MadCap:codeSnippetCopyButton />
                <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">{
   "ok":true,
   "users":[
      {
         "id":"UDS5S7MFV",
         "team_id":"T6WPNMPFU",
         "name":"jessie.doe",
         "deleted":false,
         "color":"9b3b45",
         "real_name":"Jessie Doe",
         "tz":"America/Los_Angeles",
         "tz_label":"Pacific Daylight Time",
         "tz_offset":-25200,
         "profile":{
            "title":"Director, Customer Service",
            "phone":"",
            "skype":"",
            "real_name":"Jessie Doe",
            "real_name_normalized":"Jessie Doe",
            "display_name":"jdoe",
            "display_name_normalized":"jdoe",
            "fields":null,
            "status_text":"OOO",
            "status_emoji":":mountain:",
            "status_emoji_display_info":[
               
            ],
            "status_expiration":0,
            "avatar_hash":"394fdd4baa40",
            "image_original":"https://avatars.slack-edge.com/2018-11-15/480801844498_394fdd4baa4039df7a4c_original.jpg",
            "is_custom_image":true,
            "email":"jessie.doe@example.com",
            "huddle_state":"default_unset",
            "first_name":"Jessie",
            "last_name":"Doe"
         },
         "is_admin":false,
         "is_owner":false,
         "is_primary_owner":false,
         "is_restricted":false,
         "is_ultra_restricted":false,
         "is_bot":false,
         "is_app_user":false,
         "updated":1653018345,
         "is_email_confirmed":true,
         "has_2fa":false,
         "who_can_share_contact_card":"EVERYONE",
         "enterprise_user":{
            "id":"UDS5S7MFV",
            "enterprise_id":"E017NDYFGQL",
            "enterprise_name":"Atko",
            "is_admin":false,
            "is_owner":false,
            "teams":[
               "T6WPNMPFU"
            ]
         }
      }
   ]
}
</MadCap:codeSnippetBody>
            </MadCap:codeSnippet>
            <h2>Extract user information</h2>
            <p>Use the <MadCap:variable name="workflows_connectors.Slack" /> <span class="uicontrol">Get</span> card to extract the user data from the JSON body.</p>
            <div class="noteOkta">
                <p class="noteContent">The output type has to be an object and a list.</p>
            </div>
            <p>Use the <span class="wintitle">List At</span> card to get the first value of the list (index = 0). Then use the <span class="wintitle">Object Get</span> function card to find the specific <span class="code">profile.status_text</span>.</p>
            <p>Finally, verify that the <span class="code">status_text</span> value is present and has the correct value.</p>
            <MadCap:snippetBlock src="../functions-see-also.flsnp" />
        </div>
    </body>
</html>