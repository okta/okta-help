<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/Number/number_expression.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="Number" />
        <meta name="coveo:method" content="expression" />
        <meta name="coveo:method-description" content="Build a math expression by combining operators functions and numbersyou type withfields you drag and drop in." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        
        
            <div data-content-id="hoc-main-content">
                <h1>Formula</h1>
                <p>Build a math expression&#160;by combining operators, functions and numbers&#160;that you enter with fields that you drag and drop into the Formula card. You can place fields of the type <span class="code">Number</span> anywhere in the expression where there can be a number. At runtime, the expression is evaluated using&#160;the values of the fields to generate a single; <span class="uicontrol">output</span>&#160;number.</p>
                <p>You can use the following operators:</p>
                <ul>
                    <li>
                        <p><code>+</code> for addition</p>
                    </li>
                    <li>
                        <p><code>-</code> for subtraction (or negative)</p>
                    </li>
                    <li>
                        <p><code>*</code>&#160;for multiply</p>
                    </li>
                    <li>
                        <p><code>/</code>&#160;for divide</p>
                    </li>
                    <li>
                        <p><code>^</code>&#160;for power; for example, <span class="code">10^2</span> returns 100</p>
                    </li>
                    <li>
                        <p><code>%</code>&#160;for&#160;remainder; for example, <span class="code">12%5</span> returns 2</p>
                    </li>
                    <li>
                        <p><code>!</code> for factorial; for example, <span class="code">3!</span> returns 6</p>
                    </li>
                    <li>
                        <p><code>#</code> allows you to add a comment to your expression (anything you type after the # is ignored when the expression is evaluated)</p>
                    </li>
                </ul>
                <p>Use&#160;<span class="uicontrol">parentheses</span> to group operations so they calculate together first.</p>
                <p>You can also use standard math functions (with arguments inside parentheses), including:</p>
                <ul>
                    <li>
                        <p><span class="uicontrol">abs</span> -&#160;absolute value; for example, <span class="code">abs(-10)</span> returns&#160;10</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">ceil</span> - rounds up to the nearest integer</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">floor</span> - rounds down to the nearest integer</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">min</span> - the smallest&#160;of a comma separated list of numbers</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">max -</span>&#160;the largest&#160;of a comma separated list of numbers</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">round</span> - rounds to the nearest integer</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">random</span> - a random number between 0 and a given value,&#160;or 1 if followed by empty parentheses; for example, <span class="code">random(10)</span> or <span class="code">random()</span></p>
                    </li>
                    <li>
                        <p><span class="uicontrol">exp</span>&#160;-&#160;<span class="code">e</span> to the power of a&#160;given value</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">log</span> - the logarithm using base e of a&#160;value</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">log10</span> - the logarithm using base 10&#160;of a&#160;value</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">pow</span> - the first parameter to the power of the second parameter; for example, <span class="code">pow(2,3)</span> returns 8</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">sqrt</span> - the square root&#160;of a value</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">pi</span> - the value for pi (use without parentheses)</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">sin</span> - the sine of an provided angle in radians</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">cos</span> - the cosine&#160;of an provided angle in radians</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">tan</span> - the tangent&#160;of an provided angle in radians</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">asin</span> - the arcsine of a&#160;value between -1 and 1</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">acos</span> - the arccosine&#160;of a&#160;value between -1 and 1</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">atan</span> - the arctangent&#160;of a&#160;value between -1 and 1</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">sinh</span> - the hyperbolic sine&#160;of a&#160;value between -1 and 1</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">cosh</span> - the&#160;hyperbolic cosine of a&#160;value between -1 and 1</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">tanh</span> - the&#160;hyperbolic tangent of&#160;a&#160;value between -1 and 1</p>
                    </li>
                </ul>
                <p>You can combine multiple operations, such as:</p>
                <blockquote>
                    <p><span class="code">(pi*(max(10,11,12)^2))+round(random(5))</span>
                    </p>
                </blockquote>
                <p>And number fields (such as dropping an output from a previous card into the middle of a calculation) can be used in place of any number value.</p>
                <p>For <span class="uicontrol">binary arithmetic</span>,&#160;use&#160;<span class="uicontrol">&amp;</span> (bitwise and), <span class="uicontrol">~</span> (bitwise not), <span class="uicontrol">|</span> (bitwise or), <span class="uicontrol">^|</span> (bitwise xor), <span class="uicontrol">&lt;&lt;</span> (left shift), and <span class="uicontrol">&gt;&gt;</span> (right shift).</p>
                <h2>Input</h2>
                <p>The function has one large input area that accepts a combination of numbers, operators, and math functions&#160;you type with number&#160;fields you drag/drop in.</p>
                <h2>Output</h2>
                <p>The calculation that results from evaluating the expression using the values of the fields at&#160;runtime.</p>
                <MadCap:snippetBlock src="../functions-see-also.flsnp" />
            </div>
    </body>
</html>
