<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes" MadCap:conditions="MultiProdPublish.Workflows">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/Flow-Control/flocontrol_pause.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="Flow-Control" />
        <meta name="coveo:method" content="pause" />
        <meta name="coveo:method-description" content="The Pause function currently only works when used in Flows that are resumed programmatically." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Pause</h1>
            <p>This function card pauses a flow and returns&#160;the inputs using&#160;the interface that initiated the flow, along with&#160;the Execution ID&#160;of the flow that is needed in the resume request.</p>
            <p>In order to resume the flow, you will need to call the flow again with a specific URL Endpoint, appended with the Execution ID of the execution that need to resume. The endpoint is similar to the one that invokes the flow. Find the endpoint on the API Endpoint card's Event Settings page. But you must replace <code>invoke</code> with <code>resume</code>. Then after you resume the flow, append the URL with <code>/{{EXECUTION_ID}}</code>. For example, if the API Endpoint is the following:&#160;<code>{{&lt; api_endpoint &gt;}}/flo/5f023d66e31808a8ce04954078fabc99/invoke</code>, the endpoint that will resume the flow is&#160;<code>{{&lt; api_endpoint &gt;}}/flo/5f023d66e31808a8ce04954078fabc99/resume/1234SampleExecutionID0987</code>.</p>
            <p>The execution ID for a given execution can be found in one of two places:</p>
            <ul>
                <li>
                    <p> API Endpoint card: One of the default output fields for every monitor event is <span class="uicontrol">Execution ID</span>. This value can be used as an input to another card. This might be a good method for programmatically resuming the flow. </p>
                </li>
                <li>
                    <p>Response from the request to the API endpoint: This also includes the Execution ID in the headers, so you can also retrieve this ID from the service that is originally calling the flow.</p>
                </li>
            </ul>
            <div class="note_cautionOkta">
                <p class="noteContent">The Pause function card only works when used in flows that are resumed programmatically. If you want to pause a flow for a specific delay or until a specific time, use a <MadCap:xref href="flocontrol_wait.htm">Wait For</MadCap:xref> or <MadCap:xref href="flocontrol_until.htm">Wait Until</MadCap:xref> function card.</p>
            </div>
            <h2>Input</h2>
            <p>Create a custom input field for each value that you want passed to the caller when the flow pauses.</p>
            <h2>Output</h2>
            <p>Create a custom output field to correspond to each value that will be passed back to the flow by the caller along with&#160;the resume request. To pass data to these output keys, submit them as JSON key value pairs in the body of the request. For example, if you have an output with the name <code>X</code>, pass in <code>X:Y</code> to send <code>Y</code> as the value to be returned by the <code>X</code> output key.</p>
            <MadCap:snippetBlock src="../functions-see-also.flsnp" />
        </div>
    </body>
</html>