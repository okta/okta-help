<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/Object/object_pick.htm" />
        <link href="../../../../Resources/TableStyles/standard.css" rel="stylesheet" MadCap:stylesheetType="table" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="Object" />
        <meta name="coveo:method" content="pick" />
        <meta name="coveo:method-description" content="Picks several values from an object at once." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Get Multiple</h1>
            <p>Picks several values from an object at once. Similar&#160;to <MadCap:xref href="object_get.htm">Get</MadCap:xref>, the Get Multiple card allows you to access values within an object by providing&#160;multiple keys and/or paths to values in an object.&#160;</p>
            <h4>Input Fields</h4>
            <ul>
                <li><span class="uicontrol">object</span> (required): the object or list of objects you want to pick values from</li>
            </ul>
            <h4>Output Fields</h4>
            <p>Add an output field for each value you want to get from the provided object. </p>
            <p>Each field must be named as the single key name or path you want to get the value of, and must be an identical match to&#160;the key names used in the object. </p>
            <p>Additionally, you must set each output field type to match the type of the return value.</p>
            <h4>Example</h4>
            <p>If the input <span class="uicontrol">object</span> is:</p>
            <MadCap:codeSnippet>
                <MadCap:codeSnippetCopyButton />
                <MadCap:codeSnippetBody MadCap:useLineNumbers="False" MadCap:lineNumberStart="1" MadCap:continue="False" xml:space="preserve">{
  "product": "a123",
  "parts": [
    {
      "partno": 12
    },
    {
      "partno": 16
    },
    {
      "partno": 27
    }
  ],
  "inventory": {
    "instock": 12,
    "ordered": 10
  }
}</MadCap:codeSnippetBody>
            </MadCap:codeSnippet>
            <p>Then the following are valid output field names that could be added to a Get Multiple card along with their types and the values that would be&#160;returned:</p>
            <table style="width: 100%;mc-table-style: url('../../../../Resources/TableStyles/standard.css');" class="TableStyle-standard" cellspacing="0">
                <col class="TableStyle-standard-Column-Column1" />
                <col class="TableStyle-standard-Column-Column1" />
                <col class="TableStyle-standard-Column-Column1" />
                <thead>
                    <tr class="TableStyle-standard-Head-Header1">
                        <th class="TableStyle-standard-HeadF-Column1-Header1">
                            <p>Output field</p>
                        </th>
                        <th class="TableStyle-standard-HeadF-Column1-Header1">
                            <p>Type</p>
                        </th>
                        <th class="TableStyle-standard-HeadD-Column1-Header1">
                            <p>Value</p>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-standard-Body-Body1">
                        <td class="TableStyle-standard-BodyF-Column1-Body1">product</td>
                        <td class="TableStyle-standard-BodyF-Column1-Body1">text</td>
                        <td class="TableStyle-standard-BodyD-Column1-Body1">a123</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body2">
                        <td class="TableStyle-standard-BodyF-Column1-Body2">parts.1.partno</td>
                        <td class="TableStyle-standard-BodyF-Column1-Body2">number</td>
                        <td class="TableStyle-standard-BodyD-Column1-Body2">16</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body1">
                        <td class="TableStyle-standard-BodyF-Column1-Body1">inventory</td>
                        <td class="TableStyle-standard-BodyF-Column1-Body1">object</td>
                        <td class="TableStyle-standard-BodyD-Column1-Body1">{"instock":12, "ordered":10}</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body2">
                        <td class="TableStyle-standard-BodyC-Column1-Body2"> inventory.ordered</td>
                        <td class="TableStyle-standard-BodyC-Column1-Body2">number</td>
                        <td class="TableStyle-standard-BodyA-Column1-Body2">10</td>
                    </tr>
                </tbody>
            </table>
            <MadCap:snippetBlock src="../functions-see-also.flsnp" />
        </div>
    </body>
</html>