<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/Object/object_zip.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="Object" />
        <meta name="coveo:method" content="zip" />
        <meta name="coveo:method-description" content="Create an object from two lists by mapping keys from the first lists to values from the second." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Zip</h1>
            <p>Create an object from two lists, by mapping keys from the first lists to values from the second. This is particularly useful when creating an object that has keys with dots in the key names. &#160;</p>
            <p>Because dots usually refer to sub-objects, it can be difficult to create objects that have key names with dots in them.</p>
            <p>For example, if you want to generate this object: <span class="code">{"first.name":"John","last.name":"Doe"}</span>, you could create it using Object - Zip with these two inputs:</p>
            <ul>
                <li>
                    <p>keys: <code>[ "first.name", "last.name" ]</code></p>
                </li>
                <li>
                    <p>values: <code>[ "John", "Doe" ]</code></p>
                </li>
            </ul>
            <h4>Input Fields</h4>
            <ul>
                <li>
                    <p><span class="uicontrol">keys</span> (list of text): List of key names</p>
                </li>
                <li>
                    <p><span class="uicontrol">values</span> (list): List of values. This list should have the same number of items as <span class="uicontrol">keys</span>.</p>
                </li>
            </ul>
            <h4>Output Fields</h4>
            <ul>
                <li><span class="uicontrol">object</span> (object): Newly-created object using the keys and values provide</li>
            </ul>
            <MadCap:snippetBlock src="../functions-see-also.flsnp" />
        </div>
    </body>
</html>