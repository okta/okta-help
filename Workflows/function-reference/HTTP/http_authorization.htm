<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/HTTP/http_authorization.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="HTTP" />
        <meta name="coveo:method" content="authorization" />
        <meta name="coveo:method-description" content="Use HTTP function cards to make authenticated basic OAuth 2 or custom connections to third party services." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Authenticate with API Connector cards</h1>
            <h2>Overview</h2>

            <p>Use API Connector function cards to make authenticated basic, OAuth 2, or custom connections to third-party services.</p>
            <h2>Background</h2>

            <p>If a pre-built connector isn't available, use <span class="wintitle">API Connector</span> cards to make a request to a third-party service and parse the response in your flow. Your credentials are stored securely, and a header is created automatically using one of the provided authentication types.</p>
            <h2>HTTP Methods</h2>

            <p>With the API Connector functions, you can create authenticated connections using several HTTP methods:</p>
            <ul>
                <li><span class="uicontrol">Raw Request</span>
                </li>
                <li><span class="uicontrol">Close</span>
                </li>
                <li><span class="uicontrol">Delete</span>
                </li>
                <li><span class="uicontrol">Get</span>
                </li>
                <li><span class="uicontrol">Post</span>
                </li>
                <li><span class="uicontrol">Put</span>
                </li>
                <li><span class="uicontrol">Patch</span>
                </li>
            </ul>
            <h2>Authentication Types</h2>

            <p>To set up your authentication:</p>
            <ol>
                <li>
                    <p>In the Workflows console, select <span class="menucascade"><span class="uicontrol">Function</span><span class="uicontrol">API Connector</span></span>.</p>
                </li>
                <li>
                    <p>Select an API Connector card.</p>
                </li>
                <li>
                    <p>Click the <span class="uicontrol">+ New Connection</span> button to open the <span class="wintitle">New Connection</span> dialog.</p>

                </li>
                <li>
                    <p>Enter a nickname for your connection. Since the API Connector cards can be used with multiple connections,  enter a detailed name to distinguish each connection. Describe the service being called, the type of authentication, and a reference to the account being used. For example, <span class="userinput">JIRA Service Management - OAuth - service_account</span>.</p>
                </li>
                <li>
                    <p>Select your authentication type from the dropdown list. The API Connector cards support three types of authentication out of the box: <span class="uicontrol">Basic</span>, <span class="uicontrol">OAuth</span>, and <span class="uicontrol">Custom Header</span>.</p>
                </li>
                <li>
                    <p>Populate the requested values depending on your authentication type selection.</p>
                </li>
                <li>
                    <p>Click <span class="uicontrol">Create</span>.</p>
                </li>
            </ol>
            <h3>Authentication type options</h3>

            <ul>
                <li>
                    <p><span class="uicontrol">Basic</span>: A simple username and password scheme built into the HTTP protocol. <MadCap:variable name="okta-feature-names.Okta Workflows" /> sends HTTP requests with the Authorization header containing the word <span class="code">Basic</span> followed by a space and a base64 encoded string of <span class="code">&lt;username&gt;:&lt;password&gt;</span>.</p>
                    <ul>
                        <li>
                            <p><span class="uicontrol">Username</span>: the username for the third-party application.</p>
                        </li>
                        <li>
                            <p><span class="uicontrol">Password</span>: the password for the third-party application.</p>
                        </li>
                    </ul>
                </li>
                <li>
                    <p><span class="uicontrol">OAuth</span>: OAuth 2.0 is a protocol that allows you to grant limited access to resources on a third-party site without having to expose your credentials. Before beginning the OAuth process, you must first register a new app with the service. When registering a new app, you usually register basic information such as the application name and website URL. </p>
                    <p>In addition, you must register a redirect URI to be used for redirecting authentication back to Workflows. Use the following redirect URIs to connect to <MadCap:variable name="okta-feature-names.Okta Workflows" /> preview and production orgs, respectively: <span class="url">https://oauth.workflows.oktapreview.com/oauth/httpfunctions/cb</span> and <span class="url">https://oauth.workflows.okta.com/oauth/httpfunctions/cb</span>.</p>
                    <ul>
                        <li>
                            <p><span class="uicontrol">Authorize Path</span>: the authorization path for the service. For example, <span class="url">https://example.com/oauth2/v1/authorize</span>. If your OAuth implementation requires other query parameters, you can add them here. Beginning with a <span class="code">?</span>&#160;character in the path, add your parameters as <span class="code">key=value</span> pairs, with each pair separated by a <span class="code">&amp;</span> character.</p>
                        </li>
                        <li>
                            <p><span class="uicontrol">Access Token Path</span>: the URI where Workflows can exchange authorization code for access and refresh tokens.</p>
                        </li>
                        <li>
                            <p><span class="uicontrol">Scope</span>: specifies the level of access provided to Workflows. Multiple scopes are often space or comma separated, but this can depend on the service. To verify whether a special scope is needed to retrieve a refresh token (such as <span class="userinput">refresh_token</span> or <span class="userinput">offline_access</span>), see your API documentation.</p>
                        </li>
                        <li>
                            <p><span class="uicontrol">Client ID</span>: a publicly exposed string provided by the service that is used to identify the OAuth application and build authorization URLs.</p>
                        </li>
                        <li>
                            <p><span class="uicontrol">Client Secret</span>: a private value provided by the service that is used to authenticate the identity of the application to the service.</p>
                        </li>
                    </ul>
                </li>
                <li>
                    <p><span class="uicontrol">Custom</span>: This option  allows you to create a custom header name and value.</p>
                    <ul>
                        <li>
                            <p><span class="uicontrol">Header Name</span>: a custom name to be passed to the service. For example, a service may require <span class="code">api_key</span> as the header name and the key itself as the value.</p>
                        </li>
                        <li>
                            <p><span class="uicontrol">Header Value</span>: the value to be passed to the service along with the header name.</p>
                        </li>
                    </ul>
                </li>
                <li>
                    <p><span class="uicontrol">None</span>: Use this option to manually create your connection when none of the other options apply. It can also be used to access unauthenticated endpoints.</p>
                </li>
            </ul>
            <div class="noteOkta">
                <p class="noteContent">Unlike pre-built connectors, connections aren't tested automatically in the API Connector cards. To test your connection, use the <code>Test this card</code> functionality in a flow.</p>
            </div>
        </div>
    </body>
</html>