<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/List/list_indexby.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="List" />
        <meta name="coveo:method" content="indexby" />
        <meta name="coveo:method-description" content="This function is designed for a common API pattern where a service returns a list of field values as a list of objects which each contain a field name as one key and a field value as another key." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Index By</h1>
            <p>This function is designed for a common API pattern, where a service returns a list of field values as a list of objects which each contain a field name as one key, and a field value as another key.</p>
            <p>In that case, this function can be useful in converting that list into an object that contains each field as a key-value pair. &#160;Index By solves this problem by letting you specify a keyPath and a valuePath. &#160;For each item in the list, the function creates a new key-value pair in the output object.</p>
            <p>For example,&#160;if you have this list: <span class="codeph">[{"fieldname":"x","myvalue":"one"},{"fieldname":"y","myvalue":"two"},{"fieldname":"z","myvalue":"three"}]</span> and use&#160;Index By with keyPath="fieldname" and valuePath="myvalue", then the output is the following object: <span class="codeph">{"x":"one","y":"two","z":"three"}</span></p>
            <h2>Input</h2>
            <ul>
                <li>
                    <p><span class="uicontrol">list</span><span class="uicontrol"> (list of objects)</span>: &#160;a list of objects</p>
                </li>
                <li>
                    <p><span class="uicontrol">keyPath</span> <span class="uicontrol">(text)</span>: &#160;the key in the object that has the key names ("fieldname" in the above example)</p>
                </li>
                <li>
                    <p><span class="uicontrol">valuePath</span> <span class="uicontrol">(text)</span>: &#160;the key that contains the values ("myvalue" in the above example)</p>
                </li>
            </ul>
            <h2>Output</h2>
            <ul>
                <li><span class="uicontrol">output</span><span class="uicontrol"> (object)</span>: &#160;an object containing the key/value pairs defined by the input list</li>
            </ul>
            <MadCap:snippetBlock src="functions-lists-see-also.flsnp" />
        </div>
    </body>
</html>