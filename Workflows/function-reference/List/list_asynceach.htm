<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/List/list_asynceach.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="List" />
        <meta name="coveo:method" content="asynceach" />
        <meta name="coveo:method-description" content="Process a list by calling a helper flow for each item." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>For Each - Ignore Errors</h1>
            <p>Process a list&#160;by calling a helper flow for each item. This function is almost identical to the <MadCap:xref href="list_each.htm">For Each</MadCap:xref> function,&#160;with one important difference: For Each will stop processing more items if an error occurs when processing one of the items in the helper flow. On the other hand, this function continues to process all items&#160;even if some hit errors in the helper flow. Here's how to think about it:</p>
            <ul>
                <li>
                    <p>Use <span class="uicontrol">For Each</span> if your flow is only successful when every helper item is processed successfully.</p>
                </li>
                <li>
                    <p>Use <span class="uicontrol">For Each - Ignore Errors</span> if some items are expected to have errors during normal operation.</p>
                </li>
            </ul>
            <p>As an example of a flow where some items are expected to have errors - suppose you are sending an email out to a list of email addresses. Some of those email addresses will probably be out of date, so you may receive an error when trying to send to them. But that error shouldn't stop you from sending to the rest of the email addresses on your list. So in this case, For Each - Ignore Errors is a great fit. You can still replay the helper executions, for example, if you want to retry any of the errors. For more details on using this card, please see the <MadCap:xref href="list_each.htm">For Each</MadCap:xref> topic.</p>
            <h4>Input Fields</h4>
            <ul>
                <li>
                    <p><span class="uicontrol">list</span> (List of Objects): List to operate on</p>
                </li>
                <li>
                    <p><span class="uicontrol">flow</span> (Object): Helper flow that will be called once for each item in the list</p>
                </li>
                <li>
                    <p><span class="uicontrol">with the following values</span>&#160;(dynamically generated): Inputs defined by the helper flow - these will populate when you select the helper flow using the <span class="wintitle">Choose Flow</span> dialog</p>
                </li>
                <li>
                    <p><span class="uicontrol">concurrency</span> (Number): Number&#160;of items in the list to process in parallel. If it is important that the items are processed in sequence, use 1. Otherwise&#160;a higher number like 5 or 10 will cause your flow to complete sooner.</p>
                </li>
            </ul>
            <h4>Output Fields</h4>
            <p>There are no output fields in this card.</p>
            <MadCap:snippetBlock src="functions-lists-see-also.flsnp" />
        </div>
    </body>
</html>