<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/List/list_unique.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:connector" content="List" />
        <meta name="coveo:method" content="unique" />
        <meta name="coveo:method-description" content="Allows you to use custom logic to determine how to remove duplicates from a list." />
        <meta name="coveo:method-type" content="action" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Unique Custom</h1>
            <p>Use&#160;custom logic to determine how to remove duplicates from a list.</p>
            <p>To use this function, you’ll need a helper flow that calculates the value that will determine&#160;if an item is unique or not. (For example, you may have a list of available volunteers&#160;but you only want&#160;one person for&#160;each combination of job specialty&#160;and primary language). The helper flow you specify&#160;will get&#160;invoked once for each item in the list and return a value for each item. After all of the items are assigned values, a new list is constructed with only one item for&#160;each unique value.</p>
            <p>Define fields on&#160;the&#160;event card that will be the inputs that are required to determine the unique&#160;value. &#160;Typically you will&#160;include a field&#160;for the item of the list, i.e. if the list is a list of text then one of the inputs should be a string. &#160;You can also include as other inputs whatever your flow will need&#160;to&#160;calculate the sort value. If you need to know the&#160;position of the&#160;current item within the list,&#160;use&#160;the “Index” field from the Context section of the helper flow card.&#160;Then build the rest of the helper flow, ending with a&#160;Return card that returns a single value. The name for the&#160;value on the Return card doesn’t matter. &#160;Save the flow&#160;and turn it on.</p>
            <p>Now go back to the Unique Custom&#160;card, input the list you want to remove duplicates from, and then select the flow you just built. &#160;The inputs will auto-populate, then you can map data into them. &#160;To map an input to accept&#160;each item of the list, click in that field and you will see a drop down that includes&#160;<span class="uicontrol">Item</span>&#160;– select that. &#160;Or if your list is a list of objects, you may also see the schema of the object, i.e. the keys that it contains, and &#160;you can also build your helper flow to accept those as inputs. &#160;In addition, you can drag in outputs&#160;from previous cards in the flow –&#160;in that case, the same value will be used&#160;for each item in this list.</p>
            <h4>Input Fields</h4>
            <ul>
                <li>
                    <p><span class="uicontrol">list:</span> The input list that contains duplicates you want to remove</p>
                </li>
                <li>
                    <p><span class="uicontrol">flow</span>: &#160;The helper flow that will be called once for each item in the list</p>
                </li>
                <li>
                    <p><span class="uicontrol">with the following values</span>&#160;(dynamically generated): &#160;The inputs defined by the helper flow – these will populate after&#160;you select the helper flow using the <span class="wintitle">Choose Flow</span> dialog</p>
                </li>
                <li>
                    <p><span class="uicontrol">concurrency</span>: &#160;The number&#160;of items in the list to process in parallel. &#160;If it is important that the items are processed in sequence, use 1. &#160;Otherwise&#160;a higher number like 5 or 10 will cause your flow to complete sooner.</p>
                </li>
            </ul>
            <h4>Output Fields</h4>
            <ul>
                <li><span class="uicontrol">list:</span> The output&#160;list that contains only one item for each unique value returned by the helper flow.&#160;The type of output list should be set to match the type of the input list (for example, list of text or list of objects).</li>
            </ul>
            <h4>Example</h4>
            <ul>
                <li>
                    <p>You have a list of text: <code>["this","is","a","test"]</code></p>
                </li>
                <li>
                    <p>You create a helper flow that accepts a text input and returns the length of the text</p>
                </li>
                <li>
                    <p>For the text input to the helper flow, you click and choose "Item" from the dropdown</p>
                </li>
                <li>
                    <p>The output list will be: <code>["a","is","this"]</code> –&#160;only one word of each length.</p>
                </li>
            </ul>
            <MadCap:snippetBlock src="functions-lists-see-also.flsnp" />
        </div>
    </body>
</html>