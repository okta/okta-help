<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Primary.do-not-publish" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/function-reference/Control/control_callable.htm" /><title>[%=Heading.Level1%] | Okta</title>
    </head>
    <body>
        
        
            <div data-content-id="hoc-main-content">
                <h1>Helper and scheduled flows</h1>
                <p>Flows begin with an event. Often that event will be tied to an application (e.g. new records in Salesforce). This topic covers two alternatives: A <span class="wintitle">Schedule</span> event or a <span class="wintitle">Helper Flow</span> event.</p>
                <h2>Helper flow</h2>
                <p>A Helper Flow event is used for a flow that runs when called by another flow.</p>
                <ul>
                    <li>
                        <p>You have a series of steps that get used more than once in a single flow or across multiple flows. Moving them into their own "helper flow" lets you create them once and then reuse them repeatedly. You run the steps from other flows by using {{&lt; function_link flocontrol spawn &gt;}} or {{&lt; function_link flocontrol run &gt;}}.</p>
                    </li>
                    <li>
                        <p>You want to process a list, one item at a time. For instance, you can run a series of steps on each list item using {{&lt; function_link list each &gt;}}&#160;or you can transform a list into a new list (one item at a time) using {{&lt; function_link list map &gt;}}.</p>
                    </li>
                    <li>
                        <p>Or, if you just want to break a very large flow into smaller, more manageable parts.</p>
                    </li>
                </ul>
                <p>Each Helper Flow card has the following outputs:</p>
                <ul>
                    <li>
                        <p><span class="uicontrol">Inputs to this Flow</span>
                        </p>
                        <ul>
                            <li>Click to create custom fields, one at a time. Give each a name and data type (such as Text or Number). Each custom field you create corresponds to an expected input from any flow that calls your helper flow.</li>
                        </ul>
                    </li>
                    <li>
                        <p><span class="uicontrol">Context</span> - the outputs in this section are automatically assigned values every time the flow runs:</p>
                        <ul>
                            <li>
                                <p><span class="uicontrol">Index</span>&#160;- This number output is assigned&#160;a value when the flow is called from a function that loops through the items of a list (e.g. a {{&lt; function_link list each &gt;}} or {{&lt; function_link list map &gt;}} function). The value of <span class="uicontrol">Index</span>&#160;corresponds to the item's position in the list (starting with zero) processed by this particular instance of the flow.</p>
                            </li>
                            <li>
                                <p><span class="uicontrol">Caller</span> - The keys of the <span class="uicontrol">Caller</span> object tell you which flow called the helper flow (<span class="uicontrol">id</span> and <span class="uicontrol">name</span>), which particular execution of the flow made the call (<span class="uicontrol">execution_id</span>), and which particular step in the flow (<span class="uicontrol">method</span>, which is an unique ID). When the helper flow is manually run, then <span class="uicontrol">id</span> and <span class="uicontrol">execution_id</span> are null. This is especially useful for debugging purposes.</p>
                            </li>
                            <li>
                                <p><span class="uicontrol">Error</span> - This object output is assigned a value when the flow is called for [Error Handling]({{&lt; relref "/archives/7491.md" &gt;}}). The value of <span class="uicontrol">Error</span> corresponds to the raw error object returns by the application or action that caused the error -- e.g. an object that will often have keys that include "message", "statusCode" and "execution" (the unique identifier of the flow execution that caused the error, which can be used to construct a URL to the execution history that shows the flow details that led to the error).</p>
                            </li>
                            <li>
                                <p><span class="uicontrol">Execution ID</span> - the unique ID of&#160;the flow instance.</p>
                            </li>
                        </ul>
                    </li>
                </ul>
                <p>Note: A helper flow must be turned on before it can be called by other flows.</p>
                <h2>Scheduled flow</h2>
                <p>A Scheduled Flow event is used for a flow that runs&#160;according to a schedule, such as once an hour, 5pm on Fridays, or at 9am on the first day of every month.</p>
                <p>Adding a Scheduled Flow event prompts you to provide the schedule details. You can change the schedule by clicking the clock icon at the bottom of the card. (Note: You can similarly adjust the schedule of most application events. For instance, you can set a Salesforce - New Record event to check for new records every Friday at 5pm rather than every 5 minutes.)</p>
                <p>The schedule goes into effect only after the flow has been turned on.</p>
                <p>Each Scheduled Flow card has the following&#160;outputs:</p>
                <ul>
                    <li>
                        <p><span class="uicontrol">Current Time</span> - the date and time that&#160;the current instance of the flow was initiated (in ISO UTC format). This can be passed to any text or date &amp; time input.</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">Execution ID</span> - the unique ID of&#160;the flow instance.</p>
                    </li>
                </ul>
            </div>
    </body>
</html>
