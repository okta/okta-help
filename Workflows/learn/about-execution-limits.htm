<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:onlyLocalStylesheets="False" MadCap:searchable="True" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link href="../../../Resources/TableStyles/standard.css" rel="stylesheet" MadCap:stylesheetType="table" /><title>[%=Heading.Level1%] | Okta</title>
        <link href="" rel="stylesheet" type="text/css" />
        <meta name="coveo:title" content="Return large record sets with streaming" />
        <meta name="coveo:method-description" content="Execution limits" />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Execution limits</h1>
            <p>Okta Workflows operates on a multi-tenant system and is a powerful and flexible platform for automating identity processes. It is designed, tested, and optimized for a growing set of lifecycle management, data synchronization, and task automation use cases.</p>
            <p>As a Workflows user, you will deploy and execute your flows successfully when they are optimized within the recommended platform's limits. For information on overall Workflows platform limits, see <MadCap:xref href="../workflows-system-limits.htm">Workflows system limits</MadCap:xref>.</p>
            <p>Excessive usage of Workflows resources may result in latency spikes that can affect the execution of your flows. "Excessive" is defined as usage or spikes that create resource contention which, in turn, impacts overall infrastructure performance. As a result, some flows become eligible for Okta's internal system limit analyzer which determines whether or not a flow requires throttling. </p>
            <h2><a name="FlowExecutions"></a>Flow executions</h2>
            <p>Flow executions can be throttled due to excessive usage of one or more of the following resources:</p>
            <table style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/standard.css');margin-left: 0;margin-right: auto;" class="TableStyle-standard" cellspacing="0">
                <col class="TableStyle-standard-Column-Column1" style="width: 20%;" />
                <col class="TableStyle-standard-Column-Column1" style="width: 30%;" />
                <col class="TableStyle-standard-Column-Column1" style="width: 50%;" />
                <thead>
                    <tr class="TableStyle-standard-Head-Header1">
                        <th class="TableStyle-standard-HeadF-Column1-Header1">
                            <p>Resource</p>
                        </th>
                        <th class="TableStyle-standard-HeadF-Column1-Header1">
                            <p>Definition</p>
                        </th>
                        <th class="TableStyle-standard-HeadD-Column1-Header1">
                            <p>Example</p>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="TableStyle-standard-Body-Body1">
                        <td class="TableStyle-standard-BodyF-Column1-Body1">CPU time</td>
                        <td class="TableStyle-standard-BodyF-Column1-Body1">Number of milliseconds that flows spend executing on engine worker threads. </td>
                        <td class="TableStyle-standard-BodyD-Column1-Body1">Flows which exceed CPU time limits may use highly nested child flow structures with nested iteration cards such as For Each, Map, or Reduce. Deeply nested iteration cards can cause the number of executions to grow exponentially.

</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body2">
                        <td class="TableStyle-standard-BodyF-Column1-Body2">Table requests</td>
                        <td class="TableStyle-standard-BodyF-Column1-Body2">Number of requests to a Workflows table.</td>
                        <td class="TableStyle-standard-BodyD-Column1-Body2">Flows with highly active events which also make requests to Tables function cards. 

</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body1">
                        <td class="TableStyle-standard-BodyF-Column1-Body1">Memory</td>
                        <td class="TableStyle-standard-BodyF-Column1-Body1">Quantity of bytes held in memory.</td>
                        <td class="TableStyle-standard-BodyD-Column1-Body1">
Flows which process large amounts of data. For example, flows that read a large number of users.</td>
                    </tr>
                    <tr class="TableStyle-standard-Body-Body2">
                        <td class="TableStyle-standard-BodyC-Column1-Body2">
                            <p>Helper flows</p>
                        </td>
                        <td class="TableStyle-standard-BodyC-Column1-Body2">
                            <p>Number of invoked helper flows.</p>
                        </td>
                        <td class="TableStyle-standard-BodyA-Column1-Body2">
                            <p>Deeply nested or recursive flows which invoke very large numbers of helper flows.</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <h2><a name="FlowThrottling"></a>Flow throttling</h2>
            <p>Flow throttling is a Workflows feature that automatically detects, limits, and notifies users when specific flows consume excessive resources during a defined window of time. Flow throttling does not impact or prevent the completion of a flow.</p>
            <p>When a flow execution is throttled, a warning dialog appears with the following message:</p>
            <p><span class="msgblock">Okta has identified that this flow has exceeded expected resource usage. This flow will complete, but the resource allocation for it has been limited.</span>
            </p>
            <p>It is important to review the flow that caused this warning and make necessary changes.</p>
            <p>This feature helps optimize performance in your Workflows environment while minimizing service disruptions that are caused by flows that are consuming excessive resources. While identifying such flows and making necessary modifications, you can still run other flows successfully with more predictability, improved uptime, and optimized performance.</p>
        </div>
    </body>
</html>