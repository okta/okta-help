<?xml version="1.0" encoding="utf-8"?>
<html MadCap:onlyLocalStylesheets="False" MadCap:searchable="True" MadCap:fileTags="Tags/okta-authors.Ian Hakes" xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Primary.review-only">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/learn/flow-structure.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <link href="" rel="stylesheet" type="text/css" />
        <meta name="coveo:title" content="Flow Structure" />
        <meta name="coveo:method-description" content="A Flow is a series of cards." />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Flow Structure</h1>
            <p>A flow is a series of cards. In a flow, the first card will always be an <span class="uicontrol">Event</span>. An Event must always precede Actions. In any flow, there is only one Event card.</p>
            <p>Every card after an Event is an Action. An action defines a task that your flow performs.</p>
            <p>When an Event occurs within your flow, the flow performs actions, one by one, from left to right.</p>
            <p>There are two types of Actions within Workflows: Application Actions, which pertain to the specific cloud application you are working with, and Function Actions, which allow you to control or manipulate data being returned from your Application Actions.</p>
            <h2>Working with Applications</h2>
            <p>The way Workflows works with your applications is through Events and Actions, such as Gmail, Salesforce, or Smartsheet.</p>
            <p>An application may contain many different unique Events and Actions. You can use these unique Events and Actions to build flows.</p>
            <h3>Events</h3>
            <p>There are three types of events: Application Events, Scheduled Events, and On Demand Events. When a flow will execute depends on the Event specified.</p>
            <p>With an Application Event, you can monitor for changes within your cloud application. When a change has been detected, the flow will execute.&#160; Scheduled Events allow you to execute a flow at a given interval. On Demand Events allow you to activate a flow internally or externally, depending on your needs.</p>
            <p>Examples of available Events:</p>
            <ul>
                <li>
                    <p><span class="uicontrol">Application</span>: When a new Customer is created in Salesforce</p>
                </li>
                <li>
                    <p><span class="uicontrol">Scheduled</span>: Every hour on the hour, execute this flow</p>
                </li>
                <li>
                    <p><span class="uicontrol">On Demand</span>: Execute this flow after a customer has filled out a webform or called an API endpoint</p>
                </li>
            </ul>
            <h3>Actions</h3>
            <p>Actions allow the flow to tell the cloud application to do something.</p>
            <p>Examples:</p>
            <ul>
                <li>
                    <p>Send an email through Gmail</p>
                </li>
                <li>
                    <p>Update a contact in Salesforce</p>
                </li>
                <li>
                    <p>Modify a row in Smartsheet</p>
                </li>
            </ul>
            <p>Each application has a unique set of Events and Actions, according to the capabilities of the cloud application.</p>
            <h3>Cards</h3>
            <p>The ability for an Action card to accept input, and then return a different output, is one of the most powerful features of Workflows.</p>
            <p>Each Card represents one specific step in a flow. Within a Card, there are two types of fields: input and output. Input fields accept values. Output fields are values that a card produces which can be used by subsequent cards.</p>
            <p>Here are a few examples of Action cards from Workflows:</p>
            <p>Each of these three cards is an Action from a specific application. In this case, it’s an Action card from the Twilio application, an Action card from the Twitter application, and an Action card from the Gmail application.</p>
            <p>The Twilio Action card contains two input fields: <span class="uicontrol">to</span> and <span class="uicontrol">body</span>. It also contains two output fields: <span class="uicontrol">sid</span> and <span class="uicontrol">dateCreated</span>.</p>
            <h3>Types of Actions</h3>
            <p>Remember: Flows are just Actions and Events. However, there are two categories of Actions: Application Actions and Function Actions.</p>
            <p>We’ve covered Application Actions, but we’ve yet to touch on the topic of Functions.</p>
            <p>A Function is a card that allows you to interact with, change, or control the data in your flow. Typically, a Function card is placed between Action cards.</p>
            <p>Categories of Function cards include (but are not limited to):</p>
            <ul>
                <li>
                    <p><span class="uicontrol">True/False</span>: Evaluate values based on true or false conditions</p>
                </li>
                <li>
                    <p><span class="uicontrol">Flow Control</span>: Manage and manipulate the structure of your flow</p>
                </li>
                <li>
                    <p><span class="uicontrol">Date &amp; Time</span>: Parse and manipulate times and dates</p>
                </li>
                <li>
                    <p><span class="uicontrol">List</span>: Create and iterate over lists of items</p>
                </li>
                <li>
                    <p><span class="uicontrol">Number</span>: Perform mathematical operations</p>
                </li>
                <li>
                    <p><span class="uicontrol">Text</span>: Build, modify, and parse text</p>
                </li>
            </ul>
            <h3>Example</h3>
            <p>A simple flow that uses Functions might use a card within the Branching category of Functions, <span class="wintitle">Continue If</span>, to determine whether or not a flow should continue, based on a specific condition.</p>
            <p>Or, the function <span class="uicontrol">Compose</span> within the Text category, which allows you to compose a new message that contains output fields from other cards.</p>
            <p>Functions such as these can be chained together to create complex interactions between your cards, providing a useful paradigm that allows you to create powerful flows.</p>
            <h3>Complex flows</h3>
            <p>The diagram below represents almost all the building blocks necessary to create complex flows.</p>
            <p>Let’s unpack this diagram, step-by-step:</p>
            <ul>
                <li>
                    <p>An Event card from a specific application generates a set of outputs, Output A through Output G.</p>
                </li>
                <li>
                    <p>Output B and Output F from the Event card are used as inputs for Action card #1. As a result, Action card #1 generates Output X, Y, and Z.</p>
                </li>
                <li>
                    <p>Output G from the Event card, and Output Y from Action card #1, are used as inputs to Action card #2.</p>
                </li>
            </ul>
            <p>Every element inside of a flow is a card. Every card is one of three things: Event or Action. When thinking about how to design a flow, it’s useful to remember this.</p>
            <p>Flows are just series of inputs and outputs. Something goes in, something comes out.</p>
            <h2>See Also</h2>
            <p>In <MadCap:xref href="#">Flow Structure</MadCap:xref>, you can learn about Types inside Designer. This is a fundamental concept that will help you understand how data is manipulated and moved during its lifecycle.</p>
        </div>
    </body>
</html>