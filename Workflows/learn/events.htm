<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:fileTags="Tags/okta-authors.Ian Hakes" MadCap:conditions="Primary.review-only">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/learn/events.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <meta name="coveo:title" content="Learn about events" />
        <meta name="coveo:method-description" content="A Flow is a series of cards that run from left-to-right." />
    </head>
    <body>
        
        
            <div data-content-id="hoc-main-content">
                <h1>Learn about events</h1>
                <p>A flow is a series of cards that run from left-to-right. The <span class="uicontrol">Event</span>, when you provide one, is always the first card. Flows with an event trigger automatically (after the flow has been turned on) based on the type of event.</p>
                <p>The different types of events are:</p>
                <ul>
                    <li>
                        <p><span class="uicontrol">Application Events</span> - The flow runs automatically based on an application event, e.g. when there is new email, a new customer, a spreadsheet is updated, a deal is closed, or any of hundreds of application events to choose from, with new ones added every month.</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">Schedule</span> -&#160;Flow runs on a schedule, e.g. runs every hour, once a day, Mondays at 9am, or on a custom schedule of your choice.</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">Form</span> - Flow runs each time a user clicks <span class="uicontrol">Submit</span> on a simple, custom web form.</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">Helper flow</span> -&#160;Flow runs when called from another flow, such as to process a list or handle errors. (These don't count against your active flow limit.)</p>
                    </li>
                    <li>
                        <p><span class="uicontrol">API Endpoint</span> - Flow runs when invoked via an HTTP call using inputs that you specify.</p>
                    </li>
                </ul>
                <p>Event cards have output fields that can be used to pass data from the event to other steps in the flow for further action. For example, if your flow's event is New Email in Gmail, then the flow will kick off once for every new email you receive. The outputs of the event card are assigned values based on each new email -- e.g. From, Subject, Body, etc. -- that you can take action on, such as looking up to see if the email &#160;address is already in your customer database, checking to see if the subject line contains a special keyword, or whatever is necessary to automate your custom process. You can manipulate the data with built-in text, math, object and list functions and add custom logic and branching to handle different conditions -- all without having to write code.</p>
                <p>To do this, add your additional Action and Function cards after the Event, and then drag output fields and drop them into input fields inside subsequent cards, as pictured above. When the flow runs, the output values for each instance will pass into the inputs for the later steps.</p>
                <p><span class="uicontrol">Advanced Event settings</span>
                </p>
                <p>Using the buttons on the bottom of the event card, you can customize the event in the following ways:</p>
                <ul>
                    <li><span class="uicontrol">Change how often to check for new data</span> - Most events poll the connected application for new data every 5 minutes by default (e.g. checking Twitter to see if there have been any new Tweets). You can change the polling schedule to a custom schedule, such as every hour or once a day. </li>
                </ul>
                <p>Note: events that are labeled "webhook" work differently: &#160;These flows are called directly by the application immediately after there is new data, so webhook events don't support custom schedules.</p>
            </div>
    </body>
</html>
