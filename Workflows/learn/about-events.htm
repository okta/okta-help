<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:onlyLocalStylesheets="False" MadCap:searchable="True" MadCap:fileTags="Tags/okta-authors.Ian Hakes">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/learn/about-events.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <link href="" rel="stylesheet" type="text/css" />
        <meta name="coveo:title" content="About Events" />
        <meta name="coveo:method-description" content="Events are occurrences that trigger Flows to run." />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Events</h1>
            <p>Events are occurrences that trigger flows to run. For example, a flow would run every time an issue is created in Jira. </p>
            <p MadCap:conditions="Primary.do-not-publish">Event cards pass data from the third-party service to the flow in the form of drag-and-drop outputs.</p>
            <p>There are three types of events:</p>
            <ul>
                <li><span class="uicontrol">Application events</span>: Monitor for changes within your cloud application. When a change has been detected, the flow will execute. </li>
                <li><span class="uicontrol">Scheduled events</span>: Scheduled events allow you to execute a flow at a given interval.</li>
                <li><span class="uicontrol">On demand events</span>: On demand events allow you to activate a flow internally or externally.</li>
            </ul>
            <p MadCap:conditions="Primary.do-not-publish">Examples of events:</p>
            <ul MadCap:conditions="Primary.do-not-publish">
                <li>Application: When a new Customer is created in Salesforce</li>
                <li>
                    <p>Scheduled: Every hour on the hour, execute this flow</p>
                    <p>On Demand: Execute this flow after a customer has filled out a webform or called an API endpoint</p>
                </li>
            </ul>
            <h2>Application events</h2>
            <p>Application events occur when something happens in Okta or an external application. For example:</p>
            <ul>
                <li>A user is added to an application in Okta</li>
                <li>A new customer is created in Salesforce</li>
                <li>A new row is added to a Google Sheet</li>
            </ul>
            <p>Many application events, including those from Okta, are triggered in response to an incoming webhook. The external system makes an HTTP call to Workflows immediately when the specified event occurs.</p>
            <p>Other application events check a given service for new or updated records on a recurring schedule. Most of these cards poll the connected application for new data every five minutes by default. But by using the event card options, you can change the polling schedule to a custom schedule. See <MadCap:xref href="../build/set-schedule-options.htm">Set schedule options</MadCap:xref>.</p>
            <h2>Scheduled events</h2>
            <p>Scheduled events allow you to execute a flow at a given interval. This type of event can be used to poll a web service for new or changed records, or to run a periodic process such as a nightly report.</p>
            <h2>On demand flows</h2>
            <p>On demand flows are executed in response to a customer or system calling an API endpoint. Within Okta, this is typically used when calling a flow from an Inline Hook. It can also be used to invoke flows from a third-party system that doesn't have an out-of-the-box event available in its connector.</p>
            <p MadCap:conditions="Primary.do-not-publish">Flows can be triggered when they are called from another flow. In such cases, there is a parent-child relationship to two or more flows.</p>
            <p MadCap:conditions="Primary.do-not-publish">Flows can also run when they are invoked via an HTTP call using inputs that you specify. </p>
            <p MadCap:conditions="Primary.do-not-publish">Application events that monitor for a specific process check a given service for new or updated records on a recurring schedule.  Workflows allows you to schedule these as often as every five minutes. This is the most common type of event in the Workflows platform. The connector stores a "since" value to use when querying for new or updated data in a third-party service.</p>
            <h2>Event outputs</h2>
            <p>Event cards have output fields that can be used to pass data from the event to other steps in the flow for further action. For example, if your flow's event is User Added to Application in Okta, then the flow will kick off once for each user that is added to the specified application. The outputs of the event card  are assigned values based on properties of the Okta event, such as the user's username, the application name, and the time when the event happened.  You can manipulate the data with built-in text, math, object and list functions and add custom logic and branching to handle different conditions through additional cards in the flow.</p>
            <h2 MadCap:conditions="Primary.do-not-publish">Advanced event settings</h2>
            <p MadCap:conditions="Primary.do-not-publish">Using the buttons on the bottom of the event card, you can customize the event by changing how often new data records are polled.  For example, you can change how often to check for new messages in a Slack channel. Most events poll the connected application for new data every five minutes by default. You can change the polling schedule to a custom schedule, such as every hour or once a day.</p>
            <div class="noteOkta" MadCap:conditions="Primary.do-not-publish">
                <img src="../../../Resources/Images/assets/Icons/Notes/Help.png" class="noteImgFloat" title="Important Note" alt="Important Note" />
                <p class="noteHeading">Important</p>
                <p class="noteContent"> Events that are labeled "webhook" work differently. Flows that use webooks as events are called directly by the application immediately after there is new data. Webhook events don't support custom schedules</p>
            </div>
            <h2>Related topics</h2>
            <p>
                <MadCap:xref href="../build/set-monitor-options.htm">Set data exchange options</MadCap:xref>
            </p>
            <p>
                <MadCap:xref href="about-application-function-actions.htm">About application and function Actions</MadCap:xref>
            </p>
            <p>
                <MadCap:xref href="about-cards.htm">About cards in flows</MadCap:xref>
            </p>
        </div>
    </body>
</html>