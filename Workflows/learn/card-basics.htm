<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:onlyLocalStylesheets="False" MadCap:searchable="True" MadCap:fileTags="Tags/okta-authors.Ian Hakes" MadCap:conditions="Primary.do-not-publish">
    <head>
        <link rel="canonical" href="https://help.okta.com/wf/en-us/Content/Topics/Workflows/learn/card-basics.htm" /><title>[%=Heading.Level1%] | Okta</title>
        <link href="" rel="stylesheet" type="text/css" />
        <meta name="coveo:title" content="Card Basics - Configuring Cards for Use in a Flow" />
        <meta name="coveo:method-description" content="A Flow is made up of steps represented by cards." />
    </head>
    <body>
        <div data-content-id="hoc-main-content">
            <h1>Card Basics - Configuring Cards for Use in a Flow</h1>
            <p>A Flow is made up of steps represented by cards. Each card represents one specific action that is completed before progressing to the next step in the Flow. For a higher level overview of how it works, see [Getting Started]({{&lt; relref "/quickstart/lets-get-started/00-introduction.md" &gt;}}).</p>
            <h4>Connection and Options</h4>
            <p>Many cards require you to first choose a Connection and Options in order to use the card.</p>
            <p>Examples:</p>
            <ul>
                <li>
                    <p>The <code>Create Record</code> Action for Salesforce requires a connection and a requires a <code>Record Type</code> option choice.</p>
                </li>
                <li>
                    <p>The <code>New Email</code> Event for Gmail requires a connection but has no options.</p>
                </li>
                <li>
                    <p>The <code>Add</code> Function in the Math category requires no connection and has no options to choose from.</p>
                </li>
            </ul>
            <p>When first adding a card, you'll be prompted to choose a Connection if one is needed. If you've already used a connection for the chosen application, that connection will be chosen by default. If any Options are required, you'll also be prompted for those before you continue.</p>
            <p>Once a Connection and Options are chosen, you can edit them by clicking the name of the Connection at the top of the card or by clicking <code>Options</code> just below that. If a Connection is not working or any required Options are missing, a red icon will show to the left of the name. A green check indicates the connection is healthy and all required options have been provided.</p>
            <p>Additionally, when setting up some cards (e.g. <code>Add Row</code> for a spreadsheet) you may be prompted to choose which fields you would like to operate on. There could be hundreds of fields to choose from (e.g. column names or database fields). Use the <code>Filter Fields</code> button at the bottom of the card to search for particular fields. You can edit your choices later by clicking the gear at the bottom right of the card and choosing the <code>Choose fields</code> command. (Both buttons are explained below.)</p>
            <h4>Inputs and Outputs</h4>
            <p>Once a Card has been set up with any required Connection and Options, you'll see the card's Input and Output fields.</p>
            <p>Input fields accept values. These values determine how an App Action or Function will proceed. For instance, for a <code>Send Email</code> action, there are input fields for <code>To:</code>, <code>Subject:</code> and <code>Message Body</code>. For a <code>Replace</code> function, there are input fields for the text to <code>look in</code>, the text to <code>look for</code> and the text to <code>replace with</code>.</p>
            <p>Output fields are assigned values after an Event, Action or Function runs. For instance, for the <code>Replace</code> function there's an ouput that has the new text value after the replacements are made. For a Salesforce <code>New Record</code> event, there's an output for the <code>id</code> of the newly created record.</p>
            <p>A powerful feature of Flows is the ability to map the output field from one step to the input field of another step. For instance, you can drag an <code>email name</code> output from a <code>Read Customer</code> action and drop it into the input field of a <code>Send Email</code> action. Every time the Flow runs, the email from that specific customer will be used as the address to send the email to. Chain together multiple cards and map outputs to inputs to build Flows that tranform data, use logic to decide on next steps, and take actions using that data.</p>
            <h4>Custom Fields</h4>
            <p>Many cards allow you to create custom input and output fields. When available, you'll see a grayed out version of a field that says "Click or drag to create" (for a custom output) or "Click or drop to create" (for a custom input). You can click and type a unique name for the field. Or, if you drag an output to an input, the custom field will pick up the name and type of the origin or destination. For instance, the Math-Add function comes with two inputs already set, but you can add additional inputs to add more than two numbers at once.</p>
            <h4>Field Types</h4>
            <p>All input and output fields have a type. There are five basic types in Designer: <span class="uicontrol">Text</span>, <span class="uicontrol">Number</span>, <span class="uicontrol">True/False</span>, <span class="uicontrol">Date &amp; Time</span>, and <span class="uicontrol">File</span>. Plus, there are two special types,&#160;<span class="uicontrol">Object</span>&#160;and <span class="uicontrol">List</span>, that are composites of the other types. An object is a collection of keys and values where each value can be a different&#160;type, such as a Customer object that could be made up of First Name (text), Last Name (text), ID (number), and Sign Up (Date &amp; Time). A list is a collection of items all of the same type, such as a list of numbers or a list of objects.</p>
            <p>If you are seeing errors in your Flow, one of the first things to check is the types of your fields. For instance, "1", "19" and "2" will sort differently if they are set to type Text versus Number. For an input field, the card will try to automatically convert any incoming value to the input field's&#160;type. For custom output fields, you must set the type&#160;correctly or you may encounter errors with your Flow (e.g. if you define your API to accept a number but pass it an object).</p>
            <p>To learn more about types, see [Getting Started - Types]({{&lt; relref "/quickstart/lets-get-started/03-types.md" &gt;}}).</p>
            <h4>Additional Card Options</h4>
            <p>Along the bottom of each card, you'll see a set of buttons with available options, including:</p>
            <ul>
                <li>
                    <p><span class="uicontrol">Help</span>: &#160;The "?" icon. Provides a help topic specific to that card.</p>
                </li>
                <li>
                    <p><span class="uicontrol">Test This Card</span>: &#160;(for action and function cards only) Allows you to provide sample input values and see the resulting output.</p>
                </li>
                <li>
                    <p><span class="uicontrol">Monitor Options</span>: &#160;(for application event cards only) Let's you set your event to trigger once for all new records (rather than once for each record) or trigger only when no records are found.</p>
                </li>
                <li>
                    <p><span class="uicontrol">Schedule Options</span>: &#160;(for non-webhook application and schedule events only) Controls how often to check for new data or run the Flow.</p>
                </li>
                <li>
                    <p><span class="uicontrol">Endpoint Settings</span>: &#160;(for API Endpoint event cards only) Allows you to choose a security level and provides the URL for invoking the endpoint.</p>
                </li>
                <li>
                    <p><span class="uicontrol">Form Settings</span>: &#160;(for Form event cards only) Provides the details for accessing the form via URL or embedding it into a page.</p>
                </li>
                <li>
                    <p><span class="uicontrol">Filter Fields</span>: Useful for cards that have many fields, such as a Salesforce record that could have hundreds. Lets you filter the view to only show fields that match the text you type.</p>
                </li>
            </ul>
            <p>Additionally, there is a <span class="uicontrol">gear</span> button at the bottom-right with <span class="uicontrol">Other Options</span>:</p>
            <ul>
                <li>
                    <p><span class="uicontrol">Edit card</span>: &#160;When in customize mode, you can rename the card (great for documentation) and rename or reorder fields.</p>
                </li>
                <li>
                    <p><span class="uicontrol">Choose fields</span> : Allows you to turn on or off fields that appear on the card. This is useful for cards that have many fields, possibly hundreds, where you only need access to some of them.</p>
                </li>
                <li>
                    <p><span class="uicontrol">Error handling</span>: &#160;Gives access to error options such as automatic retry or running an error handling Flow when the card fails.</p>
                </li>
            </ul>
        </div>
    </body>
</html>